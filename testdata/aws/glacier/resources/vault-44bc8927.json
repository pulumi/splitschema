{
            "properties": {
                "accessPolicy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string.\nThe heredoc syntax or `file` function is helpful here. Use the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html) for more information on Glacier Vault Policy\n"
                },
                "arn": {
                    "type": "string",
                    "description": "The ARN of the vault.\n"
                },
                "location": {
                    "type": "string",
                    "description": "The URI of the vault that was created.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).\n"
                },
                "notification": {
                    "$ref": "#/types/aws:glacier/VaultNotification:VaultNotification",
                    "description": "The notifications for the Vault. Fields documented below.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                }
            },
            "required": [
                "arn",
                "location",
                "name",
                "tagsAll"
            ],
            "inputProperties": {
                "accessPolicy": {
                    "type": "string",
                    "description": "The policy document. This is a JSON formatted string.\nThe heredoc syntax or `file` function is helpful here. Use the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html) for more information on Glacier Vault Policy\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).\n",
                    "willReplaceOnChanges": true
                },
                "notification": {
                    "$ref": "#/types/aws:glacier/VaultNotification:VaultNotification",
                    "description": "The notifications for the Vault. Fields documented below.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vault resources.\n",
                "properties": {
                    "accessPolicy": {
                        "type": "string",
                        "description": "The policy document. This is a JSON formatted string.\nThe heredoc syntax or `file` function is helpful here. Use the [Glacier Developer Guide](https://docs.aws.amazon.com/amazonglacier/latest/dev/vault-access-policy.html) for more information on Glacier Vault Policy\n"
                    },
                    "arn": {
                        "type": "string",
                        "description": "The ARN of the vault.\n"
                    },
                    "location": {
                        "type": "string",
                        "description": "The URI of the vault that was created.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the Vault. Names can be between 1 and 255 characters long and the valid characters are a-z, A-Z, 0-9, '_' (underscore), '-' (hyphen), and '.' (period).\n",
                        "willReplaceOnChanges": true
                    },
                    "notification": {
                        "$ref": "#/types/aws:glacier/VaultNotification:VaultNotification",
                        "description": "The notifications for the Vault. Fields documented below.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    }
                },
                "type": "object"
            }
        }