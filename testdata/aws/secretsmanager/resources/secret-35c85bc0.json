{
    "properties": {
        "arn": {
            "type": "string",
            "description": "ARN of the secret.\n"
        },
        "description": {
            "type": "string",
            "description": "Description of the secret.\n"
        },
        "forceOverwriteReplicaSecret": {
            "type": "boolean",
            "description": "Accepts boolean value to specify whether to overwrite a secret with the same name in the destination Region.\n"
        },
        "kmsKeyId": {
            "type": "string",
            "description": "ARN or Id of the AWS KMS key to be used to encrypt the secret values in the versions stored in this secret. If you need to reference a CMK in a different account, you can use only the key ARN. If you don't specify this value, then Secrets Manager defaults to using the AWS account's default KMS key (the one named `aws/secretsmanager`). If the default KMS key with that name doesn't yet exist, then AWS Secrets Manager creates it for you automatically the first time.\n"
        },
        "name": {
            "type": "string",
            "description": "Friendly name of the new secret. The secret name can consist of uppercase letters, lowercase letters, digits, and any of the following characters: `/_+=.@-` Conflicts with `name_prefix`.\n"
        },
        "namePrefix": {
            "type": "string",
            "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n"
        },
        "policy": {
            "type": "string",
            "description": "Valid JSON document representing a [resource policy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html). Removing `policy` from your configuration or setting `policy` to null or an empty string (i.e., `policy = \"\"`) _will not_ delete the policy since it could have been set by `aws.secretsmanager.SecretPolicy`. To delete the `policy`, set it to `\"{}\"` (an empty JSON document).\n"
        },
        "recoveryWindowInDays": {
            "type": "integer",
            "description": "Number of days that AWS Secrets Manager waits before it can delete the secret. This value can be `0` to force deletion without recovery or range from `7` to `30` days. The default value is `30`.\n"
        },
        "replicas": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:secretsmanager/SecretReplica:SecretReplica"
            },
            "description": "Configuration block to support secret replication. See details below.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Key-value map of user-defined tags that are attached to the secret. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        }
    },
    "required": [
        "arn",
        "name",
        "namePrefix",
        "policy",
        "replicas",
        "tagsAll"
    ],
    "inputProperties": {
        "description": {
            "type": "string",
            "description": "Description of the secret.\n"
        },
        "forceOverwriteReplicaSecret": {
            "type": "boolean",
            "description": "Accepts boolean value to specify whether to overwrite a secret with the same name in the destination Region.\n"
        },
        "kmsKeyId": {
            "type": "string",
            "description": "ARN or Id of the AWS KMS key to be used to encrypt the secret values in the versions stored in this secret. If you need to reference a CMK in a different account, you can use only the key ARN. If you don't specify this value, then Secrets Manager defaults to using the AWS account's default KMS key (the one named `aws/secretsmanager`). If the default KMS key with that name doesn't yet exist, then AWS Secrets Manager creates it for you automatically the first time.\n"
        },
        "name": {
            "type": "string",
            "description": "Friendly name of the new secret. The secret name can consist of uppercase letters, lowercase letters, digits, and any of the following characters: `/_+=.@-` Conflicts with `name_prefix`.\n",
            "willReplaceOnChanges": true
        },
        "namePrefix": {
            "type": "string",
            "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n",
            "willReplaceOnChanges": true
        },
        "policy": {
            "type": "string",
            "description": "Valid JSON document representing a [resource policy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html). Removing `policy` from your configuration or setting `policy` to null or an empty string (i.e., `policy = \"\"`) _will not_ delete the policy since it could have been set by `aws.secretsmanager.SecretPolicy`. To delete the `policy`, set it to `\"{}\"` (an empty JSON document).\n"
        },
        "recoveryWindowInDays": {
            "type": "integer",
            "description": "Number of days that AWS Secrets Manager waits before it can delete the secret. This value can be `0` to force deletion without recovery or range from `7` to `30` days. The default value is `30`.\n"
        },
        "replicas": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:secretsmanager/SecretReplica:SecretReplica"
            },
            "description": "Configuration block to support secret replication. See details below.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Key-value map of user-defined tags that are attached to the secret. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        }
    },
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Secret resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "ARN of the secret.\n"
            },
            "description": {
                "type": "string",
                "description": "Description of the secret.\n"
            },
            "forceOverwriteReplicaSecret": {
                "type": "boolean",
                "description": "Accepts boolean value to specify whether to overwrite a secret with the same name in the destination Region.\n"
            },
            "kmsKeyId": {
                "type": "string",
                "description": "ARN or Id of the AWS KMS key to be used to encrypt the secret values in the versions stored in this secret. If you need to reference a CMK in a different account, you can use only the key ARN. If you don't specify this value, then Secrets Manager defaults to using the AWS account's default KMS key (the one named `aws/secretsmanager`). If the default KMS key with that name doesn't yet exist, then AWS Secrets Manager creates it for you automatically the first time.\n"
            },
            "name": {
                "type": "string",
                "description": "Friendly name of the new secret. The secret name can consist of uppercase letters, lowercase letters, digits, and any of the following characters: `/_+=.@-` Conflicts with `name_prefix`.\n",
                "willReplaceOnChanges": true
            },
            "namePrefix": {
                "type": "string",
                "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`.\n",
                "willReplaceOnChanges": true
            },
            "policy": {
                "type": "string",
                "description": "Valid JSON document representing a [resource policy](https://docs.aws.amazon.com/secretsmanager/latest/userguide/auth-and-access_resource-based-policies.html). Removing `policy` from your configuration or setting `policy` to null or an empty string (i.e., `policy = \"\"`) _will not_ delete the policy since it could have been set by `aws.secretsmanager.SecretPolicy`. To delete the `policy`, set it to `\"{}\"` (an empty JSON document).\n"
            },
            "recoveryWindowInDays": {
                "type": "integer",
                "description": "Number of days that AWS Secrets Manager waits before it can delete the secret. This value can be `0` to force deletion without recovery or range from `7` to `30` days. The default value is `30`.\n"
            },
            "replicas": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:secretsmanager/SecretReplica:SecretReplica"
                },
                "description": "Configuration block to support secret replication. See details below.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Key-value map of user-defined tags that are attached to the secret. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            }
        },
        "type": "object"
    }
}