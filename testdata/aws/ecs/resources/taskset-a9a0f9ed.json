{
    "properties": {
        "arn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) that identifies the task set.\n"
        },
        "capacityProviderStrategies": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ecs/TaskSetCapacityProviderStrategy:TaskSetCapacityProviderStrategy"
            },
            "description": "The capacity provider strategy to use for the service. Can be one or more.  Defined below.\n"
        },
        "cluster": {
            "type": "string",
            "description": "The short name or ARN of the cluster that hosts the service to create the task set in.\n"
        },
        "externalId": {
            "type": "string",
            "description": "The external ID associated with the task set.\n"
        },
        "forceDelete": {
            "type": "boolean",
            "description": "Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it's in the process of scaling a resource. Normally, the provider drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling.\n"
        },
        "launchType": {
            "type": "string",
            "description": "The launch type on which to run your service. The valid values are `EC2`, `FARGATE`, and `EXTERNAL`. Defaults to `EC2`.\n"
        },
        "loadBalancers": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ecs/TaskSetLoadBalancer:TaskSetLoadBalancer"
            },
            "description": "Details on load balancers that are used with a task set. Detailed below.\n"
        },
        "networkConfiguration": {
            "$ref": "#/types/aws:ecs/TaskSetNetworkConfiguration:TaskSetNetworkConfiguration",
            "description": "The network configuration for the service. This parameter is required for task definitions that use the `awsvpc` network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. Detailed below.\n"
        },
        "platformVersion": {
            "type": "string",
            "description": "The platform version on which to run your service. Only applicable for `launch_type` set to `FARGATE`. Defaults to `LATEST`. More information about Fargate platform versions can be found in the [AWS ECS User Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).\n"
        },
        "scale": {
            "$ref": "#/types/aws:ecs/TaskSetScale:TaskSetScale",
            "description": "A floating-point percentage of the desired number of tasks to place and keep running in the task set. Detailed below.\n"
        },
        "service": {
            "type": "string",
            "description": "The short name or ARN of the ECS service.\n"
        },
        "serviceRegistries": {
            "$ref": "#/types/aws:ecs/TaskSetServiceRegistries:TaskSetServiceRegistries",
            "description": "The service discovery registries for the service. The maximum number of `service_registries` blocks is `1`. Detailed below.\n"
        },
        "stabilityStatus": {
            "type": "string",
            "description": "The stability status. This indicates whether the task set has reached a steady state.\n"
        },
        "status": {
            "type": "string",
            "description": "The status of the task set.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "taskDefinition": {
            "type": "string",
            "description": "The family and revision (`family:revision`) or full ARN of the task definition that you want to run in your service.\n\nThe following arguments are optional:\n"
        },
        "taskSetId": {
            "type": "string",
            "description": "The ID of the task set.\n"
        },
        "waitUntilStable": {
            "type": "boolean",
            "description": "Whether the provider should wait until the task set has reached `STEADY_STATE`.\n"
        },
        "waitUntilStableTimeout": {
            "type": "string",
            "description": "Wait timeout for task set to reach `STEADY_STATE`. Valid time units include `ns`, `us` (or `Âµs`), `ms`, `s`, `m`, and `h`. Default `10m`.\n"
        }
    },
    "required": [
        "arn",
        "cluster",
        "externalId",
        "launchType",
        "platformVersion",
        "scale",
        "service",
        "stabilityStatus",
        "status",
        "tagsAll",
        "taskDefinition",
        "taskSetId"
    ],
    "inputProperties": {
        "capacityProviderStrategies": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ecs/TaskSetCapacityProviderStrategy:TaskSetCapacityProviderStrategy"
            },
            "description": "The capacity provider strategy to use for the service. Can be one or more.  Defined below.\n",
            "willReplaceOnChanges": true
        },
        "cluster": {
            "type": "string",
            "description": "The short name or ARN of the cluster that hosts the service to create the task set in.\n",
            "willReplaceOnChanges": true
        },
        "externalId": {
            "type": "string",
            "description": "The external ID associated with the task set.\n",
            "willReplaceOnChanges": true
        },
        "forceDelete": {
            "type": "boolean",
            "description": "Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it's in the process of scaling a resource. Normally, the provider drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling.\n"
        },
        "launchType": {
            "type": "string",
            "description": "The launch type on which to run your service. The valid values are `EC2`, `FARGATE`, and `EXTERNAL`. Defaults to `EC2`.\n",
            "willReplaceOnChanges": true
        },
        "loadBalancers": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ecs/TaskSetLoadBalancer:TaskSetLoadBalancer"
            },
            "description": "Details on load balancers that are used with a task set. Detailed below.\n",
            "willReplaceOnChanges": true
        },
        "networkConfiguration": {
            "$ref": "#/types/aws:ecs/TaskSetNetworkConfiguration:TaskSetNetworkConfiguration",
            "description": "The network configuration for the service. This parameter is required for task definitions that use the `awsvpc` network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. Detailed below.\n",
            "willReplaceOnChanges": true
        },
        "platformVersion": {
            "type": "string",
            "description": "The platform version on which to run your service. Only applicable for `launch_type` set to `FARGATE`. Defaults to `LATEST`. More information about Fargate platform versions can be found in the [AWS ECS User Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).\n",
            "willReplaceOnChanges": true
        },
        "scale": {
            "$ref": "#/types/aws:ecs/TaskSetScale:TaskSetScale",
            "description": "A floating-point percentage of the desired number of tasks to place and keep running in the task set. Detailed below.\n"
        },
        "service": {
            "type": "string",
            "description": "The short name or ARN of the ECS service.\n",
            "willReplaceOnChanges": true
        },
        "serviceRegistries": {
            "$ref": "#/types/aws:ecs/TaskSetServiceRegistries:TaskSetServiceRegistries",
            "description": "The service discovery registries for the service. The maximum number of `service_registries` blocks is `1`. Detailed below.\n",
            "willReplaceOnChanges": true
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.\n"
        },
        "taskDefinition": {
            "type": "string",
            "description": "The family and revision (`family:revision`) or full ARN of the task definition that you want to run in your service.\n\nThe following arguments are optional:\n",
            "willReplaceOnChanges": true
        },
        "waitUntilStable": {
            "type": "boolean",
            "description": "Whether the provider should wait until the task set has reached `STEADY_STATE`.\n"
        },
        "waitUntilStableTimeout": {
            "type": "string",
            "description": "Wait timeout for task set to reach `STEADY_STATE`. Valid time units include `ns`, `us` (or `Âµs`), `ms`, `s`, `m`, and `h`. Default `10m`.\n"
        }
    },
    "requiredInputs": [
        "cluster",
        "service",
        "taskDefinition"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering TaskSet resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "The Amazon Resource Name (ARN) that identifies the task set.\n"
            },
            "capacityProviderStrategies": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:ecs/TaskSetCapacityProviderStrategy:TaskSetCapacityProviderStrategy"
                },
                "description": "The capacity provider strategy to use for the service. Can be one or more.  Defined below.\n",
                "willReplaceOnChanges": true
            },
            "cluster": {
                "type": "string",
                "description": "The short name or ARN of the cluster that hosts the service to create the task set in.\n",
                "willReplaceOnChanges": true
            },
            "externalId": {
                "type": "string",
                "description": "The external ID associated with the task set.\n",
                "willReplaceOnChanges": true
            },
            "forceDelete": {
                "type": "boolean",
                "description": "Whether to allow deleting the task set without waiting for scaling down to 0. You can force a task set to delete even if it's in the process of scaling a resource. Normally, the provider drains all the tasks before deleting the task set. This bypasses that behavior and potentially leaves resources dangling.\n"
            },
            "launchType": {
                "type": "string",
                "description": "The launch type on which to run your service. The valid values are `EC2`, `FARGATE`, and `EXTERNAL`. Defaults to `EC2`.\n",
                "willReplaceOnChanges": true
            },
            "loadBalancers": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:ecs/TaskSetLoadBalancer:TaskSetLoadBalancer"
                },
                "description": "Details on load balancers that are used with a task set. Detailed below.\n",
                "willReplaceOnChanges": true
            },
            "networkConfiguration": {
                "$ref": "#/types/aws:ecs/TaskSetNetworkConfiguration:TaskSetNetworkConfiguration",
                "description": "The network configuration for the service. This parameter is required for task definitions that use the `awsvpc` network mode to receive their own Elastic Network Interface, and it is not supported for other network modes. Detailed below.\n",
                "willReplaceOnChanges": true
            },
            "platformVersion": {
                "type": "string",
                "description": "The platform version on which to run your service. Only applicable for `launch_type` set to `FARGATE`. Defaults to `LATEST`. More information about Fargate platform versions can be found in the [AWS ECS User Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).\n",
                "willReplaceOnChanges": true
            },
            "scale": {
                "$ref": "#/types/aws:ecs/TaskSetScale:TaskSetScale",
                "description": "A floating-point percentage of the desired number of tasks to place and keep running in the task set. Detailed below.\n"
            },
            "service": {
                "type": "string",
                "description": "The short name or ARN of the ECS service.\n",
                "willReplaceOnChanges": true
            },
            "serviceRegistries": {
                "$ref": "#/types/aws:ecs/TaskSetServiceRegistries:TaskSetServiceRegistries",
                "description": "The service discovery registries for the service. The maximum number of `service_registries` blocks is `1`. Detailed below.\n",
                "willReplaceOnChanges": true
            },
            "stabilityStatus": {
                "type": "string",
                "description": "The stability status. This indicates whether the task set has reached a steady state.\n"
            },
            "status": {
                "type": "string",
                "description": "The status of the task set.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the file system. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level. If you have set `copy_tags_to_backups` to true, and you specify one or more tags, no existing file system tags are copied from the file system to the backup.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "taskDefinition": {
                "type": "string",
                "description": "The family and revision (`family:revision`) or full ARN of the task definition that you want to run in your service.\n\nThe following arguments are optional:\n",
                "willReplaceOnChanges": true
            },
            "taskSetId": {
                "type": "string",
                "description": "The ID of the task set.\n"
            },
            "waitUntilStable": {
                "type": "boolean",
                "description": "Whether the provider should wait until the task set has reached `STEADY_STATE`.\n"
            },
            "waitUntilStableTimeout": {
                "type": "string",
                "description": "Wait timeout for task set to reach `STEADY_STATE`. Valid time units include `ns`, `us` (or `Âµs`), `ms`, `s`, `m`, and `h`. Default `10m`.\n"
            }
        },
        "type": "object"
    }
}