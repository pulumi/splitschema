{
    "properties": {
        "arn": {
            "type": "string",
            "description": "The Neptune Cluster Endpoint Amazon Resource Name (ARN).\n"
        },
        "clusterEndpointIdentifier": {
            "type": "string",
            "description": "The identifier of the endpoint.\n"
        },
        "clusterIdentifier": {
            "type": "string",
            "description": "The DB cluster identifier of the DB cluster associated with the endpoint.\n"
        },
        "endpoint": {
            "type": "string",
            "description": "The DNS address of the endpoint.\n"
        },
        "endpointType": {
            "type": "string",
            "description": "The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.\n"
        },
        "excludedMembers": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.\n"
        },
        "staticMembers": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of DB instance identifiers that are part of the custom endpoint group.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        }
    },
    "required": [
        "arn",
        "clusterEndpointIdentifier",
        "clusterIdentifier",
        "endpoint",
        "endpointType",
        "tagsAll"
    ],
    "inputProperties": {
        "clusterEndpointIdentifier": {
            "type": "string",
            "description": "The identifier of the endpoint.\n",
            "willReplaceOnChanges": true
        },
        "clusterIdentifier": {
            "type": "string",
            "description": "The DB cluster identifier of the DB cluster associated with the endpoint.\n",
            "willReplaceOnChanges": true
        },
        "endpointType": {
            "type": "string",
            "description": "The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.\n",
            "willReplaceOnChanges": true
        },
        "excludedMembers": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.\n"
        },
        "staticMembers": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of DB instance identifiers that are part of the custom endpoint group.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        }
    },
    "requiredInputs": [
        "clusterEndpointIdentifier",
        "clusterIdentifier",
        "endpointType"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering ClusterEndpoint resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "The Neptune Cluster Endpoint Amazon Resource Name (ARN).\n"
            },
            "clusterEndpointIdentifier": {
                "type": "string",
                "description": "The identifier of the endpoint.\n",
                "willReplaceOnChanges": true
            },
            "clusterIdentifier": {
                "type": "string",
                "description": "The DB cluster identifier of the DB cluster associated with the endpoint.\n",
                "willReplaceOnChanges": true
            },
            "endpoint": {
                "type": "string",
                "description": "The DNS address of the endpoint.\n"
            },
            "endpointType": {
                "type": "string",
                "description": "The type of the endpoint. One of: `READER`, `WRITER`, `ANY`.\n",
                "willReplaceOnChanges": true
            },
            "excludedMembers": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "List of DB instance identifiers that aren't part of the custom endpoint group. All other eligible instances are reachable through the custom endpoint. Only relevant if the list of static members is empty.\n"
            },
            "staticMembers": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "List of DB instance identifiers that are part of the custom endpoint group.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the Neptune cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            }
        },
        "type": "object"
    }
}