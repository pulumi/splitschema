{
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "The key pair ARN.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.\n"
                },
                "keyName": {
                    "type": "string",
                    "description": "The name for the key pair. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.\n"
                },
                "keyNamePrefix": {
                    "type": "string",
                    "description": "Creates a unique name beginning with the specified prefix. Conflicts with `key_name`. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.\n"
                },
                "keyPairId": {
                    "type": "string",
                    "description": "The key pair ID.\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "The type of key pair.\n"
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public key material.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                }
            },
            "required": [
                "arn",
                "fingerprint",
                "keyName",
                "keyNamePrefix",
                "keyPairId",
                "keyType",
                "publicKey",
                "tagsAll"
            ],
            "inputProperties": {
                "keyName": {
                    "type": "string",
                    "description": "The name for the key pair. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.\n",
                    "willReplaceOnChanges": true
                },
                "keyNamePrefix": {
                    "type": "string",
                    "description": "Creates a unique name beginning with the specified prefix. Conflicts with `key_name`. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.\n",
                    "willReplaceOnChanges": true
                },
                "publicKey": {
                    "type": "string",
                    "description": "The public key material.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                }
            },
            "requiredInputs": [
                "publicKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering KeyPair resources.\n",
                "properties": {
                    "arn": {
                        "type": "string",
                        "description": "The key pair ARN.\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.\n"
                    },
                    "keyName": {
                        "type": "string",
                        "description": "The name for the key pair. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyNamePrefix": {
                        "type": "string",
                        "description": "Creates a unique name beginning with the specified prefix. Conflicts with `key_name`. If neither `key_name` nor `key_name_prefix` is provided, the provider will create a unique key name.\n",
                        "willReplaceOnChanges": true
                    },
                    "keyPairId": {
                        "type": "string",
                        "description": "The key pair ID.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "The type of key pair.\n"
                    },
                    "publicKey": {
                        "type": "string",
                        "description": "The public key material.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    }
                },
                "type": "object"
            }
        }