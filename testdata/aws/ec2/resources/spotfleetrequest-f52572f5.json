{
    "properties": {
        "allocationStrategy": {
            "type": "string",
            "description": "Indicates how to allocate the target capacity across\nthe Spot pools specified by the Spot fleet request. Valid values: `lowestPrice`, `diversified`, `capacityOptimized`, `capacityOptimizedPrioritized`, and `priceCapacityOptimized`. The default is\n`lowestPrice`.\n"
        },
        "clientToken": {
            "type": "string"
        },
        "context": {
            "type": "string",
            "description": "Reserved.\n"
        },
        "excessCapacityTerminationPolicy": {
            "type": "string",
            "description": "Indicates whether running Spot\ninstances should be terminated if the target capacity of the Spot fleet\nrequest is decreased below the current size of the Spot fleet.\n"
        },
        "fleetType": {
            "type": "string",
            "description": "The type of fleet request. Indicates whether the Spot Fleet only requests the target\ncapacity or also attempts to maintain it. Default is `maintain`.\n"
        },
        "iamFleetRole": {
            "type": "string",
            "description": "Grants the Spot fleet permission to terminate\nSpot instances on your behalf when you cancel its Spot fleet request using\nCancelSpotFleetRequests or when the Spot fleet request expires, if you set\nterminateInstancesWithExpiration.\n"
        },
        "instanceInterruptionBehaviour": {
            "type": "string",
            "description": "Indicates whether a Spot\ninstance stops or terminates when it is interrupted. Default is\n`terminate`.\n"
        },
        "instancePoolsToUseCount": {
            "type": "integer",
            "description": "The number of Spot pools across which to allocate your target Spot capacity.\nValid only when `allocation_strategy` is set to `lowestPrice`. Spot Fleet selects\nthe cheapest Spot pools and evenly allocates your target Spot capacity across\nthe number of Spot pools that you specify.\n"
        },
        "launchSpecifications": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ec2/SpotFleetRequestLaunchSpecification:SpotFleetRequestLaunchSpecification"
            },
            "description": "Used to define the launch configuration of the\nspot-fleet request. Can be specified multiple times to define different bids\nacross different markets and instance types. Conflicts with `launch_template_config`. At least one of `launch_specification` or `launch_template_config` is required.\n\n**Note**: This takes in similar but not\nidentical inputs as `aws.ec2.Instance`.  There are limitations on\nwhat you can specify. See the list of officially supported inputs in the\n[reference documentation](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetLaunchSpecification.html). Any normal `aws.ec2.Instance` parameter that corresponds to those inputs may be used and it have\na additional parameter `iam_instance_profile_arn` takes `aws.iam.InstanceProfile` attribute `arn` as input.\n"
        },
        "launchTemplateConfigs": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ec2/SpotFleetRequestLaunchTemplateConfig:SpotFleetRequestLaunchTemplateConfig"
            },
            "description": "Launch template configuration block. See Launch Template Configs below for more details. Conflicts with `launch_specification`. At least one of `launch_specification` or `launch_template_config` is required.\n"
        },
        "loadBalancers": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of elastic load balancer names to add to the Spot fleet.\n"
        },
        "onDemandAllocationStrategy": {
            "type": "string",
            "description": "The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: `lowestPrice` and `prioritized`. the default is `lowestPrice`.\n"
        },
        "onDemandMaxTotalPrice": {
            "type": "string",
            "description": "The maximum amount per hour for On-Demand Instances that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasnâ€™t met the target capacity.\n"
        },
        "onDemandTargetCapacity": {
            "type": "integer",
            "description": "The number of On-Demand units to request. If the request type is `maintain`, you can specify a target capacity of 0 and add capacity later.\n"
        },
        "replaceUnhealthyInstances": {
            "type": "boolean",
            "description": "Indicates whether Spot fleet should replace unhealthy instances. Default `false`.\n"
        },
        "spotMaintenanceStrategies": {
            "$ref": "#/types/aws:ec2/SpotFleetRequestSpotMaintenanceStrategies:SpotFleetRequestSpotMaintenanceStrategies",
            "description": "Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.\n"
        },
        "spotPrice": {
            "type": "string",
            "description": "The maximum bid price per unit hour.\n"
        },
        "spotRequestState": {
            "type": "string",
            "description": "The state of the Spot fleet request.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "targetCapacity": {
            "type": "integer",
            "description": "The number of units to request. You can choose to set the\ntarget capacity in terms of instances or a performance characteristic that is\nimportant to your application workload, such as vCPUs, memory, or I/O.\n"
        },
        "targetCapacityUnitType": {
            "type": "string",
            "description": "The unit for the target capacity. This can only be done with `instance_requirements` defined\n"
        },
        "targetGroupArns": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of `aws.alb.TargetGroup` ARNs, for use with Application Load Balancing.\n"
        },
        "terminateInstancesOnDelete": {
            "type": "string",
            "description": "Indicates whether running Spot\ninstances should be terminated when the resource is deleted (and the Spot fleet request cancelled).\nIf no value is specified, the value of the `terminate_instances_with_expiration` argument is used.\n"
        },
        "terminateInstancesWithExpiration": {
            "type": "boolean",
            "description": "Indicates whether running Spot\ninstances should be terminated when the Spot fleet request expires.\n"
        },
        "validFrom": {
            "type": "string",
            "description": "The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.\n"
        },
        "validUntil": {
            "type": "string",
            "description": "The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.\n"
        },
        "waitForFulfillment": {
            "type": "boolean",
            "description": "If set, this provider will\nwait for the Spot Request to be fulfilled, and will throw an error if the\ntimeout of 10m is reached.\n"
        }
    },
    "required": [
        "clientToken",
        "iamFleetRole",
        "loadBalancers",
        "spotRequestState",
        "tagsAll",
        "targetCapacity",
        "targetGroupArns"
    ],
    "inputProperties": {
        "allocationStrategy": {
            "type": "string",
            "description": "Indicates how to allocate the target capacity across\nthe Spot pools specified by the Spot fleet request. Valid values: `lowestPrice`, `diversified`, `capacityOptimized`, `capacityOptimizedPrioritized`, and `priceCapacityOptimized`. The default is\n`lowestPrice`.\n",
            "willReplaceOnChanges": true
        },
        "context": {
            "type": "string",
            "description": "Reserved.\n",
            "willReplaceOnChanges": true
        },
        "excessCapacityTerminationPolicy": {
            "type": "string",
            "description": "Indicates whether running Spot\ninstances should be terminated if the target capacity of the Spot fleet\nrequest is decreased below the current size of the Spot fleet.\n"
        },
        "fleetType": {
            "type": "string",
            "description": "The type of fleet request. Indicates whether the Spot Fleet only requests the target\ncapacity or also attempts to maintain it. Default is `maintain`.\n",
            "willReplaceOnChanges": true
        },
        "iamFleetRole": {
            "type": "string",
            "description": "Grants the Spot fleet permission to terminate\nSpot instances on your behalf when you cancel its Spot fleet request using\nCancelSpotFleetRequests or when the Spot fleet request expires, if you set\nterminateInstancesWithExpiration.\n",
            "willReplaceOnChanges": true
        },
        "instanceInterruptionBehaviour": {
            "type": "string",
            "description": "Indicates whether a Spot\ninstance stops or terminates when it is interrupted. Default is\n`terminate`.\n",
            "willReplaceOnChanges": true
        },
        "instancePoolsToUseCount": {
            "type": "integer",
            "description": "The number of Spot pools across which to allocate your target Spot capacity.\nValid only when `allocation_strategy` is set to `lowestPrice`. Spot Fleet selects\nthe cheapest Spot pools and evenly allocates your target Spot capacity across\nthe number of Spot pools that you specify.\n",
            "willReplaceOnChanges": true
        },
        "launchSpecifications": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ec2/SpotFleetRequestLaunchSpecification:SpotFleetRequestLaunchSpecification"
            },
            "description": "Used to define the launch configuration of the\nspot-fleet request. Can be specified multiple times to define different bids\nacross different markets and instance types. Conflicts with `launch_template_config`. At least one of `launch_specification` or `launch_template_config` is required.\n\n**Note**: This takes in similar but not\nidentical inputs as `aws.ec2.Instance`.  There are limitations on\nwhat you can specify. See the list of officially supported inputs in the\n[reference documentation](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetLaunchSpecification.html). Any normal `aws.ec2.Instance` parameter that corresponds to those inputs may be used and it have\na additional parameter `iam_instance_profile_arn` takes `aws.iam.InstanceProfile` attribute `arn` as input.\n",
            "willReplaceOnChanges": true
        },
        "launchTemplateConfigs": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:ec2/SpotFleetRequestLaunchTemplateConfig:SpotFleetRequestLaunchTemplateConfig"
            },
            "description": "Launch template configuration block. See Launch Template Configs below for more details. Conflicts with `launch_specification`. At least one of `launch_specification` or `launch_template_config` is required.\n",
            "willReplaceOnChanges": true
        },
        "loadBalancers": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of elastic load balancer names to add to the Spot fleet.\n",
            "willReplaceOnChanges": true
        },
        "onDemandAllocationStrategy": {
            "type": "string",
            "description": "The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: `lowestPrice` and `prioritized`. the default is `lowestPrice`.\n",
            "willReplaceOnChanges": true
        },
        "onDemandMaxTotalPrice": {
            "type": "string",
            "description": "The maximum amount per hour for On-Demand Instances that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasnâ€™t met the target capacity.\n",
            "willReplaceOnChanges": true
        },
        "onDemandTargetCapacity": {
            "type": "integer",
            "description": "The number of On-Demand units to request. If the request type is `maintain`, you can specify a target capacity of 0 and add capacity later.\n"
        },
        "replaceUnhealthyInstances": {
            "type": "boolean",
            "description": "Indicates whether Spot fleet should replace unhealthy instances. Default `false`.\n",
            "willReplaceOnChanges": true
        },
        "spotMaintenanceStrategies": {
            "$ref": "#/types/aws:ec2/SpotFleetRequestSpotMaintenanceStrategies:SpotFleetRequestSpotMaintenanceStrategies",
            "description": "Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.\n"
        },
        "spotPrice": {
            "type": "string",
            "description": "The maximum bid price per unit hour.\n",
            "willReplaceOnChanges": true
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "targetCapacity": {
            "type": "integer",
            "description": "The number of units to request. You can choose to set the\ntarget capacity in terms of instances or a performance characteristic that is\nimportant to your application workload, such as vCPUs, memory, or I/O.\n"
        },
        "targetCapacityUnitType": {
            "type": "string",
            "description": "The unit for the target capacity. This can only be done with `instance_requirements` defined\n",
            "willReplaceOnChanges": true
        },
        "targetGroupArns": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of `aws.alb.TargetGroup` ARNs, for use with Application Load Balancing.\n",
            "willReplaceOnChanges": true
        },
        "terminateInstancesOnDelete": {
            "type": "string",
            "description": "Indicates whether running Spot\ninstances should be terminated when the resource is deleted (and the Spot fleet request cancelled).\nIf no value is specified, the value of the `terminate_instances_with_expiration` argument is used.\n"
        },
        "terminateInstancesWithExpiration": {
            "type": "boolean",
            "description": "Indicates whether running Spot\ninstances should be terminated when the Spot fleet request expires.\n",
            "willReplaceOnChanges": true
        },
        "validFrom": {
            "type": "string",
            "description": "The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.\n",
            "willReplaceOnChanges": true
        },
        "validUntil": {
            "type": "string",
            "description": "The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.\n",
            "willReplaceOnChanges": true
        },
        "waitForFulfillment": {
            "type": "boolean",
            "description": "If set, this provider will\nwait for the Spot Request to be fulfilled, and will throw an error if the\ntimeout of 10m is reached.\n"
        }
    },
    "requiredInputs": [
        "iamFleetRole",
        "targetCapacity"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering SpotFleetRequest resources.\n",
        "properties": {
            "allocationStrategy": {
                "type": "string",
                "description": "Indicates how to allocate the target capacity across\nthe Spot pools specified by the Spot fleet request. Valid values: `lowestPrice`, `diversified`, `capacityOptimized`, `capacityOptimizedPrioritized`, and `priceCapacityOptimized`. The default is\n`lowestPrice`.\n",
                "willReplaceOnChanges": true
            },
            "clientToken": {
                "type": "string"
            },
            "context": {
                "type": "string",
                "description": "Reserved.\n",
                "willReplaceOnChanges": true
            },
            "excessCapacityTerminationPolicy": {
                "type": "string",
                "description": "Indicates whether running Spot\ninstances should be terminated if the target capacity of the Spot fleet\nrequest is decreased below the current size of the Spot fleet.\n"
            },
            "fleetType": {
                "type": "string",
                "description": "The type of fleet request. Indicates whether the Spot Fleet only requests the target\ncapacity or also attempts to maintain it. Default is `maintain`.\n",
                "willReplaceOnChanges": true
            },
            "iamFleetRole": {
                "type": "string",
                "description": "Grants the Spot fleet permission to terminate\nSpot instances on your behalf when you cancel its Spot fleet request using\nCancelSpotFleetRequests or when the Spot fleet request expires, if you set\nterminateInstancesWithExpiration.\n",
                "willReplaceOnChanges": true
            },
            "instanceInterruptionBehaviour": {
                "type": "string",
                "description": "Indicates whether a Spot\ninstance stops or terminates when it is interrupted. Default is\n`terminate`.\n",
                "willReplaceOnChanges": true
            },
            "instancePoolsToUseCount": {
                "type": "integer",
                "description": "The number of Spot pools across which to allocate your target Spot capacity.\nValid only when `allocation_strategy` is set to `lowestPrice`. Spot Fleet selects\nthe cheapest Spot pools and evenly allocates your target Spot capacity across\nthe number of Spot pools that you specify.\n",
                "willReplaceOnChanges": true
            },
            "launchSpecifications": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:ec2/SpotFleetRequestLaunchSpecification:SpotFleetRequestLaunchSpecification"
                },
                "description": "Used to define the launch configuration of the\nspot-fleet request. Can be specified multiple times to define different bids\nacross different markets and instance types. Conflicts with `launch_template_config`. At least one of `launch_specification` or `launch_template_config` is required.\n\n**Note**: This takes in similar but not\nidentical inputs as `aws.ec2.Instance`.  There are limitations on\nwhat you can specify. See the list of officially supported inputs in the\n[reference documentation](http://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_SpotFleetLaunchSpecification.html). Any normal `aws.ec2.Instance` parameter that corresponds to those inputs may be used and it have\na additional parameter `iam_instance_profile_arn` takes `aws.iam.InstanceProfile` attribute `arn` as input.\n",
                "willReplaceOnChanges": true
            },
            "launchTemplateConfigs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:ec2/SpotFleetRequestLaunchTemplateConfig:SpotFleetRequestLaunchTemplateConfig"
                },
                "description": "Launch template configuration block. See Launch Template Configs below for more details. Conflicts with `launch_specification`. At least one of `launch_specification` or `launch_template_config` is required.\n",
                "willReplaceOnChanges": true
            },
            "loadBalancers": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of elastic load balancer names to add to the Spot fleet.\n",
                "willReplaceOnChanges": true
            },
            "onDemandAllocationStrategy": {
                "type": "string",
                "description": "The order of the launch template overrides to use in fulfilling On-Demand capacity. the possible values are: `lowestPrice` and `prioritized`. the default is `lowestPrice`.\n",
                "willReplaceOnChanges": true
            },
            "onDemandMaxTotalPrice": {
                "type": "string",
                "description": "The maximum amount per hour for On-Demand Instances that you're willing to pay. When the maximum amount you're willing to pay is reached, the fleet stops launching instances even if it hasnâ€™t met the target capacity.\n",
                "willReplaceOnChanges": true
            },
            "onDemandTargetCapacity": {
                "type": "integer",
                "description": "The number of On-Demand units to request. If the request type is `maintain`, you can specify a target capacity of 0 and add capacity later.\n"
            },
            "replaceUnhealthyInstances": {
                "type": "boolean",
                "description": "Indicates whether Spot fleet should replace unhealthy instances. Default `false`.\n",
                "willReplaceOnChanges": true
            },
            "spotMaintenanceStrategies": {
                "$ref": "#/types/aws:ec2/SpotFleetRequestSpotMaintenanceStrategies:SpotFleetRequestSpotMaintenanceStrategies",
                "description": "Nested argument containing maintenance strategies for managing your Spot Instances that are at an elevated risk of being interrupted. Defined below.\n"
            },
            "spotPrice": {
                "type": "string",
                "description": "The maximum bid price per unit hour.\n",
                "willReplaceOnChanges": true
            },
            "spotRequestState": {
                "type": "string",
                "description": "The state of the Spot fleet request.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "targetCapacity": {
                "type": "integer",
                "description": "The number of units to request. You can choose to set the\ntarget capacity in terms of instances or a performance characteristic that is\nimportant to your application workload, such as vCPUs, memory, or I/O.\n"
            },
            "targetCapacityUnitType": {
                "type": "string",
                "description": "The unit for the target capacity. This can only be done with `instance_requirements` defined\n",
                "willReplaceOnChanges": true
            },
            "targetGroupArns": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of `aws.alb.TargetGroup` ARNs, for use with Application Load Balancing.\n",
                "willReplaceOnChanges": true
            },
            "terminateInstancesOnDelete": {
                "type": "string",
                "description": "Indicates whether running Spot\ninstances should be terminated when the resource is deleted (and the Spot fleet request cancelled).\nIf no value is specified, the value of the `terminate_instances_with_expiration` argument is used.\n"
            },
            "terminateInstancesWithExpiration": {
                "type": "boolean",
                "description": "Indicates whether running Spot\ninstances should be terminated when the Spot fleet request expires.\n",
                "willReplaceOnChanges": true
            },
            "validFrom": {
                "type": "string",
                "description": "The start date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.\n",
                "willReplaceOnChanges": true
            },
            "validUntil": {
                "type": "string",
                "description": "The end date and time of the request, in UTC [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.8) format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.\n",
                "willReplaceOnChanges": true
            },
            "waitForFulfillment": {
                "type": "boolean",
                "description": "If set, this provider will\nwait for the Spot Request to be fulfilled, and will throw an error if the\ntimeout of 10m is reached.\n"
            }
        },
        "type": "object"
    }
}