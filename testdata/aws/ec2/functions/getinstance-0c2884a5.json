{
            "inputs": {
                "description": "A collection of arguments for invoking getInstance.\n",
                "properties": {
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceFilter:getInstanceFilter"
                        },
                        "description": "One or more name/value pairs to use as filters. There are\nseveral valid keys, for a full reference, check out\n[describe-instances in the AWS CLI reference][1].\n"
                    },
                    "getPasswordData": {
                        "type": "boolean",
                        "description": "If true, wait for password data to become available and retrieve it. Useful for getting the administrator password for instances running Microsoft Windows. The password data is exported to the `password_data` attribute. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.\n"
                    },
                    "getUserData": {
                        "type": "boolean",
                        "description": "Retrieve Base64 encoded User Data contents into the `user_data_base64` attribute. A SHA-1 hash of the User Data contents will always be present in the `user_data` attribute. Defaults to `false`.\n\n\u003e **NOTE:** At least one of `filter`, `instance_tags`, or `instance_id` must be specified.\n\n\u003e **NOTE:** If anything other than a single match is returned by the search,\nthis call will fail. Ensure that your search is specific enough to return\na single Instance ID only.\n"
                    },
                    "instanceId": {
                        "type": "string",
                        "description": "Specify the exact Instance ID with which to populate the data source.\n"
                    },
                    "instanceTags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags, each pair of which must\nexactly match a pair on the desired Instance.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags assigned to the Instance.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getInstance.\n",
                "properties": {
                    "ami": {
                        "description": "ID of the AMI used to launch the instance.\n",
                        "type": "string"
                    },
                    "arn": {
                        "description": "ARN of the instance.\n",
                        "type": "string"
                    },
                    "associatePublicIpAddress": {
                        "description": "Whether or not the Instance is associated with a public IP address or not (Boolean).\n",
                        "type": "boolean"
                    },
                    "availabilityZone": {
                        "description": "Availability zone of the Instance.\n",
                        "type": "string"
                    },
                    "creditSpecifications": {
                        "description": "Credit specification of the Instance.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceCreditSpecification:getInstanceCreditSpecification"
                        },
                        "type": "array"
                    },
                    "disableApiStop": {
                        "description": "Whether or not EC2 Instance Stop Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection) is enabled (Boolean).\n",
                        "type": "boolean"
                    },
                    "disableApiTermination": {
                        "description": "Whether or not [EC2 Instance Termination Protection](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/terminating-instances.html#Using_ChangingDisableAPITermination) is enabled (Boolean).\n",
                        "type": "boolean"
                    },
                    "ebsBlockDevices": {
                        "description": "EBS block device mappings of the Instance.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceEbsBlockDevice:getInstanceEbsBlockDevice"
                        },
                        "type": "array"
                    },
                    "ebsOptimized": {
                        "description": "Whether the Instance is EBS optimized or not (Boolean).\n",
                        "type": "boolean"
                    },
                    "enclaveOptions": {
                        "description": "Enclave options of the instance.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceEnclaveOption:getInstanceEnclaveOption"
                        },
                        "type": "array"
                    },
                    "ephemeralBlockDevices": {
                        "description": "Ephemeral block device mappings of the Instance.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceEphemeralBlockDevice:getInstanceEphemeralBlockDevice"
                        },
                        "type": "array"
                    },
                    "filters": {
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceFilter:getInstanceFilter"
                        },
                        "type": "array"
                    },
                    "getPasswordData": {
                        "type": "boolean"
                    },
                    "getUserData": {
                        "type": "boolean"
                    },
                    "hostId": {
                        "description": "ID of the dedicated host the instance will be assigned to.\n",
                        "type": "string"
                    },
                    "hostResourceGroupArn": {
                        "description": "ARN of the host resource group the instance is associated with.\n",
                        "type": "string"
                    },
                    "iamInstanceProfile": {
                        "description": "Name of the instance profile associated with the Instance.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The provider-assigned unique ID for this managed resource.\n",
                        "type": "string"
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "instanceState": {
                        "description": "State of the instance. One of: `pending`, `running`, `shutting-down`, `terminated`, `stopping`, `stopped`. See [Instance Lifecycle](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-lifecycle.html) for more information.\n",
                        "type": "string"
                    },
                    "instanceTags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "instanceType": {
                        "description": "Type of the Instance.\n",
                        "type": "string"
                    },
                    "ipv6Addresses": {
                        "description": "IPv6 addresses associated to the Instance, if applicable. **NOTE**: Unlike the IPv4 address, this doesn't change if you attach an EIP to the instance.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "keyName": {
                        "description": "Key name of the Instance.\n",
                        "type": "string"
                    },
                    "maintenanceOptions": {
                        "description": "Maintenance and recovery options for the instance.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceMaintenanceOption:getInstanceMaintenanceOption"
                        },
                        "type": "array"
                    },
                    "metadataOptions": {
                        "description": "Metadata options of the Instance.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceMetadataOption:getInstanceMetadataOption"
                        },
                        "type": "array"
                    },
                    "monitoring": {
                        "description": "Whether detailed monitoring is enabled or disabled for the Instance (Boolean).\n",
                        "type": "boolean"
                    },
                    "networkInterfaceId": {
                        "description": "ID of the network interface that was created with the Instance.\n",
                        "type": "string"
                    },
                    "outpostArn": {
                        "description": "ARN of the Outpost.\n",
                        "type": "string"
                    },
                    "passwordData": {
                        "description": "Base-64 encoded encrypted password data for the instance. Useful for getting the administrator password for instances running Microsoft Windows. This attribute is only exported if `get_password_data` is true. See [GetPasswordData](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_GetPasswordData.html) for more information.\n",
                        "type": "string"
                    },
                    "placementGroup": {
                        "description": "Placement group of the Instance.\n",
                        "type": "string"
                    },
                    "placementPartitionNumber": {
                        "description": "Number of the partition the instance is in.\n",
                        "type": "integer"
                    },
                    "privateDns": {
                        "description": "Private DNS name assigned to the Instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC.\n",
                        "type": "string"
                    },
                    "privateDnsNameOptions": {
                        "description": "Options for the instance hostname.\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstancePrivateDnsNameOption:getInstancePrivateDnsNameOption"
                        },
                        "type": "array"
                    },
                    "privateIp": {
                        "description": "Private IP address assigned to the Instance.\n",
                        "type": "string"
                    },
                    "publicDns": {
                        "description": "Public DNS name assigned to the Instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC.\n",
                        "type": "string"
                    },
                    "publicIp": {
                        "description": "Public IP address assigned to the Instance, if applicable. **NOTE**: If you are using an `aws.ec2.Eip` with your instance, you should refer to the EIP's address directly and not use `public_ip`, as this field will change after the EIP is attached.\n",
                        "type": "string"
                    },
                    "rootBlockDevices": {
                        "description": "Root block device mappings of the Instance\n",
                        "items": {
                            "$ref": "#/types/aws:ec2/getInstanceRootBlockDevice:getInstanceRootBlockDevice"
                        },
                        "type": "array"
                    },
                    "secondaryPrivateIps": {
                        "description": "Secondary private IPv4 addresses assigned to the instance's primary network interface (eth0) in a VPC.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "securityGroups": {
                        "description": "Associated security groups.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "sourceDestCheck": {
                        "description": "Whether the network interface performs source/destination checking (Boolean).\n",
                        "type": "boolean"
                    },
                    "subnetId": {
                        "description": "VPC subnet ID.\n",
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags assigned to the Instance.\n",
                        "type": "object"
                    },
                    "tenancy": {
                        "description": "Tenancy of the instance: `dedicated`, `default`, `host`.\n",
                        "type": "string"
                    },
                    "userData": {
                        "description": "SHA-1 hash of User Data supplied to the Instance.\n",
                        "type": "string"
                    },
                    "userDataBase64": {
                        "description": "Base64 encoded contents of User Data supplied to the Instance. This attribute is only exported if `get_user_data` is true.\n",
                        "type": "string"
                    },
                    "vpcSecurityGroupIds": {
                        "description": "Associated security groups in a non-default VPC.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "ami",
                    "arn",
                    "associatePublicIpAddress",
                    "availabilityZone",
                    "creditSpecifications",
                    "disableApiStop",
                    "disableApiTermination",
                    "ebsBlockDevices",
                    "ebsOptimized",
                    "enclaveOptions",
                    "ephemeralBlockDevices",
                    "hostId",
                    "hostResourceGroupArn",
                    "iamInstanceProfile",
                    "instanceState",
                    "instanceTags",
                    "instanceType",
                    "ipv6Addresses",
                    "keyName",
                    "maintenanceOptions",
                    "metadataOptions",
                    "monitoring",
                    "networkInterfaceId",
                    "outpostArn",
                    "passwordData",
                    "placementGroup",
                    "placementPartitionNumber",
                    "privateDns",
                    "privateDnsNameOptions",
                    "privateIp",
                    "publicDns",
                    "publicIp",
                    "rootBlockDevices",
                    "secondaryPrivateIps",
                    "securityGroups",
                    "sourceDestCheck",
                    "subnetId",
                    "tags",
                    "tenancy",
                    "userData",
                    "userDataBase64",
                    "vpcSecurityGroupIds",
                    "id"
                ],
                "type": "object"
            }
        }