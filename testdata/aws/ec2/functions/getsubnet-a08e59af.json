{
            "inputs": {
                "description": "A collection of arguments for invoking getSubnet.\n",
                "properties": {
                    "availabilityZone": {
                        "type": "string",
                        "description": "Availability zone where the subnet must reside.\n"
                    },
                    "availabilityZoneId": {
                        "type": "string",
                        "description": "ID of the Availability Zone for the subnet. This argument is not supported in all regions or partitions. If necessary, use `availability_zone` instead.\n"
                    },
                    "cidrBlock": {
                        "type": "string",
                        "description": "CIDR block of the desired subnet.\n"
                    },
                    "defaultForAz": {
                        "type": "boolean",
                        "description": "Whether the desired subnet must be the default subnet for its associated availability zone.\n"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:ec2/getSubnetFilter:getSubnetFilter"
                        },
                        "description": "Configuration block. Detailed below.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID of the specific subnet to retrieve.\n"
                    },
                    "ipv6CidrBlock": {
                        "type": "string",
                        "description": "IPv6 CIDR block of the desired subnet.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "State that the desired subnet must have.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags, each pair of which must exactly match a pair on the desired subnet.\n"
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "ID of the VPC that the desired subnet belongs to.\n"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSubnet.\n",
                "properties": {
                    "arn": {
                        "description": "ARN of the subnet.\n",
                        "type": "string"
                    },
                    "assignIpv6AddressOnCreation": {
                        "description": "Whether an IPv6 address is assigned on creation.\n",
                        "type": "boolean"
                    },
                    "availabilityZone": {
                        "type": "string"
                    },
                    "availabilityZoneId": {
                        "type": "string"
                    },
                    "availableIpAddressCount": {
                        "description": "Available IP addresses of the subnet.\n",
                        "type": "integer"
                    },
                    "cidrBlock": {
                        "type": "string"
                    },
                    "customerOwnedIpv4Pool": {
                        "description": "Identifier of customer owned IPv4 address pool.\n",
                        "type": "string"
                    },
                    "defaultForAz": {
                        "type": "boolean"
                    },
                    "enableDns64": {
                        "description": "Whether DNS queries made to the Amazon-provided DNS Resolver in this subnet return synthetic IPv6 addresses for IPv4-only destinations.\n",
                        "type": "boolean"
                    },
                    "enableLniAtDeviceIndex": {
                        "description": "Indicates the device position for local network interfaces in this subnet. For example, 1 indicates local network interfaces in this subnet are the secondary network interface (eth1). A local network interface cannot be the primary network interface (eth0).\n",
                        "type": "integer"
                    },
                    "enableResourceNameDnsARecordOnLaunch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS A records.\n",
                        "type": "boolean"
                    },
                    "enableResourceNameDnsAaaaRecordOnLaunch": {
                        "description": "Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.\n",
                        "type": "boolean"
                    },
                    "filters": {
                        "items": {
                            "$ref": "#/types/aws:ec2/getSubnetFilter:getSubnetFilter"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ipv6CidrBlock": {
                        "type": "string"
                    },
                    "ipv6CidrBlockAssociationId": {
                        "description": "Association ID of the IPv6 CIDR block.\n",
                        "type": "string"
                    },
                    "ipv6Native": {
                        "description": "Whether this is an IPv6-only subnet.\n",
                        "type": "boolean"
                    },
                    "mapCustomerOwnedIpOnLaunch": {
                        "description": "Whether customer owned IP addresses are assigned on network interface creation.\n",
                        "type": "boolean"
                    },
                    "mapPublicIpOnLaunch": {
                        "description": "Whether public IP addresses are assigned on instance launch.\n",
                        "type": "boolean"
                    },
                    "outpostArn": {
                        "description": "ARN of the Outpost.\n",
                        "type": "string"
                    },
                    "ownerId": {
                        "description": "ID of the AWS account that owns the subnet.\n",
                        "type": "string"
                    },
                    "privateDnsHostnameTypeOnLaunch": {
                        "description": "The type of hostnames assigned to instances in the subnet at launch.\n",
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "tags": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object"
                    },
                    "vpcId": {
                        "type": "string"
                    }
                },
                "required": [
                    "arn",
                    "assignIpv6AddressOnCreation",
                    "availabilityZone",
                    "availabilityZoneId",
                    "availableIpAddressCount",
                    "cidrBlock",
                    "customerOwnedIpv4Pool",
                    "defaultForAz",
                    "enableDns64",
                    "enableLniAtDeviceIndex",
                    "enableResourceNameDnsARecordOnLaunch",
                    "enableResourceNameDnsAaaaRecordOnLaunch",
                    "id",
                    "ipv6CidrBlock",
                    "ipv6CidrBlockAssociationId",
                    "ipv6Native",
                    "mapCustomerOwnedIpOnLaunch",
                    "mapPublicIpOnLaunch",
                    "outpostArn",
                    "ownerId",
                    "privateDnsHostnameTypeOnLaunch",
                    "state",
                    "tags",
                    "vpcId"
                ],
                "type": "object"
            }
        }