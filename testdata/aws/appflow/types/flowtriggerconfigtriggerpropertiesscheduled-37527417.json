{
    "properties": {
        "dataPullMode": {
            "type": "string",
            "description": "Whether a scheduled flow has an incremental data transfer or a complete data transfer for each flow run. Valid values are `Incremental` and `Complete`.\n"
        },
        "firstExecutionFrom": {
            "type": "string",
            "description": "Date range for the records to import from the connector in the first flow run. Must be a valid RFC3339 timestamp.\n"
        },
        "scheduleEndTime": {
            "type": "string",
            "description": "Scheduled end time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.\n"
        },
        "scheduleExpression": {
            "type": "string",
            "description": "Scheduling expression that determines the rate at which the schedule will run, for example `rate(5minutes)`.\n"
        },
        "scheduleOffset": {
            "type": "integer",
            "description": "Optional offset that is added to the time interval for a schedule-triggered flow. Maximum value of 36000.\n"
        },
        "scheduleStartTime": {
            "type": "string",
            "description": "Scheduled start time for a schedule-triggered flow. Must be a valid RFC3339 timestamp.\n"
        },
        "timezone": {
            "type": "string",
            "description": "Time zone used when referring to the date and time of a scheduled-triggered flow, such as `America/New_York`.\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.appflow.Flow;\nimport com.pulumi.aws.appflow.FlowArgs;\nimport com.pulumi.aws.appflow.inputs.FlowTriggerConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var example = new Flow(\"example\", FlowArgs.builder()        \n            .triggerConfig(FlowTriggerConfigArgs.builder()\n                .scheduled(%!v(PANIC=Format method: runtime error: invalid memory address or nil pointer dereference))\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  example:\n    type: aws:appflow:Flow\n    properties:\n      triggerConfig:\n        scheduled:\n          - scheduleExpression: rate(1minutes)\n```\n"
        }
    },
    "type": "object",
    "required": [
        "scheduleExpression"
    ]
}