{
    "properties": {
        "certificateArn": {
            "type": "string",
            "description": "ARN for the certificate.\n"
        },
        "databaseName": {
            "type": "string",
            "description": "Name of the endpoint database.\n"
        },
        "elasticsearchSettings": {
            "$ref": "#/types/aws:dms/EndpointElasticsearchSettings:EndpointElasticsearchSettings",
            "description": "Configuration block for OpenSearch settings. See below.\n"
        },
        "endpointArn": {
            "type": "string",
            "description": "ARN for the endpoint.\n"
        },
        "endpointId": {
            "type": "string",
            "description": "Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.\n"
        },
        "endpointType": {
            "type": "string",
            "description": "Type of endpoint. Valid values are `source`, `target`.\n"
        },
        "engineName": {
            "type": "string",
            "description": "Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `azure-sql-managed-instance`, `babelfish`, `db2`, `db2-zos`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).\n"
        },
        "extraConnectionAttributes": {
            "type": "string",
            "description": "Additional attributes associated with the connection. For available attributes for a `source` Endpoint, see [Sources for data migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.html). For available attributes for a `target` Endpoint, see [Targets for data migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.html).\n"
        },
        "kafkaSettings": {
            "$ref": "#/types/aws:dms/EndpointKafkaSettings:EndpointKafkaSettings",
            "description": "Configuration block for Kafka settings. See below.\n"
        },
        "kinesisSettings": {
            "$ref": "#/types/aws:dms/EndpointKinesisSettings:EndpointKinesisSettings",
            "description": "Configuration block for Kinesis settings. See below.\n"
        },
        "kmsKeyArn": {
            "type": "string",
            "description": "ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. To encrypt an S3 target with a KMS Key, use the parameter `s3_settings.server_side_encryption_kms_key_id`. When `engine_name` is `redshift`, `kms_key_arn` is the KMS Key for the Redshift target and the parameter `redshift_settings.server_side_encryption_kms_key_id` encrypts the S3 intermediate storage.\n\nThe following arguments are optional:\n"
        },
        "mongodbSettings": {
            "$ref": "#/types/aws:dms/EndpointMongodbSettings:EndpointMongodbSettings",
            "description": "Configuration block for MongoDB settings. See below.\n"
        },
        "password": {
            "type": "string",
            "description": "Password to be used to login to the endpoint database.\n",
            "secret": true
        },
        "pauseReplicationTasks": {
            "type": "boolean"
        },
        "port": {
            "type": "integer",
            "description": "Port used by the endpoint database.\n"
        },
        "postgresSettings": {
            "$ref": "#/types/aws:dms/EndpointPostgresSettings:EndpointPostgresSettings",
            "description": "Configuration block for Postgres settings. See below.\n"
        },
        "redisSettings": {
            "$ref": "#/types/aws:dms/EndpointRedisSettings:EndpointRedisSettings"
        },
        "redshiftSettings": {
            "$ref": "#/types/aws:dms/EndpointRedshiftSettings:EndpointRedshiftSettings",
            "description": "Configuration block for Redshift settings. See below.\n"
        },
        "s3Settings": {
            "$ref": "#/types/aws:dms/EndpointS3Settings:EndpointS3Settings",
            "description": "(**Deprecated**, use the `aws.dms.S3Endpoint` resource instead) Configuration block for S3 settings. See below.\n"
        },
        "secretsManagerAccessRoleArn": {
            "type": "string",
            "description": "ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.\n"
        },
        "secretsManagerArn": {
            "type": "string",
            "description": "Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only when `engine_name` is `aurora`, `aurora-postgresql`, `mariadb`, `mongodb`, `mysql`, `oracle`, `postgres`, `redshift`, or `sqlserver`.\n"
        },
        "serverName": {
            "type": "string",
            "description": "Host name of the server.\n"
        },
        "serviceAccessRole": {
            "type": "string",
            "description": "ARN used by the service access IAM role for dynamodb endpoints.\n"
        },
        "sslMode": {
            "type": "string",
            "description": "SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "username": {
            "type": "string",
            "description": "User name to be used to login to the endpoint database.\n"
        }
    },
    "required": [
        "certificateArn",
        "endpointArn",
        "endpointId",
        "endpointType",
        "engineName",
        "extraConnectionAttributes",
        "kmsKeyArn",
        "redshiftSettings",
        "sslMode",
        "tagsAll"
    ],
    "inputProperties": {
        "certificateArn": {
            "type": "string",
            "description": "ARN for the certificate.\n"
        },
        "databaseName": {
            "type": "string",
            "description": "Name of the endpoint database.\n"
        },
        "elasticsearchSettings": {
            "$ref": "#/types/aws:dms/EndpointElasticsearchSettings:EndpointElasticsearchSettings",
            "description": "Configuration block for OpenSearch settings. See below.\n"
        },
        "endpointId": {
            "type": "string",
            "description": "Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.\n",
            "willReplaceOnChanges": true
        },
        "endpointType": {
            "type": "string",
            "description": "Type of endpoint. Valid values are `source`, `target`.\n"
        },
        "engineName": {
            "type": "string",
            "description": "Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `azure-sql-managed-instance`, `babelfish`, `db2`, `db2-zos`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).\n"
        },
        "extraConnectionAttributes": {
            "type": "string",
            "description": "Additional attributes associated with the connection. For available attributes for a `source` Endpoint, see [Sources for data migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.html). For available attributes for a `target` Endpoint, see [Targets for data migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.html).\n"
        },
        "kafkaSettings": {
            "$ref": "#/types/aws:dms/EndpointKafkaSettings:EndpointKafkaSettings",
            "description": "Configuration block for Kafka settings. See below.\n"
        },
        "kinesisSettings": {
            "$ref": "#/types/aws:dms/EndpointKinesisSettings:EndpointKinesisSettings",
            "description": "Configuration block for Kinesis settings. See below.\n"
        },
        "kmsKeyArn": {
            "type": "string",
            "description": "ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. To encrypt an S3 target with a KMS Key, use the parameter `s3_settings.server_side_encryption_kms_key_id`. When `engine_name` is `redshift`, `kms_key_arn` is the KMS Key for the Redshift target and the parameter `redshift_settings.server_side_encryption_kms_key_id` encrypts the S3 intermediate storage.\n\nThe following arguments are optional:\n",
            "willReplaceOnChanges": true
        },
        "mongodbSettings": {
            "$ref": "#/types/aws:dms/EndpointMongodbSettings:EndpointMongodbSettings",
            "description": "Configuration block for MongoDB settings. See below.\n"
        },
        "password": {
            "type": "string",
            "description": "Password to be used to login to the endpoint database.\n",
            "secret": true
        },
        "pauseReplicationTasks": {
            "type": "boolean"
        },
        "port": {
            "type": "integer",
            "description": "Port used by the endpoint database.\n"
        },
        "postgresSettings": {
            "$ref": "#/types/aws:dms/EndpointPostgresSettings:EndpointPostgresSettings",
            "description": "Configuration block for Postgres settings. See below.\n"
        },
        "redisSettings": {
            "$ref": "#/types/aws:dms/EndpointRedisSettings:EndpointRedisSettings"
        },
        "redshiftSettings": {
            "$ref": "#/types/aws:dms/EndpointRedshiftSettings:EndpointRedshiftSettings",
            "description": "Configuration block for Redshift settings. See below.\n"
        },
        "s3Settings": {
            "$ref": "#/types/aws:dms/EndpointS3Settings:EndpointS3Settings",
            "description": "(**Deprecated**, use the `aws.dms.S3Endpoint` resource instead) Configuration block for S3 settings. See below.\n"
        },
        "secretsManagerAccessRoleArn": {
            "type": "string",
            "description": "ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.\n"
        },
        "secretsManagerArn": {
            "type": "string",
            "description": "Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only when `engine_name` is `aurora`, `aurora-postgresql`, `mariadb`, `mongodb`, `mysql`, `oracle`, `postgres`, `redshift`, or `sqlserver`.\n"
        },
        "serverName": {
            "type": "string",
            "description": "Host name of the server.\n"
        },
        "serviceAccessRole": {
            "type": "string",
            "description": "ARN used by the service access IAM role for dynamodb endpoints.\n"
        },
        "sslMode": {
            "type": "string",
            "description": "SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "username": {
            "type": "string",
            "description": "User name to be used to login to the endpoint database.\n"
        }
    },
    "requiredInputs": [
        "endpointId",
        "endpointType",
        "engineName"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Endpoint resources.\n",
        "properties": {
            "certificateArn": {
                "type": "string",
                "description": "ARN for the certificate.\n"
            },
            "databaseName": {
                "type": "string",
                "description": "Name of the endpoint database.\n"
            },
            "elasticsearchSettings": {
                "$ref": "#/types/aws:dms/EndpointElasticsearchSettings:EndpointElasticsearchSettings",
                "description": "Configuration block for OpenSearch settings. See below.\n"
            },
            "endpointArn": {
                "type": "string",
                "description": "ARN for the endpoint.\n"
            },
            "endpointId": {
                "type": "string",
                "description": "Database endpoint identifier. Identifiers must contain from 1 to 255 alphanumeric characters or hyphens, begin with a letter, contain only ASCII letters, digits, and hyphens, not end with a hyphen, and not contain two consecutive hyphens.\n",
                "willReplaceOnChanges": true
            },
            "endpointType": {
                "type": "string",
                "description": "Type of endpoint. Valid values are `source`, `target`.\n"
            },
            "engineName": {
                "type": "string",
                "description": "Type of engine for the endpoint. Valid values are `aurora`, `aurora-postgresql`, `azuredb`, `azure-sql-managed-instance`, `babelfish`, `db2`, `db2-zos`, `docdb`, `dynamodb`, `elasticsearch`, `kafka`, `kinesis`, `mariadb`, `mongodb`, `mysql`, `opensearch`, `oracle`, `postgres`, `redshift`, `s3`, `sqlserver`, `sybase`. Please note that some of engine names are available only for `target` endpoint type (e.g. `redshift`).\n"
            },
            "extraConnectionAttributes": {
                "type": "string",
                "description": "Additional attributes associated with the connection. For available attributes for a `source` Endpoint, see [Sources for data migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.html). For available attributes for a `target` Endpoint, see [Targets for data migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.html).\n"
            },
            "kafkaSettings": {
                "$ref": "#/types/aws:dms/EndpointKafkaSettings:EndpointKafkaSettings",
                "description": "Configuration block for Kafka settings. See below.\n"
            },
            "kinesisSettings": {
                "$ref": "#/types/aws:dms/EndpointKinesisSettings:EndpointKinesisSettings",
                "description": "Configuration block for Kinesis settings. See below.\n"
            },
            "kmsKeyArn": {
                "type": "string",
                "description": "ARN for the KMS key that will be used to encrypt the connection parameters. If you do not specify a value for `kms_key_arn`, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region. To encrypt an S3 target with a KMS Key, use the parameter `s3_settings.server_side_encryption_kms_key_id`. When `engine_name` is `redshift`, `kms_key_arn` is the KMS Key for the Redshift target and the parameter `redshift_settings.server_side_encryption_kms_key_id` encrypts the S3 intermediate storage.\n\nThe following arguments are optional:\n",
                "willReplaceOnChanges": true
            },
            "mongodbSettings": {
                "$ref": "#/types/aws:dms/EndpointMongodbSettings:EndpointMongodbSettings",
                "description": "Configuration block for MongoDB settings. See below.\n"
            },
            "password": {
                "type": "string",
                "description": "Password to be used to login to the endpoint database.\n",
                "secret": true
            },
            "pauseReplicationTasks": {
                "type": "boolean"
            },
            "port": {
                "type": "integer",
                "description": "Port used by the endpoint database.\n"
            },
            "postgresSettings": {
                "$ref": "#/types/aws:dms/EndpointPostgresSettings:EndpointPostgresSettings",
                "description": "Configuration block for Postgres settings. See below.\n"
            },
            "redisSettings": {
                "$ref": "#/types/aws:dms/EndpointRedisSettings:EndpointRedisSettings"
            },
            "redshiftSettings": {
                "$ref": "#/types/aws:dms/EndpointRedshiftSettings:EndpointRedshiftSettings",
                "description": "Configuration block for Redshift settings. See below.\n"
            },
            "s3Settings": {
                "$ref": "#/types/aws:dms/EndpointS3Settings:EndpointS3Settings",
                "description": "(**Deprecated**, use the `aws.dms.S3Endpoint` resource instead) Configuration block for S3 settings. See below.\n"
            },
            "secretsManagerAccessRoleArn": {
                "type": "string",
                "description": "ARN of the IAM role that specifies AWS DMS as the trusted entity and has the required permissions to access the value in SecretsManagerSecret.\n"
            },
            "secretsManagerArn": {
                "type": "string",
                "description": "Full ARN, partial ARN, or friendly name of the SecretsManagerSecret that contains the endpoint connection details. Supported only when `engine_name` is `aurora`, `aurora-postgresql`, `mariadb`, `mongodb`, `mysql`, `oracle`, `postgres`, `redshift`, or `sqlserver`.\n"
            },
            "serverName": {
                "type": "string",
                "description": "Host name of the server.\n"
            },
            "serviceAccessRole": {
                "type": "string",
                "description": "ARN used by the service access IAM role for dynamodb endpoints.\n"
            },
            "sslMode": {
                "type": "string",
                "description": "SSL mode to use for the connection. Valid values are `none`, `require`, `verify-ca`, `verify-full`\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "username": {
                "type": "string",
                "description": "User name to be used to login to the endpoint database.\n"
            }
        },
        "type": "object"
    }
}