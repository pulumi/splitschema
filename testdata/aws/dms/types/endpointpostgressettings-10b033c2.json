{
            "properties": {
                "afterConnectScript": {
                    "type": "string",
                    "description": "For use with change data capture (CDC) only, this attribute has AWS DMS bypass foreign keys and user triggers to reduce the time it takes to bulk load data.\n"
                },
                "babelfishDatabaseName": {
                    "type": "string",
                    "description": "The Babelfish for Aurora PostgreSQL database name for the endpoint.\n"
                },
                "captureDdls": {
                    "type": "boolean",
                    "description": "To capture DDL events, AWS DMS creates various artifacts in the PostgreSQL database when the task starts.\n"
                },
                "databaseMode": {
                    "type": "string",
                    "description": "Specifies the default behavior of the replication's handling of PostgreSQL- compatible endpoints that require some additional configuration, such as Babelfish endpoints.\n"
                },
                "ddlArtifactsSchema": {
                    "type": "string",
                    "description": "Sets the schema in which the operational DDL database artifacts are created. Default is `public`.\n"
                },
                "executeTimeout": {
                    "type": "integer",
                    "description": "Sets the client statement timeout for the PostgreSQL instance, in seconds. Default value is `60`.\n"
                },
                "failTasksOnLobTruncation": {
                    "type": "boolean",
                    "description": "When set to `true`, this value causes a task to fail if the actual size of a LOB column is greater than the specified `LobMaxSize`. Default is `false`.\n"
                },
                "heartbeatEnable": {
                    "type": "boolean",
                    "description": "The write-ahead log (WAL) heartbeat feature mimics a dummy transaction. By doing this, it prevents idle logical replication slots from holding onto old WAL logs, which can result in storage full situations on the source.\n"
                },
                "heartbeatFrequency": {
                    "type": "integer",
                    "description": "Sets the WAL heartbeat frequency (in minutes). Default value is `5`.\n"
                },
                "heartbeatSchema": {
                    "type": "string",
                    "description": "Sets the schema in which the heartbeat artifacts are created. Default value is `public`.\n"
                },
                "mapBooleanAsBoolean": {
                    "type": "boolean",
                    "description": "You can use PostgreSQL endpoint settings to map a boolean as a boolean from your PostgreSQL source to a Amazon Redshift target. Default value is `false`.\n"
                },
                "mapJsonbAsClob": {
                    "type": "boolean",
                    "description": "Optional When true, DMS migrates JSONB values as CLOB.\n"
                },
                "mapLongVarcharAs": {
                    "type": "string",
                    "description": "Optional When true, DMS migrates LONG values as VARCHAR.\n"
                },
                "maxFileSize": {
                    "type": "integer",
                    "description": "Specifies the maximum size (in KB) of any .csv file used to transfer data to PostgreSQL. Default is `32,768 KB`.\n"
                },
                "pluginName": {
                    "type": "string",
                    "description": "Specifies the plugin to use to create a replication slot. Valid values: `pglogical`, `test_decoding`.\n"
                },
                "slotName": {
                    "type": "string",
                    "description": "Sets the name of a previously created logical replication slot for a CDC load of the PostgreSQL source instance.\n"
                }
            },
            "type": "object"
        }