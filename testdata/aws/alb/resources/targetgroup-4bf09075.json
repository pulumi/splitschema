{
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "ARN of the Target Group (matches `id`).\n"
                },
                "arnSuffix": {
                    "type": "string",
                    "description": "ARN suffix for use with CloudWatch Metrics.\n"
                },
                "connectionTermination": {
                    "type": "boolean",
                    "description": "Whether to terminate connections at the end of the deregistration timeout on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#deregistration-delay) for more information. Default is `false`.\n"
                },
                "deregistrationDelay": {
                    "type": "integer",
                    "description": "Amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/aws:alb/TargetGroupHealthCheck:TargetGroupHealthCheck",
                    "description": "Health Check configuration block. Detailed below.\n"
                },
                "ipAddressType": {
                    "type": "string",
                    "description": "The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`.\n"
                },
                "lambdaMultiValueHeadersEnabled": {
                    "type": "boolean",
                    "description": "Whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when `target_type` is `lambda`. Default is `false`.\n"
                },
                "loadBalancingAlgorithmType": {
                    "type": "string",
                    "description": "Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is `round_robin` or `least_outstanding_requests`. The default is `round_robin`.\n"
                },
                "loadBalancingCrossZoneEnabled": {
                    "type": "string",
                    "description": "Indicates whether cross zone load balancing is enabled. The value is `\"true\"`, `\"false\"` or `\"use_load_balancer_configuration\"`. The default is `\"use_load_balancer_configuration\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the target group. If omitted, this provider will assign a random, unique name. This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n"
                },
                "namePrefix": {
                    "type": "string",
                    "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`. Cannot be longer than 6 characters.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port on which targets receive traffic, unless overridden when registering a specific target. Required when `target_type` is `instance`, `ip` or `alb`. Does not apply when `target_type` is `lambda`.\n"
                },
                "preserveClientIp": {
                    "type": "string",
                    "description": "Whether client IP preservation is enabled. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#client-ip-preservation) for more information.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol to use for routing traffic to the targets.\nShould be one of `GENEVE`, `HTTP`, `HTTPS`, `TCP`, `TCP_UDP`, `TLS`, or `UDP`.\nRequired when `target_type` is `instance`, `ip`, or `alb`.\nDoes not apply when `target_type` is `lambda`.\n"
                },
                "protocolVersion": {
                    "type": "string",
                    "description": "Only applicable when `protocol` is `HTTP` or `HTTPS`. The protocol version. Specify `GRPC` to send requests to targets using gRPC. Specify `HTTP2` to send requests to targets using HTTP/2. The default is `HTTP1`, which sends requests to targets using HTTP/1.1\n"
                },
                "proxyProtocolV2": {
                    "type": "boolean",
                    "description": "Whether to enable support for proxy protocol v2 on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#proxy-protocol) for more information. Default is `false`.\n"
                },
                "slowStart": {
                    "type": "integer",
                    "description": "Amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds.\n"
                },
                "stickiness": {
                    "$ref": "#/types/aws:alb/TargetGroupStickiness:TargetGroupStickiness",
                    "description": "Stickiness configuration block. Detailed below.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                },
                "targetFailovers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:alb/TargetGroupTargetFailover:TargetGroupTargetFailover"
                    },
                    "description": "Target failover block. Only applicable for Gateway Load Balancer target groups. See target_failover for more information.\n"
                },
                "targetHealthStates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:alb/TargetGroupTargetHealthState:TargetGroupTargetHealthState"
                    },
                    "description": "Target health state block. Only applicable for Network Load Balancer target groups when `protocol` is `TCP` or `TLS`. See target_health_state for more information.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "Type of target that you must specify when registering targets with this target group.\nSee [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html) for supported values.\nThe default is `instance`.\n\nNote that you can't specify targets for a target group using both instance IDs and IP addresses.\n\nIf the target type is `ip`, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.\n\nNetwork Load Balancers do not support the `lambda` target type.\n\nApplication Load Balancers do not support the `alb` target type.\n"
                },
                "vpcId": {
                    "type": "string",
                    "description": "Identifier of the VPC in which to create the target group. Required when `target_type` is `instance`, `ip` or `alb`. Does not apply when `target_type` is `lambda`.\n"
                }
            },
            "required": [
                "arn",
                "arnSuffix",
                "connectionTermination",
                "healthCheck",
                "ipAddressType",
                "loadBalancingAlgorithmType",
                "loadBalancingCrossZoneEnabled",
                "name",
                "namePrefix",
                "preserveClientIp",
                "protocolVersion",
                "stickiness",
                "tagsAll",
                "targetFailovers",
                "targetHealthStates"
            ],
            "inputProperties": {
                "connectionTermination": {
                    "type": "boolean",
                    "description": "Whether to terminate connections at the end of the deregistration timeout on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#deregistration-delay) for more information. Default is `false`.\n"
                },
                "deregistrationDelay": {
                    "type": "integer",
                    "description": "Amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.\n"
                },
                "healthCheck": {
                    "$ref": "#/types/aws:alb/TargetGroupHealthCheck:TargetGroupHealthCheck",
                    "description": "Health Check configuration block. Detailed below.\n"
                },
                "ipAddressType": {
                    "type": "string",
                    "description": "The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`.\n",
                    "willReplaceOnChanges": true
                },
                "lambdaMultiValueHeadersEnabled": {
                    "type": "boolean",
                    "description": "Whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when `target_type` is `lambda`. Default is `false`.\n"
                },
                "loadBalancingAlgorithmType": {
                    "type": "string",
                    "description": "Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is `round_robin` or `least_outstanding_requests`. The default is `round_robin`.\n"
                },
                "loadBalancingCrossZoneEnabled": {
                    "type": "string",
                    "description": "Indicates whether cross zone load balancing is enabled. The value is `\"true\"`, `\"false\"` or `\"use_load_balancer_configuration\"`. The default is `\"use_load_balancer_configuration\"`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the target group. If omitted, this provider will assign a random, unique name. This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n",
                    "willReplaceOnChanges": true
                },
                "namePrefix": {
                    "type": "string",
                    "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`. Cannot be longer than 6 characters.\n",
                    "willReplaceOnChanges": true
                },
                "port": {
                    "type": "integer",
                    "description": "Port on which targets receive traffic, unless overridden when registering a specific target. Required when `target_type` is `instance`, `ip` or `alb`. Does not apply when `target_type` is `lambda`.\n",
                    "willReplaceOnChanges": true
                },
                "preserveClientIp": {
                    "type": "string",
                    "description": "Whether client IP preservation is enabled. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#client-ip-preservation) for more information.\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Protocol to use for routing traffic to the targets.\nShould be one of `GENEVE`, `HTTP`, `HTTPS`, `TCP`, `TCP_UDP`, `TLS`, or `UDP`.\nRequired when `target_type` is `instance`, `ip`, or `alb`.\nDoes not apply when `target_type` is `lambda`.\n",
                    "willReplaceOnChanges": true
                },
                "protocolVersion": {
                    "type": "string",
                    "description": "Only applicable when `protocol` is `HTTP` or `HTTPS`. The protocol version. Specify `GRPC` to send requests to targets using gRPC. Specify `HTTP2` to send requests to targets using HTTP/2. The default is `HTTP1`, which sends requests to targets using HTTP/1.1\n",
                    "willReplaceOnChanges": true
                },
                "proxyProtocolV2": {
                    "type": "boolean",
                    "description": "Whether to enable support for proxy protocol v2 on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#proxy-protocol) for more information. Default is `false`.\n"
                },
                "slowStart": {
                    "type": "integer",
                    "description": "Amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds.\n"
                },
                "stickiness": {
                    "$ref": "#/types/aws:alb/TargetGroupStickiness:TargetGroupStickiness",
                    "description": "Stickiness configuration block. Detailed below.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "targetFailovers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:alb/TargetGroupTargetFailover:TargetGroupTargetFailover"
                    },
                    "description": "Target failover block. Only applicable for Gateway Load Balancer target groups. See target_failover for more information.\n"
                },
                "targetHealthStates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:alb/TargetGroupTargetHealthState:TargetGroupTargetHealthState"
                    },
                    "description": "Target health state block. Only applicable for Network Load Balancer target groups when `protocol` is `TCP` or `TLS`. See target_health_state for more information.\n"
                },
                "targetType": {
                    "type": "string",
                    "description": "Type of target that you must specify when registering targets with this target group.\nSee [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html) for supported values.\nThe default is `instance`.\n\nNote that you can't specify targets for a target group using both instance IDs and IP addresses.\n\nIf the target type is `ip`, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.\n\nNetwork Load Balancers do not support the `lambda` target type.\n\nApplication Load Balancers do not support the `alb` target type.\n",
                    "willReplaceOnChanges": true
                },
                "vpcId": {
                    "type": "string",
                    "description": "Identifier of the VPC in which to create the target group. Required when `target_type` is `instance`, `ip` or `alb`. Does not apply when `target_type` is `lambda`.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TargetGroup resources.\n",
                "properties": {
                    "arn": {
                        "type": "string",
                        "description": "ARN of the Target Group (matches `id`).\n"
                    },
                    "arnSuffix": {
                        "type": "string",
                        "description": "ARN suffix for use with CloudWatch Metrics.\n"
                    },
                    "connectionTermination": {
                        "type": "boolean",
                        "description": "Whether to terminate connections at the end of the deregistration timeout on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#deregistration-delay) for more information. Default is `false`.\n"
                    },
                    "deregistrationDelay": {
                        "type": "integer",
                        "description": "Amount time for Elastic Load Balancing to wait before changing the state of a deregistering target from draining to unused. The range is 0-3600 seconds. The default value is 300 seconds.\n"
                    },
                    "healthCheck": {
                        "$ref": "#/types/aws:alb/TargetGroupHealthCheck:TargetGroupHealthCheck",
                        "description": "Health Check configuration block. Detailed below.\n"
                    },
                    "ipAddressType": {
                        "type": "string",
                        "description": "The type of IP addresses used by the target group, only supported when target type is set to `ip`. Possible values are `ipv4` or `ipv6`.\n",
                        "willReplaceOnChanges": true
                    },
                    "lambdaMultiValueHeadersEnabled": {
                        "type": "boolean",
                        "description": "Whether the request and response headers exchanged between the load balancer and the Lambda function include arrays of values or strings. Only applies when `target_type` is `lambda`. Default is `false`.\n"
                    },
                    "loadBalancingAlgorithmType": {
                        "type": "string",
                        "description": "Determines how the load balancer selects targets when routing requests. Only applicable for Application Load Balancer Target Groups. The value is `round_robin` or `least_outstanding_requests`. The default is `round_robin`.\n"
                    },
                    "loadBalancingCrossZoneEnabled": {
                        "type": "string",
                        "description": "Indicates whether cross zone load balancing is enabled. The value is `\"true\"`, `\"false\"` or `\"use_load_balancer_configuration\"`. The default is `\"use_load_balancer_configuration\"`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the target group. If omitted, this provider will assign a random, unique name. This name must be unique per region per account, can have a maximum of 32 characters, must contain only alphanumeric characters or hyphens, and must not begin or end with a hyphen.\n",
                        "willReplaceOnChanges": true
                    },
                    "namePrefix": {
                        "type": "string",
                        "description": "Creates a unique name beginning with the specified prefix. Conflicts with `name`. Cannot be longer than 6 characters.\n",
                        "willReplaceOnChanges": true
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port on which targets receive traffic, unless overridden when registering a specific target. Required when `target_type` is `instance`, `ip` or `alb`. Does not apply when `target_type` is `lambda`.\n",
                        "willReplaceOnChanges": true
                    },
                    "preserveClientIp": {
                        "type": "string",
                        "description": "Whether client IP preservation is enabled. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#client-ip-preservation) for more information.\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Protocol to use for routing traffic to the targets.\nShould be one of `GENEVE`, `HTTP`, `HTTPS`, `TCP`, `TCP_UDP`, `TLS`, or `UDP`.\nRequired when `target_type` is `instance`, `ip`, or `alb`.\nDoes not apply when `target_type` is `lambda`.\n",
                        "willReplaceOnChanges": true
                    },
                    "protocolVersion": {
                        "type": "string",
                        "description": "Only applicable when `protocol` is `HTTP` or `HTTPS`. The protocol version. Specify `GRPC` to send requests to targets using gRPC. Specify `HTTP2` to send requests to targets using HTTP/2. The default is `HTTP1`, which sends requests to targets using HTTP/1.1\n",
                        "willReplaceOnChanges": true
                    },
                    "proxyProtocolV2": {
                        "type": "boolean",
                        "description": "Whether to enable support for proxy protocol v2 on Network Load Balancers. See [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/load-balancer-target-groups.html#proxy-protocol) for more information. Default is `false`.\n"
                    },
                    "slowStart": {
                        "type": "integer",
                        "description": "Amount time for targets to warm up before the load balancer sends them a full share of requests. The range is 30-900 seconds or 0 to disable. The default value is 0 seconds.\n"
                    },
                    "stickiness": {
                        "$ref": "#/types/aws:alb/TargetGroupStickiness:TargetGroupStickiness",
                        "description": "Stickiness configuration block. Detailed below.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    },
                    "targetFailovers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:alb/TargetGroupTargetFailover:TargetGroupTargetFailover"
                        },
                        "description": "Target failover block. Only applicable for Gateway Load Balancer target groups. See target_failover for more information.\n"
                    },
                    "targetHealthStates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:alb/TargetGroupTargetHealthState:TargetGroupTargetHealthState"
                        },
                        "description": "Target health state block. Only applicable for Network Load Balancer target groups when `protocol` is `TCP` or `TLS`. See target_health_state for more information.\n"
                    },
                    "targetType": {
                        "type": "string",
                        "description": "Type of target that you must specify when registering targets with this target group.\nSee [doc](https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html) for supported values.\nThe default is `instance`.\n\nNote that you can't specify targets for a target group using both instance IDs and IP addresses.\n\nIf the target type is `ip`, specify IP addresses from the subnets of the virtual private cloud (VPC) for the target group, the RFC 1918 range (10.0.0.0/8, 172.16.0.0/12, and 192.168.0.0/16), and the RFC 6598 range (100.64.0.0/10). You can't specify publicly routable IP addresses.\n\nNetwork Load Balancers do not support the `lambda` target type.\n\nApplication Load Balancers do not support the `alb` target type.\n",
                        "willReplaceOnChanges": true
                    },
                    "vpcId": {
                        "type": "string",
                        "description": "Identifier of the VPC in which to create the target group. Required when `target_type` is `instance`, `ip` or `alb`. Does not apply when `target_type` is `lambda`.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            },
            "aliases": [
                {
                    "type": "aws:applicationloadbalancing/targetGroup:TargetGroup"
                }
            ]
        }