{
    "properties": {
        "arn": {
            "type": "string",
            "description": "The ARN of the Lightsail key pair.\n"
        },
        "encryptedFingerprint": {
            "type": "string",
            "description": "The MD5 public key fingerprint for the encrypted private key.\n"
        },
        "encryptedPrivateKey": {
            "type": "string",
            "description": "the private key material, base 64 encoded and encrypted with the given `pgp_key`. This is only populated when creating a new key and `pgp_key` is supplied.\n"
        },
        "fingerprint": {
            "type": "string",
            "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.\n"
        },
        "name": {
            "type": "string",
            "description": "The name of the Lightsail Key Pair. If omitted, a unique name will be generated by this provider\n"
        },
        "namePrefix": {
            "type": "string"
        },
        "pgpKey": {
            "type": "string",
            "description": "An optional PGP key to encrypt the resulting private key material. Only used when creating a new key pair\n"
        },
        "privateKey": {
            "type": "string",
            "description": "the private key, base64 encoded. This is only populated when creating a new key, and when no `pgp_key` is provided.\n"
        },
        "publicKey": {
            "type": "string",
            "description": "The public key material. This public key will be imported into Lightsail\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n\n\u003e **NOTE:** a PGP key is not required, however it is strongly encouraged. Without a PGP key, the private key material will be stored in state unencrypted.`pgp_key` is ignored if `public_key` is supplied.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        }
    },
    "required": [
        "arn",
        "encryptedFingerprint",
        "encryptedPrivateKey",
        "fingerprint",
        "name",
        "namePrefix",
        "privateKey",
        "publicKey",
        "tagsAll"
    ],
    "inputProperties": {
        "name": {
            "type": "string",
            "description": "The name of the Lightsail Key Pair. If omitted, a unique name will be generated by this provider\n",
            "willReplaceOnChanges": true
        },
        "namePrefix": {
            "type": "string",
            "willReplaceOnChanges": true
        },
        "pgpKey": {
            "type": "string",
            "description": "An optional PGP key to encrypt the resulting private key material. Only used when creating a new key pair\n",
            "willReplaceOnChanges": true
        },
        "publicKey": {
            "type": "string",
            "description": "The public key material. This public key will be imported into Lightsail\n",
            "willReplaceOnChanges": true
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n\n\u003e **NOTE:** a PGP key is not required, however it is strongly encouraged. Without a PGP key, the private key material will be stored in state unencrypted.`pgp_key` is ignored if `public_key` is supplied.\n"
        }
    },
    "stateInputs": {
        "description": "Input properties used for looking up and filtering KeyPair resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "The ARN of the Lightsail key pair.\n"
            },
            "encryptedFingerprint": {
                "type": "string",
                "description": "The MD5 public key fingerprint for the encrypted private key.\n"
            },
            "encryptedPrivateKey": {
                "type": "string",
                "description": "the private key material, base 64 encoded and encrypted with the given `pgp_key`. This is only populated when creating a new key and `pgp_key` is supplied.\n"
            },
            "fingerprint": {
                "type": "string",
                "description": "The MD5 public key fingerprint as specified in section 4 of RFC 4716.\n"
            },
            "name": {
                "type": "string",
                "description": "The name of the Lightsail Key Pair. If omitted, a unique name will be generated by this provider\n",
                "willReplaceOnChanges": true
            },
            "namePrefix": {
                "type": "string",
                "willReplaceOnChanges": true
            },
            "pgpKey": {
                "type": "string",
                "description": "An optional PGP key to encrypt the resulting private key material. Only used when creating a new key pair\n",
                "willReplaceOnChanges": true
            },
            "privateKey": {
                "type": "string",
                "description": "the private key, base64 encoded. This is only populated when creating a new key, and when no `pgp_key` is provided.\n"
            },
            "publicKey": {
                "type": "string",
                "description": "The public key material. This public key will be imported into Lightsail\n",
                "willReplaceOnChanges": true
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the collection. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n\n\u003e **NOTE:** a PGP key is not required, however it is strongly encouraged. Without a PGP key, the private key material will be stored in state unencrypted.`pgp_key` is ignored if `public_key` is supplied.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            }
        },
        "type": "object"
    }
}