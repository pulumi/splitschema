{
    "properties": {
        "action": {
            "type": "string",
            "description": "The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)\n"
        },
        "eventSourceToken": {
            "type": "string",
            "description": "The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).\n"
        },
        "function": {
            "type": "string",
            "description": "Name of the Lambda function whose resource policy you are updating\n"
        },
        "functionUrlAuthType": {
            "type": "string",
            "description": "Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`. Only supported for `lambda:InvokeFunctionUrl` action.\n"
        },
        "principal": {
            "type": "string",
            "description": "The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or AWS IAM principal, or AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.\n"
        },
        "principalOrgId": {
            "type": "string",
            "description": "The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.\n\n[1]: https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli\n[2]: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n[3]: https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\n"
        },
        "qualifier": {
            "type": "string",
            "description": "Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`\n"
        },
        "sourceAccount": {
            "type": "string",
            "description": "This parameter is used when allowing cross-account access, or for S3 and SES. The AWS account ID (without a hyphen) of the source owner.\n"
        },
        "sourceArn": {
            "type": "string",
            "description": "When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.\nWithout this, any resource from `principal` will be granted permission – even if that resource is from another account.\nFor S3, this should be the ARN of the S3 Bucket.\nFor EventBridge events, this should be the ARN of the EventBridge Rule.\nFor API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).\n"
        },
        "statementId": {
            "type": "string",
            "description": "A unique statement identifier. By default generated by the provider.\n"
        },
        "statementIdPrefix": {
            "type": "string",
            "description": "A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.\n"
        }
    },
    "required": [
        "action",
        "function",
        "principal",
        "statementId",
        "statementIdPrefix"
    ],
    "inputProperties": {
        "action": {
            "type": "string",
            "description": "The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)\n",
            "willReplaceOnChanges": true
        },
        "eventSourceToken": {
            "type": "string",
            "description": "The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).\n",
            "willReplaceOnChanges": true
        },
        "function": {
            "type": "string",
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "string",
                    "$ref": "#/types/aws:lambda/function:Function"
                }
            ],
            "description": "Name of the Lambda function whose resource policy you are updating\n",
            "willReplaceOnChanges": true
        },
        "functionUrlAuthType": {
            "type": "string",
            "description": "Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`. Only supported for `lambda:InvokeFunctionUrl` action.\n",
            "willReplaceOnChanges": true
        },
        "principal": {
            "type": "string",
            "description": "The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or AWS IAM principal, or AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.\n",
            "willReplaceOnChanges": true
        },
        "principalOrgId": {
            "type": "string",
            "description": "The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.\n\n[1]: https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli\n[2]: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n[3]: https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\n",
            "willReplaceOnChanges": true
        },
        "qualifier": {
            "type": "string",
            "description": "Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`\n",
            "willReplaceOnChanges": true
        },
        "sourceAccount": {
            "type": "string",
            "description": "This parameter is used when allowing cross-account access, or for S3 and SES. The AWS account ID (without a hyphen) of the source owner.\n",
            "willReplaceOnChanges": true
        },
        "sourceArn": {
            "type": "string",
            "description": "When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.\nWithout this, any resource from `principal` will be granted permission – even if that resource is from another account.\nFor S3, this should be the ARN of the S3 Bucket.\nFor EventBridge events, this should be the ARN of the EventBridge Rule.\nFor API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).\n",
            "willReplaceOnChanges": true
        },
        "statementId": {
            "type": "string",
            "description": "A unique statement identifier. By default generated by the provider.\n",
            "willReplaceOnChanges": true
        },
        "statementIdPrefix": {
            "type": "string",
            "description": "A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.\n",
            "willReplaceOnChanges": true
        }
    },
    "requiredInputs": [
        "action",
        "function",
        "principal"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Permission resources.\n",
        "properties": {
            "action": {
                "type": "string",
                "description": "The AWS Lambda action you want to allow in this statement. (e.g., `lambda:InvokeFunction`)\n",
                "willReplaceOnChanges": true
            },
            "eventSourceToken": {
                "type": "string",
                "description": "The Event Source Token to validate.  Used with [Alexa Skills](https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli).\n",
                "willReplaceOnChanges": true
            },
            "function": {
                "type": "string",
                "oneOf": [
                    {
                        "type": "string"
                    },
                    {
                        "type": "string",
                        "$ref": "#/types/aws:lambda/function:Function"
                    }
                ],
                "description": "Name of the Lambda function whose resource policy you are updating\n",
                "willReplaceOnChanges": true
            },
            "functionUrlAuthType": {
                "type": "string",
                "description": "Lambda Function URLs [authentication type](https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html). Valid values are: `AWS_IAM` or `NONE`. Only supported for `lambda:InvokeFunctionUrl` action.\n",
                "willReplaceOnChanges": true
            },
            "principal": {
                "type": "string",
                "description": "The principal who is getting this permission e.g., `s3.amazonaws.com`, an AWS account ID, or AWS IAM principal, or AWS service principal such as `events.amazonaws.com` or `sns.amazonaws.com`.\n",
                "willReplaceOnChanges": true
            },
            "principalOrgId": {
                "type": "string",
                "description": "The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.\n\n[1]: https://developer.amazon.com/docs/custom-skills/host-a-custom-skill-as-an-aws-lambda-function.html#use-aws-cli\n[2]: https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html\n[3]: https://docs.aws.amazon.com/lambda/latest/dg/urls-auth.html\n",
                "willReplaceOnChanges": true
            },
            "qualifier": {
                "type": "string",
                "description": "Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN e.g., `arn:aws:lambda:aws-region:acct-id:function:function-name:2`\n",
                "willReplaceOnChanges": true
            },
            "sourceAccount": {
                "type": "string",
                "description": "This parameter is used when allowing cross-account access, or for S3 and SES. The AWS account ID (without a hyphen) of the source owner.\n",
                "willReplaceOnChanges": true
            },
            "sourceArn": {
                "type": "string",
                "description": "When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to.\nWithout this, any resource from `principal` will be granted permission – even if that resource is from another account.\nFor S3, this should be the ARN of the S3 Bucket.\nFor EventBridge events, this should be the ARN of the EventBridge Rule.\nFor API Gateway, this should be the ARN of the API, as described [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-control-access-using-iam-policies-to-invoke-api.html).\n",
                "willReplaceOnChanges": true
            },
            "statementId": {
                "type": "string",
                "description": "A unique statement identifier. By default generated by the provider.\n",
                "willReplaceOnChanges": true
            },
            "statementIdPrefix": {
                "type": "string",
                "description": "A statement identifier prefix. The provider will generate a unique suffix. Conflicts with `statement_id`.\n",
                "willReplaceOnChanges": true
            }
        },
        "type": "object"
    }
}