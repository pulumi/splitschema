{
    "properties": {
        "autoscalingPolicy": {
            "type": "string",
            "description": "The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)\n"
        },
        "bidPrice": {
            "type": "string",
            "description": "If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.\n"
        },
        "clusterId": {
            "type": "string",
            "description": "ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.\n"
        },
        "configurationsJson": {
            "type": "string",
            "description": "A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst task = new aws.emr.InstanceGroup(\"task\", {configurationsJson: `[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ntask = aws.emr.InstanceGroup(\"task\", configurations_json=\"\"\"[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var task = new Aws.Emr.InstanceGroup(\"task\", new()\n    {\n        ConfigurationsJson = @\"[\n{\n\"\"Classification\"\": \"\"hadoop-env\"\",\n\"\"Configurations\"\": [\n{\n\"\"Classification\"\": \"\"export\"\",\n\"\"Properties\"\": {\n\"\"JAVA_HOME\"\": \"\"/usr/lib/jvm/java-1.8.0\"\"\n}\n}\n],\n\"\"Properties\"\": {}\n}\n]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := emr.NewInstanceGroup(ctx, \"task\", \u0026emr.InstanceGroupArgs{\n\t\t\tConfigurationsJson: pulumi.String(`[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.emr.InstanceGroup;\nimport com.pulumi.aws.emr.InstanceGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var task = new InstanceGroup(\"task\", InstanceGroupArgs.builder()        \n            .configurationsJson(\"\"\"\n[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  task:\n    type: aws:emr:InstanceGroup\n    properties:\n      configurationsJson: |+\n        [\n        {\n        \"Classification\": \"hadoop-env\",\n        \"Configurations\": [\n        {\n        \"Classification\": \"export\",\n        \"Properties\": {\n        \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n        }\n        }\n        ],\n        \"Properties\": {}\n        }\n        ]\n```\n"
        },
        "ebsConfigs": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:emr/InstanceGroupEbsConfig:InstanceGroupEbsConfig"
            },
            "description": "One or more `ebs_config` blocks as defined below. Changing this forces a new resource to be created.\n"
        },
        "ebsOptimized": {
            "type": "boolean",
            "description": "Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.\n"
        },
        "instanceCount": {
            "type": "integer",
            "description": "target number of instances for the instance group. defaults to 0.\n"
        },
        "instanceType": {
            "type": "string",
            "description": "The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.\n"
        },
        "name": {
            "type": "string",
            "description": "Human friendly name given to the instance group. Changing this forces a new resource to be created.\n"
        },
        "runningInstanceCount": {
            "type": "integer",
            "description": "The number of instances currently running in this instance group.\n"
        },
        "status": {
            "type": "string",
            "description": "The current status of the instance group.\n"
        }
    },
    "required": [
        "clusterId",
        "ebsConfigs",
        "instanceCount",
        "instanceType",
        "name",
        "runningInstanceCount",
        "status"
    ],
    "inputProperties": {
        "autoscalingPolicy": {
            "type": "string",
            "description": "The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)\n"
        },
        "bidPrice": {
            "type": "string",
            "description": "If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.\n",
            "willReplaceOnChanges": true
        },
        "clusterId": {
            "type": "string",
            "description": "ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.\n",
            "willReplaceOnChanges": true
        },
        "configurationsJson": {
            "type": "string",
            "description": "A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst task = new aws.emr.InstanceGroup(\"task\", {configurationsJson: `[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ntask = aws.emr.InstanceGroup(\"task\", configurations_json=\"\"\"[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var task = new Aws.Emr.InstanceGroup(\"task\", new()\n    {\n        ConfigurationsJson = @\"[\n{\n\"\"Classification\"\": \"\"hadoop-env\"\",\n\"\"Configurations\"\": [\n{\n\"\"Classification\"\": \"\"export\"\",\n\"\"Properties\"\": {\n\"\"JAVA_HOME\"\": \"\"/usr/lib/jvm/java-1.8.0\"\"\n}\n}\n],\n\"\"Properties\"\": {}\n}\n]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := emr.NewInstanceGroup(ctx, \"task\", \u0026emr.InstanceGroupArgs{\n\t\t\tConfigurationsJson: pulumi.String(`[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.emr.InstanceGroup;\nimport com.pulumi.aws.emr.InstanceGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var task = new InstanceGroup(\"task\", InstanceGroupArgs.builder()        \n            .configurationsJson(\"\"\"\n[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  task:\n    type: aws:emr:InstanceGroup\n    properties:\n      configurationsJson: |+\n        [\n        {\n        \"Classification\": \"hadoop-env\",\n        \"Configurations\": [\n        {\n        \"Classification\": \"export\",\n        \"Properties\": {\n        \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n        }\n        }\n        ],\n        \"Properties\": {}\n        }\n        ]\n```\n"
        },
        "ebsConfigs": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:emr/InstanceGroupEbsConfig:InstanceGroupEbsConfig"
            },
            "description": "One or more `ebs_config` blocks as defined below. Changing this forces a new resource to be created.\n",
            "willReplaceOnChanges": true
        },
        "ebsOptimized": {
            "type": "boolean",
            "description": "Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.\n",
            "willReplaceOnChanges": true
        },
        "instanceCount": {
            "type": "integer",
            "description": "target number of instances for the instance group. defaults to 0.\n"
        },
        "instanceType": {
            "type": "string",
            "description": "The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.\n",
            "willReplaceOnChanges": true
        },
        "name": {
            "type": "string",
            "description": "Human friendly name given to the instance group. Changing this forces a new resource to be created.\n",
            "willReplaceOnChanges": true
        }
    },
    "requiredInputs": [
        "clusterId",
        "instanceType"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering InstanceGroup resources.\n",
        "properties": {
            "autoscalingPolicy": {
                "type": "string",
                "description": "The autoscaling policy document. This is a JSON formatted string. See [EMR Auto Scaling](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-automatic-scaling.html)\n"
            },
            "bidPrice": {
                "type": "string",
                "description": "If set, the bid price for each EC2 instance in the instance group, expressed in USD. By setting this attribute, the instance group is being declared as a Spot Instance, and will implicitly create a Spot request. Leave this blank to use On-Demand Instances.\n",
                "willReplaceOnChanges": true
            },
            "clusterId": {
                "type": "string",
                "description": "ID of the EMR Cluster to attach to. Changing this forces a new resource to be created.\n",
                "willReplaceOnChanges": true
            },
            "configurationsJson": {
                "type": "string",
                "description": "A JSON string for supplying list of configurations specific to the EMR instance group. Note that this can only be changed when using EMR release 5.21 or later.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst task = new aws.emr.InstanceGroup(\"task\", {configurationsJson: `[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ntask = aws.emr.InstanceGroup(\"task\", configurations_json=\"\"\"[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var task = new Aws.Emr.InstanceGroup(\"task\", new()\n    {\n        ConfigurationsJson = @\"[\n{\n\"\"Classification\"\": \"\"hadoop-env\"\",\n\"\"Configurations\"\": [\n{\n\"\"Classification\"\": \"\"export\"\",\n\"\"Properties\"\": {\n\"\"JAVA_HOME\"\": \"\"/usr/lib/jvm/java-1.8.0\"\"\n}\n}\n],\n\"\"Properties\"\": {}\n}\n]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := emr.NewInstanceGroup(ctx, \"task\", \u0026emr.InstanceGroupArgs{\n\t\t\tConfigurationsJson: pulumi.String(`[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.emr.InstanceGroup;\nimport com.pulumi.aws.emr.InstanceGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var task = new InstanceGroup(\"task\", InstanceGroupArgs.builder()        \n            .configurationsJson(\"\"\"\n[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  task:\n    type: aws:emr:InstanceGroup\n    properties:\n      configurationsJson: |+\n        [\n        {\n        \"Classification\": \"hadoop-env\",\n        \"Configurations\": [\n        {\n        \"Classification\": \"export\",\n        \"Properties\": {\n        \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n        }\n        }\n        ],\n        \"Properties\": {}\n        }\n        ]\n```\n"
            },
            "ebsConfigs": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:emr/InstanceGroupEbsConfig:InstanceGroupEbsConfig"
                },
                "description": "One or more `ebs_config` blocks as defined below. Changing this forces a new resource to be created.\n",
                "willReplaceOnChanges": true
            },
            "ebsOptimized": {
                "type": "boolean",
                "description": "Indicates whether an Amazon EBS volume is EBS-optimized. Changing this forces a new resource to be created.\n",
                "willReplaceOnChanges": true
            },
            "instanceCount": {
                "type": "integer",
                "description": "target number of instances for the instance group. defaults to 0.\n"
            },
            "instanceType": {
                "type": "string",
                "description": "The EC2 instance type for all instances in the instance group. Changing this forces a new resource to be created.\n",
                "willReplaceOnChanges": true
            },
            "name": {
                "type": "string",
                "description": "Human friendly name given to the instance group. Changing this forces a new resource to be created.\n",
                "willReplaceOnChanges": true
            },
            "runningInstanceCount": {
                "type": "integer",
                "description": "The number of instances currently running in this instance group.\n"
            },
            "status": {
                "type": "string",
                "description": "The current status of the instance group.\n"
            }
        },
        "type": "object"
    }
}