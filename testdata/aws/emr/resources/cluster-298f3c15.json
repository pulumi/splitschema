{
            "properties": {
                "additionalInfo": {
                    "type": "string",
                    "description": "JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.\n"
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).\n"
                },
                "arn": {
                    "type": "string",
                    "description": "ARN of the cluster.\n"
                },
                "autoTerminationPolicy": {
                    "$ref": "#/types/aws:emr/ClusterAutoTerminationPolicy:ClusterAutoTerminationPolicy",
                    "description": "An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.\n"
                },
                "autoscalingRole": {
                    "type": "string",
                    "description": "IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.\n"
                },
                "bootstrapActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:emr/ClusterBootstrapAction:ClusterBootstrapAction"
                    },
                    "description": "Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.\n"
                },
                "clusterState": {
                    "type": "string",
                    "language": {
                        "csharp": {
                            "name": "State"
                        }
                    }
                },
                "configurations": {
                    "type": "string",
                    "description": "List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.\n"
                },
                "configurationsJson": {
                    "type": "string",
                    "description": "JSON string for supplying list of configurations for the EMR cluster.\n\n\u003e **NOTE on `configurations_json`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `\"Configurations\": []`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst cluster = new aws.emr.Cluster(\"cluster\", {configurationsJson: `[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ncluster = aws.emr.Cluster(\"cluster\", configurations_json=\"\"\"[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cluster = new Aws.Emr.Cluster(\"cluster\", new()\n    {\n        ConfigurationsJson = @\"[\n{\n\"\"Classification\"\": \"\"hadoop-env\"\",\n\"\"Configurations\"\": [\n{\n\"\"Classification\"\": \"\"export\"\",\n\"\"Properties\"\": {\n\"\"JAVA_HOME\"\": \"\"/usr/lib/jvm/java-1.8.0\"\"\n}\n}\n],\n\"\"Properties\"\": {}\n}\n]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := emr.NewCluster(ctx, \"cluster\", \u0026emr.ClusterArgs{\n\t\t\tConfigurationsJson: pulumi.String(`[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.emr.Cluster;\nimport com.pulumi.aws.emr.ClusterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cluster = new Cluster(\"cluster\", ClusterArgs.builder()        \n            .configurationsJson(\"\"\"\n[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cluster:\n    type: aws:emr:Cluster\n    properties:\n      configurationsJson: |+\n        [\n        {\n        \"Classification\": \"hadoop-env\",\n        \"Configurations\": [\n        {\n        \"Classification\": \"export\",\n        \"Properties\": {\n        \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n        }\n        }\n        ],\n        \"Properties\": {}\n        }\n        ]\n```\n"
                },
                "coreInstanceFleet": {
                    "$ref": "#/types/aws:emr/ClusterCoreInstanceFleet:ClusterCoreInstanceFleet",
                    "description": "Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.\n"
                },
                "coreInstanceGroup": {
                    "$ref": "#/types/aws:emr/ClusterCoreInstanceGroup:ClusterCoreInstanceGroup",
                    "description": "Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).\n"
                },
                "customAmiId": {
                    "type": "string",
                    "description": "Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.\n"
                },
                "ebsRootVolumeSize": {
                    "type": "integer",
                    "description": "Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.\n"
                },
                "ec2Attributes": {
                    "$ref": "#/types/aws:emr/ClusterEc2Attributes:ClusterEc2Attributes",
                    "description": "Attributes for the EC2 instances running the job flow. See below.\n"
                },
                "keepJobFlowAliveWhenNoSteps": {
                    "type": "boolean",
                    "description": "Switch on/off run cluster with no steps or when all steps are complete (default is on)\n"
                },
                "kerberosAttributes": {
                    "$ref": "#/types/aws:emr/ClusterKerberosAttributes:ClusterKerberosAttributes",
                    "description": "Kerberos configuration for the cluster. See below.\n"
                },
                "listStepsStates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps\n"
                },
                "logEncryptionKmsKeyId": {
                    "type": "string",
                    "description": "AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.\n"
                },
                "logUri": {
                    "type": "string",
                    "description": "S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.\n"
                },
                "masterInstanceFleet": {
                    "$ref": "#/types/aws:emr/ClusterMasterInstanceFleet:ClusterMasterInstanceFleet",
                    "description": "Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.\n"
                },
                "masterInstanceGroup": {
                    "$ref": "#/types/aws:emr/ClusterMasterInstanceGroup:ClusterMasterInstanceGroup",
                    "description": "Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).\n"
                },
                "masterPublicDns": {
                    "type": "string",
                    "description": "The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the job flow.\n"
                },
                "placementGroupConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:emr/ClusterPlacementGroupConfig:ClusterPlacementGroupConfig"
                    },
                    "description": "The specified placement group configuration for an Amazon EMR cluster.\n"
                },
                "releaseLabel": {
                    "type": "string",
                    "description": "Release label for the Amazon EMR release.\n"
                },
                "scaleDownBehavior": {
                    "type": "string",
                    "description": "Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.\n"
                },
                "securityConfiguration": {
                    "type": "string",
                    "description": "Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.\n"
                },
                "serviceRole": {
                    "type": "string",
                    "description": "IAM role that will be assumed by the Amazon EMR service to access AWS resources.\n\nThe following arguments are optional:\n"
                },
                "stepConcurrencyLevel": {
                    "type": "integer",
                    "description": "Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:emr/ClusterStep:ClusterStep"
                    },
                    "description": "List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.\n"
                },
                "visibleToAllUsers": {
                    "type": "boolean",
                    "description": "Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.\n"
                }
            },
            "required": [
                "arn",
                "clusterState",
                "coreInstanceFleet",
                "coreInstanceGroup",
                "keepJobFlowAliveWhenNoSteps",
                "masterInstanceFleet",
                "masterInstanceGroup",
                "masterPublicDns",
                "name",
                "releaseLabel",
                "scaleDownBehavior",
                "serviceRole",
                "steps",
                "tagsAll",
                "terminationProtection"
            ],
            "inputProperties": {
                "additionalInfo": {
                    "type": "string",
                    "description": "JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.\n",
                    "willReplaceOnChanges": true
                },
                "applications": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).\n",
                    "willReplaceOnChanges": true
                },
                "autoTerminationPolicy": {
                    "$ref": "#/types/aws:emr/ClusterAutoTerminationPolicy:ClusterAutoTerminationPolicy",
                    "description": "An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.\n"
                },
                "autoscalingRole": {
                    "type": "string",
                    "description": "IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.\n",
                    "willReplaceOnChanges": true
                },
                "bootstrapActions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:emr/ClusterBootstrapAction:ClusterBootstrapAction"
                    },
                    "description": "Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.\n",
                    "willReplaceOnChanges": true
                },
                "configurations": {
                    "type": "string",
                    "description": "List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.\n",
                    "willReplaceOnChanges": true
                },
                "configurationsJson": {
                    "type": "string",
                    "description": "JSON string for supplying list of configurations for the EMR cluster.\n\n\u003e **NOTE on `configurations_json`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `\"Configurations\": []`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst cluster = new aws.emr.Cluster(\"cluster\", {configurationsJson: `[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ncluster = aws.emr.Cluster(\"cluster\", configurations_json=\"\"\"[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cluster = new Aws.Emr.Cluster(\"cluster\", new()\n    {\n        ConfigurationsJson = @\"[\n{\n\"\"Classification\"\": \"\"hadoop-env\"\",\n\"\"Configurations\"\": [\n{\n\"\"Classification\"\": \"\"export\"\",\n\"\"Properties\"\": {\n\"\"JAVA_HOME\"\": \"\"/usr/lib/jvm/java-1.8.0\"\"\n}\n}\n],\n\"\"Properties\"\": {}\n}\n]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := emr.NewCluster(ctx, \"cluster\", \u0026emr.ClusterArgs{\n\t\t\tConfigurationsJson: pulumi.String(`[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.emr.Cluster;\nimport com.pulumi.aws.emr.ClusterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cluster = new Cluster(\"cluster\", ClusterArgs.builder()        \n            .configurationsJson(\"\"\"\n[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cluster:\n    type: aws:emr:Cluster\n    properties:\n      configurationsJson: |+\n        [\n        {\n        \"Classification\": \"hadoop-env\",\n        \"Configurations\": [\n        {\n        \"Classification\": \"export\",\n        \"Properties\": {\n        \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n        }\n        }\n        ],\n        \"Properties\": {}\n        }\n        ]\n```\n",
                    "willReplaceOnChanges": true
                },
                "coreInstanceFleet": {
                    "$ref": "#/types/aws:emr/ClusterCoreInstanceFleet:ClusterCoreInstanceFleet",
                    "description": "Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.\n",
                    "willReplaceOnChanges": true
                },
                "coreInstanceGroup": {
                    "$ref": "#/types/aws:emr/ClusterCoreInstanceGroup:ClusterCoreInstanceGroup",
                    "description": "Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).\n",
                    "willReplaceOnChanges": true
                },
                "customAmiId": {
                    "type": "string",
                    "description": "Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.\n",
                    "willReplaceOnChanges": true
                },
                "ebsRootVolumeSize": {
                    "type": "integer",
                    "description": "Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.\n",
                    "willReplaceOnChanges": true
                },
                "ec2Attributes": {
                    "$ref": "#/types/aws:emr/ClusterEc2Attributes:ClusterEc2Attributes",
                    "description": "Attributes for the EC2 instances running the job flow. See below.\n",
                    "willReplaceOnChanges": true
                },
                "keepJobFlowAliveWhenNoSteps": {
                    "type": "boolean",
                    "description": "Switch on/off run cluster with no steps or when all steps are complete (default is on)\n",
                    "willReplaceOnChanges": true
                },
                "kerberosAttributes": {
                    "$ref": "#/types/aws:emr/ClusterKerberosAttributes:ClusterKerberosAttributes",
                    "description": "Kerberos configuration for the cluster. See below.\n",
                    "willReplaceOnChanges": true
                },
                "listStepsStates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps\n"
                },
                "logEncryptionKmsKeyId": {
                    "type": "string",
                    "description": "AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.\n",
                    "willReplaceOnChanges": true
                },
                "logUri": {
                    "type": "string",
                    "description": "S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.\n",
                    "willReplaceOnChanges": true
                },
                "masterInstanceFleet": {
                    "$ref": "#/types/aws:emr/ClusterMasterInstanceFleet:ClusterMasterInstanceFleet",
                    "description": "Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.\n",
                    "willReplaceOnChanges": true
                },
                "masterInstanceGroup": {
                    "$ref": "#/types/aws:emr/ClusterMasterInstanceGroup:ClusterMasterInstanceGroup",
                    "description": "Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the job flow.\n",
                    "willReplaceOnChanges": true
                },
                "placementGroupConfigs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:emr/ClusterPlacementGroupConfig:ClusterPlacementGroupConfig"
                    },
                    "description": "The specified placement group configuration for an Amazon EMR cluster.\n",
                    "willReplaceOnChanges": true
                },
                "releaseLabel": {
                    "type": "string",
                    "description": "Release label for the Amazon EMR release.\n",
                    "willReplaceOnChanges": true
                },
                "scaleDownBehavior": {
                    "type": "string",
                    "description": "Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.\n",
                    "willReplaceOnChanges": true
                },
                "securityConfiguration": {
                    "type": "string",
                    "description": "Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.\n",
                    "willReplaceOnChanges": true
                },
                "serviceRole": {
                    "type": "string",
                    "description": "IAM role that will be assumed by the Amazon EMR service to access AWS resources.\n\nThe following arguments are optional:\n",
                    "willReplaceOnChanges": true
                },
                "stepConcurrencyLevel": {
                    "type": "integer",
                    "description": "Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).\n"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:emr/ClusterStep:ClusterStep"
                    },
                    "description": "List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "terminationProtection": {
                    "type": "boolean",
                    "description": "Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.\n"
                },
                "visibleToAllUsers": {
                    "type": "boolean",
                    "description": "Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.\n"
                }
            },
            "requiredInputs": [
                "releaseLabel",
                "serviceRole"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "additionalInfo": {
                        "type": "string",
                        "description": "JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.\n",
                        "willReplaceOnChanges": true
                    },
                    "applications": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).\n",
                        "willReplaceOnChanges": true
                    },
                    "arn": {
                        "type": "string",
                        "description": "ARN of the cluster.\n"
                    },
                    "autoTerminationPolicy": {
                        "$ref": "#/types/aws:emr/ClusterAutoTerminationPolicy:ClusterAutoTerminationPolicy",
                        "description": "An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.\n"
                    },
                    "autoscalingRole": {
                        "type": "string",
                        "description": "IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.\n",
                        "willReplaceOnChanges": true
                    },
                    "bootstrapActions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:emr/ClusterBootstrapAction:ClusterBootstrapAction"
                        },
                        "description": "Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.\n",
                        "willReplaceOnChanges": true
                    },
                    "clusterState": {
                        "type": "string",
                        "language": {
                            "csharp": {
                                "name": "State"
                            }
                        }
                    },
                    "configurations": {
                        "type": "string",
                        "description": "List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.\n",
                        "willReplaceOnChanges": true
                    },
                    "configurationsJson": {
                        "type": "string",
                        "description": "JSON string for supplying list of configurations for the EMR cluster.\n\n\u003e **NOTE on `configurations_json`:** If the `Configurations` value is empty then you should skip the `Configurations` field instead of providing an empty list as a value, `\"Configurations\": []`.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as aws from \"@pulumi/aws\";\n\nconst cluster = new aws.emr.Cluster(\"cluster\", {configurationsJson: `[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`});\n```\n```python\nimport pulumi\nimport pulumi_aws as aws\n\ncluster = aws.emr.Cluster(\"cluster\", configurations_json=\"\"\"[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Aws = Pulumi.Aws;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var cluster = new Aws.Emr.Cluster(\"cluster\", new()\n    {\n        ConfigurationsJson = @\"[\n{\n\"\"Classification\"\": \"\"hadoop-env\"\",\n\"\"Configurations\"\": [\n{\n\"\"Classification\"\": \"\"export\"\",\n\"\"Properties\"\": {\n\"\"JAVA_HOME\"\": \"\"/usr/lib/jvm/java-1.8.0\"\"\n}\n}\n],\n\"\"Properties\"\": {}\n}\n]\n\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/emr\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := emr.NewCluster(ctx, \"cluster\", \u0026emr.ClusterArgs{\n\t\t\tConfigurationsJson: pulumi.String(`[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n`),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.aws.emr.Cluster;\nimport com.pulumi.aws.emr.ClusterArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var cluster = new Cluster(\"cluster\", ClusterArgs.builder()        \n            .configurationsJson(\"\"\"\n[\n{\n\"Classification\": \"hadoop-env\",\n\"Configurations\": [\n{\n\"Classification\": \"export\",\n\"Properties\": {\n\"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n}\n}\n],\n\"Properties\": {}\n}\n]\n\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  cluster:\n    type: aws:emr:Cluster\n    properties:\n      configurationsJson: |+\n        [\n        {\n        \"Classification\": \"hadoop-env\",\n        \"Configurations\": [\n        {\n        \"Classification\": \"export\",\n        \"Properties\": {\n        \"JAVA_HOME\": \"/usr/lib/jvm/java-1.8.0\"\n        }\n        }\n        ],\n        \"Properties\": {}\n        }\n        ]\n```\n",
                        "willReplaceOnChanges": true
                    },
                    "coreInstanceFleet": {
                        "$ref": "#/types/aws:emr/ClusterCoreInstanceFleet:ClusterCoreInstanceFleet",
                        "description": "Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `core_instance_group` configuration blocks are set. Detailed below.\n",
                        "willReplaceOnChanges": true
                    },
                    "coreInstanceGroup": {
                        "$ref": "#/types/aws:emr/ClusterCoreInstanceGroup:ClusterCoreInstanceGroup",
                        "description": "Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).\n",
                        "willReplaceOnChanges": true
                    },
                    "customAmiId": {
                        "type": "string",
                        "description": "Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.\n",
                        "willReplaceOnChanges": true
                    },
                    "ebsRootVolumeSize": {
                        "type": "integer",
                        "description": "Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.\n",
                        "willReplaceOnChanges": true
                    },
                    "ec2Attributes": {
                        "$ref": "#/types/aws:emr/ClusterEc2Attributes:ClusterEc2Attributes",
                        "description": "Attributes for the EC2 instances running the job flow. See below.\n",
                        "willReplaceOnChanges": true
                    },
                    "keepJobFlowAliveWhenNoSteps": {
                        "type": "boolean",
                        "description": "Switch on/off run cluster with no steps or when all steps are complete (default is on)\n",
                        "willReplaceOnChanges": true
                    },
                    "kerberosAttributes": {
                        "$ref": "#/types/aws:emr/ClusterKerberosAttributes:ClusterKerberosAttributes",
                        "description": "Kerberos configuration for the cluster. See below.\n",
                        "willReplaceOnChanges": true
                    },
                    "listStepsStates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps\n"
                    },
                    "logEncryptionKmsKeyId": {
                        "type": "string",
                        "description": "AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.\n",
                        "willReplaceOnChanges": true
                    },
                    "logUri": {
                        "type": "string",
                        "description": "S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.\n",
                        "willReplaceOnChanges": true
                    },
                    "masterInstanceFleet": {
                        "$ref": "#/types/aws:emr/ClusterMasterInstanceFleet:ClusterMasterInstanceFleet",
                        "description": "Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `master_instance_group` configuration blocks are set. Detailed below.\n",
                        "willReplaceOnChanges": true
                    },
                    "masterInstanceGroup": {
                        "$ref": "#/types/aws:emr/ClusterMasterInstanceGroup:ClusterMasterInstanceGroup",
                        "description": "Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).\n",
                        "willReplaceOnChanges": true
                    },
                    "masterPublicDns": {
                        "type": "string",
                        "description": "The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the job flow.\n",
                        "willReplaceOnChanges": true
                    },
                    "placementGroupConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:emr/ClusterPlacementGroupConfig:ClusterPlacementGroupConfig"
                        },
                        "description": "The specified placement group configuration for an Amazon EMR cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "releaseLabel": {
                        "type": "string",
                        "description": "Release label for the Amazon EMR release.\n",
                        "willReplaceOnChanges": true
                    },
                    "scaleDownBehavior": {
                        "type": "string",
                        "description": "Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.\n",
                        "willReplaceOnChanges": true
                    },
                    "securityConfiguration": {
                        "type": "string",
                        "description": "Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `release_label` 4.8.0 or greater.\n",
                        "willReplaceOnChanges": true
                    },
                    "serviceRole": {
                        "type": "string",
                        "description": "IAM role that will be assumed by the Amazon EMR service to access AWS resources.\n\nThe following arguments are optional:\n",
                        "willReplaceOnChanges": true
                    },
                    "stepConcurrencyLevel": {
                        "type": "integer",
                        "description": "Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `release_label` 5.28.0 or greater (default is 1).\n"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:emr/ClusterStep:ClusterStep"
                        },
                        "description": "List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "list of tags to apply to the EMR Cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    },
                    "terminationProtection": {
                        "type": "boolean",
                        "description": "Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.\n"
                    },
                    "visibleToAllUsers": {
                        "type": "boolean",
                        "description": "Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.\n"
                    }
                },
                "type": "object"
            }
        }