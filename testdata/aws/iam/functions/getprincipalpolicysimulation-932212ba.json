{
            "inputs": {
                "description": "A collection of arguments for invoking getPrincipalPolicySimulation.\n",
                "properties": {
                    "actionNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of IAM action names to run simulations for. Each entry in this set adds an additional hypothetical request to the simulation.\n\nAction names consist of a service prefix and an action verb separated by a colon, such as `s3:GetObject`. Refer to [Actions, resources, and condition keys for AWS services](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html) to see the full set of possible IAM action names across all AWS services.\n"
                    },
                    "additionalPoliciesJsons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of additional principal policy documents to include in the simulation. The simulator will behave as if each of these policies were associated with the object specified in `policy_source_arn`, allowing you to test the effect of hypothetical policies not yet created.\n"
                    },
                    "callerArn": {
                        "type": "string",
                        "description": "The ARN of an user that will appear as the \"caller\" of the simulated requests. If you do not specify `caller_arn` then the simulation will use the `policy_source_arn` instead, if it contains a user ARN.\n"
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:iam/getPrincipalPolicySimulationContext:getPrincipalPolicySimulationContext"
                        },
                        "description": "Each `context` block defines an entry in the table of additional context keys in the simulated request.\n\nIAM uses context keys for both custom conditions and for interpolating dynamic request-specific values into policy values. If you use policies that include those features then you will need to provide suitable example values for those keys to achieve a realistic simulation.\n"
                    },
                    "permissionsBoundaryPoliciesJsons": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of [permissions boundary policy documents](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html) to include in the simulation.\n"
                    },
                    "policySourceArn": {
                        "type": "string",
                        "description": "The [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the IAM user, group, or role whose policies will be included in the simulation.\n\nYou must closely match the form of the real service request you are simulating in order to achieve a realistic result. You can use the following additional arguments to specify other characteristics of the simulated requests:\n"
                    },
                    "resourceArns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of ARNs of resources to include in the simulation.\n\nThis argument is important for actions that have either required or optional resource types listed in [Actions, resources, and condition keys for AWS services](https://docs.aws.amazon.com/service-authorization/latest/reference/reference_policies_actions-resources-contextkeys.html), and you must provide ARNs that identify AWS objects of the appropriate types for the chosen actions.\n\nThe policy simulator only automatically loads policies associated with the `policy_source_arn`, so if your given resources have their own resource-level policy then you'll also need to provide that explicitly using the `resource_policy_json` argument to achieve a realistic simulation.\n"
                    },
                    "resourceHandlingOption": {
                        "type": "string",
                        "description": "Specifies a special simulation type to run. Some EC2 actions require special simulation behaviors and a particular set of resource ARNs to achieve a realistic result.\n\nFor more details, see the `ResourceHandlingOption` request parameter for [the underlying `iam:SimulatePrincipalPolicy` action](https://docs.aws.amazon.com/IAM/latest/APIReference/API_SimulatePrincipalPolicy.html).\n"
                    },
                    "resourceOwnerAccountId": {
                        "type": "string",
                        "description": "An AWS account ID to use for any resource ARN in `resource_arns` that doesn't include its own AWS account ID. If unspecified, the simulator will use the account ID from the `caller_arn` argument as a placeholder.\n"
                    },
                    "resourcePolicyJson": {
                        "type": "string",
                        "description": "An IAM policy document representing the resource-level policy of all of the resources specified in `resource_arns`.\n\nThe policy simulator cannot automatically load policies that are associated with individual resources, as described in the documentation for `resource_arns` above.\n"
                    }
                },
                "type": "object",
                "required": [
                    "actionNames",
                    "policySourceArn"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrincipalPolicySimulation.\n",
                "properties": {
                    "actionNames": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "additionalPoliciesJsons": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "allAllowed": {
                        "description": "`true` if all of the simulation results have decision \"allowed\", or `false` otherwise.\n",
                        "type": "boolean"
                    },
                    "callerArn": {
                        "type": "string"
                    },
                    "contexts": {
                        "items": {
                            "$ref": "#/types/aws:iam/getPrincipalPolicySimulationContext:getPrincipalPolicySimulationContext"
                        },
                        "type": "array"
                    },
                    "id": {
                        "type": "string"
                    },
                    "permissionsBoundaryPoliciesJsons": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "policySourceArn": {
                        "type": "string"
                    },
                    "resourceArns": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "resourceHandlingOption": {
                        "type": "string"
                    },
                    "resourceOwnerAccountId": {
                        "type": "string"
                    },
                    "resourcePolicyJson": {
                        "type": "string"
                    },
                    "results": {
                        "description": "A set of result objects, one for each of the simulated requests, with the following nested attributes:\n",
                        "items": {
                            "$ref": "#/types/aws:iam/getPrincipalPolicySimulationResult:getPrincipalPolicySimulationResult"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "actionNames",
                    "allAllowed",
                    "id",
                    "policySourceArn",
                    "results"
                ],
                "type": "object"
            }
        }