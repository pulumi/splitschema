{
            "properties": {
                "actionName": {
                    "type": "string",
                    "description": "The name of the single IAM action used for this particular request.\n"
                },
                "allowed": {
                    "type": "boolean",
                    "description": "`true` if `decision` is \"allowed\", and `false` otherwise.\n"
                },
                "decision": {
                    "type": "string",
                    "description": "The raw decision determined from all of the policies in scope; either \"allowed\", \"explicitDeny\", or \"implicitDeny\".\n"
                },
                "decisionDetails": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of arbitrary metadata entries returned by the policy simulator for this request.\n"
                },
                "matchedStatements": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:iam/getPrincipalPolicySimulationResultMatchedStatement:getPrincipalPolicySimulationResultMatchedStatement"
                    },
                    "description": "A nested set of objects describing which policies contained statements that were relevant to this simulation request. Each object has attributes `source_policy_id` and `source_policy_type` to identify one of the policies.\n"
                },
                "missingContextKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of context keys (or condition keys) that were needed by some of the policies contributing to this result but not specified using a `context` block in the configuration. Missing or incorrect context keys will typically cause a simulated request to be disallowed.\n"
                },
                "resourceArn": {
                    "type": "string",
                    "description": "ARN of the resource that was used for this particular request. When you specify multiple actions and multiple resource ARNs, that causes a separate policy request for each combination of unique action and resource.\n"
                }
            },
            "type": "object",
            "required": [
                "actionName",
                "allowed",
                "decision",
                "decisionDetails",
                "matchedStatements",
                "missingContextKeys",
                "resourceArn"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }