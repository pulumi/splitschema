{
            "properties": {
                "allocatedStorage": {
                    "type": "integer",
                    "description": "The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.\n"
                },
                "allowMajorVersionUpgrade": {
                    "type": "boolean",
                    "description": "Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.\n"
                },
                "applyImmediately": {
                    "type": "boolean",
                    "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)\n"
                },
                "arn": {
                    "type": "string",
                    "description": "Amazon Resource Name (ARN) of cluster\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.\nRDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next pulumi up.\nWe recommend specifying 3 AZs or using the `lifecycle` configuration block `ignore_changes` argument if necessary.\nA maximum of 3 AZs can be configured.\n"
                },
                "backtrackWindow": {
                    "type": "integer",
                    "description": "Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)\n"
                },
                "backupRetentionPeriod": {
                    "type": "integer",
                    "description": "Days to retain backups for. Default `1`\n"
                },
                "clusterIdentifier": {
                    "type": "string",
                    "description": "The cluster identifier. If omitted, this provider will assign a random, unique identifier.\n"
                },
                "clusterIdentifierPrefix": {
                    "type": "string",
                    "description": "Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.\n"
                },
                "clusterMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of RDS Instances that are a part of this cluster\n"
                },
                "clusterResourceId": {
                    "type": "string",
                    "description": "RDS Cluster Resource ID\n"
                },
                "copyTagsToSnapshot": {
                    "type": "boolean",
                    "description": "Copy all Cluster `tags` to snapshots. Default is `false`.\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)\n"
                },
                "dbClusterInstanceClass": {
                    "type": "string",
                    "description": "The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example `db.m6g.xlarge`. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.\n"
                },
                "dbClusterParameterGroupName": {
                    "type": "string",
                    "description": "A cluster parameter group to associate with the cluster.\n"
                },
                "dbInstanceParameterGroupName": {
                    "type": "string",
                    "description": "Instance parameter group to associate with all instances of the DB cluster. The `db_instance_parameter_group_name` parameter is only valid in combination with the `allow_major_version_upgrade` parameter.\n"
                },
                "dbSubnetGroupName": {
                    "type": "string",
                    "description": "DB subnet group to associate with this DB cluster.\n**NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.\n"
                },
                "dbSystemId": {
                    "type": "string",
                    "description": "For use with RDS Custom.\n"
                },
                "deleteAutomatedBackups": {
                    "type": "boolean",
                    "description": "Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is `true`.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "If the DB cluster should have deletion protection enabled.\nThe database can't be deleted when this value is set to `true`.\nThe default is `false`.\n"
                },
                "enableGlobalWriteForwarding": {
                    "type": "boolean",
                    "description": "Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `aws.rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.\n"
                },
                "enableHttpEndpoint": {
                    "type": "boolean",
                    "description": "Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.\n"
                },
                "enabledCloudwatchLogsExports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "DNS address of the RDS instance\n"
                },
                "engine": {
                    "type": "string",
                    "description": "Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).\n"
                },
                "engineMode": {
                    "type": "string",
                    "description": "Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.\n"
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engine_version_actual`, , see Attribute Reference below.\n"
                },
                "engineVersionActual": {
                    "type": "string",
                    "description": "Running version of the database.\n"
                },
                "finalSnapshotIdentifier": {
                    "type": "string",
                    "description": "Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.\n"
                },
                "globalClusterIdentifier": {
                    "type": "string",
                    "description": "Global cluster identifier specified on `aws.rds.GlobalCluster`.\n"
                },
                "hostedZoneId": {
                    "type": "string",
                    "description": "Route53 Hosted Zone ID of the endpoint\n"
                },
                "iamDatabaseAuthenticationEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.\n"
                },
                "iamRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ARNs for the IAM roles to associate to the RDS Cluster.\n"
                },
                "iops": {
                    "type": "integer",
                    "description": "Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.\n"
                },
                "manageMasterUserPassword": {
                    "type": "boolean",
                    "description": "Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `master_password` is provided.\n"
                },
                "masterPassword": {
                    "type": "string",
                    "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manage_master_user_password` is set to `true`.\n",
                    "secret": true
                },
                "masterUserSecretKmsKeyId": {
                    "type": "string",
                    "description": "Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.\n"
                },
                "masterUserSecrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/aws:rds/ClusterMasterUserSecret:ClusterMasterUserSecret"
                    },
                    "description": "Block that specifies the master user secret. Only available when `manage_master_user_password` is set to true. Documented below.\n"
                },
                "masterUsername": {
                    "type": "string",
                    "description": "Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.\n"
                },
                "networkType": {
                    "type": "string",
                    "description": "Network type of the cluster. Valid values: `IPV4`, `DUAL`.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port on which the DB accepts connections\n"
                },
                "preferredBackupWindow": {
                    "type": "string",
                    "description": "Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00\n"
                },
                "preferredMaintenanceWindow": {
                    "type": "string",
                    "description": "Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30\n"
                },
                "readerEndpoint": {
                    "type": "string",
                    "description": "Read-only endpoint for the Aurora cluster, automatically\nload-balanced across replicas\n"
                },
                "replicationSourceIdentifier": {
                    "type": "string",
                    "description": "ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignore_changes` argument to prevent this provider from showing differences for this argument instead of configuring this value.\n"
                },
                "restoreToPointInTime": {
                    "$ref": "#/types/aws:rds/ClusterRestoreToPointInTime:ClusterRestoreToPointInTime",
                    "description": "Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.\n"
                },
                "s3Import": {
                    "$ref": "#/types/aws:rds/ClusterS3Import:ClusterS3Import"
                },
                "scalingConfiguration": {
                    "$ref": "#/types/aws:rds/ClusterScalingConfiguration:ClusterScalingConfiguration",
                    "description": "Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.\n"
                },
                "serverlessv2ScalingConfiguration": {
                    "$ref": "#/types/aws:rds/ClusterServerlessv2ScalingConfiguration:ClusterServerlessv2ScalingConfiguration",
                    "description": "Nested attribute with scaling properties for ServerlessV2. Only valid when `engine_mode` is set to `provisioned`. More details below.\n"
                },
                "skipFinalSnapshot": {
                    "type": "boolean",
                    "description": "Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.\n"
                },
                "snapshotIdentifier": {
                    "type": "string",
                    "description": "Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `global_cluster_identifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.\n"
                },
                "sourceRegion": {
                    "type": "string",
                    "description": "The source region for an encrypted replica DB cluster.\n"
                },
                "storageEncrypted": {
                    "type": "boolean",
                    "description": "Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engine_mode` and `true` for `serverless` `engine_mode`. When restoring an unencrypted `snapshot_identifier`, the `kms_key_id` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.\n"
                },
                "storageType": {
                    "type": "string",
                    "description": "(Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storage_type` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `\"\"`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `\"\"` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of VPC security groups to associate with the Cluster\n"
                }
            },
            "required": [
                "allocatedStorage",
                "applyImmediately",
                "arn",
                "availabilityZones",
                "backupRetentionPeriod",
                "clusterIdentifier",
                "clusterIdentifierPrefix",
                "clusterMembers",
                "clusterResourceId",
                "databaseName",
                "dbClusterParameterGroupName",
                "dbSubnetGroupName",
                "dbSystemId",
                "endpoint",
                "engine",
                "engineVersion",
                "engineVersionActual",
                "hostedZoneId",
                "iamRoles",
                "kmsKeyId",
                "masterUserSecrets",
                "masterUserSecretKmsKeyId",
                "masterUsername",
                "networkType",
                "port",
                "preferredBackupWindow",
                "preferredMaintenanceWindow",
                "readerEndpoint",
                "storageEncrypted",
                "storageType",
                "tagsAll",
                "vpcSecurityGroupIds"
            ],
            "inputProperties": {
                "allocatedStorage": {
                    "type": "integer",
                    "description": "The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.\n"
                },
                "allowMajorVersionUpgrade": {
                    "type": "boolean",
                    "description": "Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.\n"
                },
                "applyImmediately": {
                    "type": "boolean",
                    "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)\n"
                },
                "availabilityZones": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.\nRDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next pulumi up.\nWe recommend specifying 3 AZs or using the `lifecycle` configuration block `ignore_changes` argument if necessary.\nA maximum of 3 AZs can be configured.\n",
                    "willReplaceOnChanges": true
                },
                "backtrackWindow": {
                    "type": "integer",
                    "description": "Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)\n"
                },
                "backupRetentionPeriod": {
                    "type": "integer",
                    "description": "Days to retain backups for. Default `1`\n"
                },
                "clusterIdentifier": {
                    "type": "string",
                    "description": "The cluster identifier. If omitted, this provider will assign a random, unique identifier.\n",
                    "willReplaceOnChanges": true
                },
                "clusterIdentifierPrefix": {
                    "type": "string",
                    "description": "Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.\n",
                    "willReplaceOnChanges": true
                },
                "clusterMembers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of RDS Instances that are a part of this cluster\n"
                },
                "copyTagsToSnapshot": {
                    "type": "boolean",
                    "description": "Copy all Cluster `tags` to snapshots. Default is `false`.\n"
                },
                "databaseName": {
                    "type": "string",
                    "description": "Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)\n",
                    "willReplaceOnChanges": true
                },
                "dbClusterInstanceClass": {
                    "type": "string",
                    "description": "The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example `db.m6g.xlarge`. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.\n"
                },
                "dbClusterParameterGroupName": {
                    "type": "string",
                    "description": "A cluster parameter group to associate with the cluster.\n"
                },
                "dbInstanceParameterGroupName": {
                    "type": "string",
                    "description": "Instance parameter group to associate with all instances of the DB cluster. The `db_instance_parameter_group_name` parameter is only valid in combination with the `allow_major_version_upgrade` parameter.\n"
                },
                "dbSubnetGroupName": {
                    "type": "string",
                    "description": "DB subnet group to associate with this DB cluster.\n**NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.\n",
                    "willReplaceOnChanges": true
                },
                "dbSystemId": {
                    "type": "string",
                    "description": "For use with RDS Custom.\n",
                    "willReplaceOnChanges": true
                },
                "deleteAutomatedBackups": {
                    "type": "boolean",
                    "description": "Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is `true`.\n"
                },
                "deletionProtection": {
                    "type": "boolean",
                    "description": "If the DB cluster should have deletion protection enabled.\nThe database can't be deleted when this value is set to `true`.\nThe default is `false`.\n"
                },
                "enableGlobalWriteForwarding": {
                    "type": "boolean",
                    "description": "Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `aws.rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.\n"
                },
                "enableHttpEndpoint": {
                    "type": "boolean",
                    "description": "Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.\n"
                },
                "enabledCloudwatchLogsExports": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).\n"
                },
                "engine": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/aws:rds/EngineType:EngineType"
                        }
                    ],
                    "description": "Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).\n",
                    "willReplaceOnChanges": true
                },
                "engineMode": {
                    "type": "string",
                    "oneOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "string",
                            "$ref": "#/types/aws:rds/EngineMode:EngineMode"
                        }
                    ],
                    "description": "Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.\n",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engine_version_actual`, , see Attribute Reference below.\n"
                },
                "finalSnapshotIdentifier": {
                    "type": "string",
                    "description": "Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.\n"
                },
                "globalClusterIdentifier": {
                    "type": "string",
                    "description": "Global cluster identifier specified on `aws.rds.GlobalCluster`.\n"
                },
                "iamDatabaseAuthenticationEnabled": {
                    "type": "boolean",
                    "description": "Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.\n"
                },
                "iamRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of ARNs for the IAM roles to associate to the RDS Cluster.\n"
                },
                "iops": {
                    "type": "integer",
                    "description": "Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.\n"
                },
                "kmsKeyId": {
                    "type": "string",
                    "description": "ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.\n",
                    "willReplaceOnChanges": true
                },
                "manageMasterUserPassword": {
                    "type": "boolean",
                    "description": "Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `master_password` is provided.\n"
                },
                "masterPassword": {
                    "type": "string",
                    "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manage_master_user_password` is set to `true`.\n",
                    "secret": true
                },
                "masterUserSecretKmsKeyId": {
                    "type": "string",
                    "description": "Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.\n"
                },
                "masterUsername": {
                    "type": "string",
                    "description": "Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.\n",
                    "willReplaceOnChanges": true
                },
                "networkType": {
                    "type": "string",
                    "description": "Network type of the cluster. Valid values: `IPV4`, `DUAL`.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Port on which the DB accepts connections\n"
                },
                "preferredBackupWindow": {
                    "type": "string",
                    "description": "Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00\n"
                },
                "preferredMaintenanceWindow": {
                    "type": "string",
                    "description": "Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30\n"
                },
                "replicationSourceIdentifier": {
                    "type": "string",
                    "description": "ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignore_changes` argument to prevent this provider from showing differences for this argument instead of configuring this value.\n"
                },
                "restoreToPointInTime": {
                    "$ref": "#/types/aws:rds/ClusterRestoreToPointInTime:ClusterRestoreToPointInTime",
                    "description": "Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.\n",
                    "willReplaceOnChanges": true
                },
                "s3Import": {
                    "$ref": "#/types/aws:rds/ClusterS3Import:ClusterS3Import"
                },
                "scalingConfiguration": {
                    "$ref": "#/types/aws:rds/ClusterScalingConfiguration:ClusterScalingConfiguration",
                    "description": "Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.\n"
                },
                "serverlessv2ScalingConfiguration": {
                    "$ref": "#/types/aws:rds/ClusterServerlessv2ScalingConfiguration:ClusterServerlessv2ScalingConfiguration",
                    "description": "Nested attribute with scaling properties for ServerlessV2. Only valid when `engine_mode` is set to `provisioned`. More details below.\n"
                },
                "skipFinalSnapshot": {
                    "type": "boolean",
                    "description": "Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.\n"
                },
                "snapshotIdentifier": {
                    "type": "string",
                    "description": "Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `global_cluster_identifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.\n",
                    "willReplaceOnChanges": true
                },
                "sourceRegion": {
                    "type": "string",
                    "description": "The source region for an encrypted replica DB cluster.\n",
                    "willReplaceOnChanges": true
                },
                "storageEncrypted": {
                    "type": "boolean",
                    "description": "Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engine_mode` and `true` for `serverless` `engine_mode`. When restoring an unencrypted `snapshot_identifier`, the `kms_key_id` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.\n",
                    "willReplaceOnChanges": true
                },
                "storageType": {
                    "type": "string",
                    "description": "(Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storage_type` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `\"\"`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `\"\"` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "vpcSecurityGroupIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of VPC security groups to associate with the Cluster\n"
                }
            },
            "requiredInputs": [
                "engine"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Cluster resources.\n",
                "properties": {
                    "allocatedStorage": {
                        "type": "integer",
                        "description": "The amount of storage in gibibytes (GiB) to allocate to each DB instance in the Multi-AZ DB cluster.\n"
                    },
                    "allowMajorVersionUpgrade": {
                        "type": "boolean",
                        "description": "Enable to allow major engine version upgrades when changing engine versions. Defaults to `false`.\n"
                    },
                    "applyImmediately": {
                        "type": "boolean",
                        "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`. See [Amazon RDS Documentation for more information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)\n"
                    },
                    "arn": {
                        "type": "string",
                        "description": "Amazon Resource Name (ARN) of cluster\n"
                    },
                    "availabilityZones": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of EC2 Availability Zones for the DB cluster storage where DB cluster instances can be created.\nRDS automatically assigns 3 AZs if less than 3 AZs are configured, which will show as a difference requiring resource recreation next pulumi up.\nWe recommend specifying 3 AZs or using the `lifecycle` configuration block `ignore_changes` argument if necessary.\nA maximum of 3 AZs can be configured.\n",
                        "willReplaceOnChanges": true
                    },
                    "backtrackWindow": {
                        "type": "integer",
                        "description": "Target backtrack window, in seconds. Only available for `aurora` and `aurora-mysql` engines currently. To disable backtracking, set this value to `0`. Defaults to `0`. Must be between `0` and `259200` (72 hours)\n"
                    },
                    "backupRetentionPeriod": {
                        "type": "integer",
                        "description": "Days to retain backups for. Default `1`\n"
                    },
                    "clusterIdentifier": {
                        "type": "string",
                        "description": "The cluster identifier. If omitted, this provider will assign a random, unique identifier.\n",
                        "willReplaceOnChanges": true
                    },
                    "clusterIdentifierPrefix": {
                        "type": "string",
                        "description": "Creates a unique cluster identifier beginning with the specified prefix. Conflicts with `cluster_identifier`.\n",
                        "willReplaceOnChanges": true
                    },
                    "clusterMembers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of RDS Instances that are a part of this cluster\n"
                    },
                    "clusterResourceId": {
                        "type": "string",
                        "description": "RDS Cluster Resource ID\n"
                    },
                    "copyTagsToSnapshot": {
                        "type": "boolean",
                        "description": "Copy all Cluster `tags` to snapshots. Default is `false`.\n"
                    },
                    "databaseName": {
                        "type": "string",
                        "description": "Name for an automatically created database on cluster creation. There are different naming restrictions per database engine: [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints)\n",
                        "willReplaceOnChanges": true
                    },
                    "dbClusterInstanceClass": {
                        "type": "string",
                        "description": "The compute and memory capacity of each DB instance in the Multi-AZ DB cluster, for example `db.m6g.xlarge`. Not all DB instance classes are available in all AWS Regions, or for all database engines. For the full list of DB instance classes and availability for your engine, see [DB instance class](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html) in the Amazon RDS User Guide.\n"
                    },
                    "dbClusterParameterGroupName": {
                        "type": "string",
                        "description": "A cluster parameter group to associate with the cluster.\n"
                    },
                    "dbInstanceParameterGroupName": {
                        "type": "string",
                        "description": "Instance parameter group to associate with all instances of the DB cluster. The `db_instance_parameter_group_name` parameter is only valid in combination with the `allow_major_version_upgrade` parameter.\n"
                    },
                    "dbSubnetGroupName": {
                        "type": "string",
                        "description": "DB subnet group to associate with this DB cluster.\n**NOTE:** This must match the `db_subnet_group_name` specified on every `aws.rds.ClusterInstance` in the cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "dbSystemId": {
                        "type": "string",
                        "description": "For use with RDS Custom.\n",
                        "willReplaceOnChanges": true
                    },
                    "deleteAutomatedBackups": {
                        "type": "boolean",
                        "description": "Specifies whether to remove automated backups immediately after the DB cluster is deleted. Default is `true`.\n"
                    },
                    "deletionProtection": {
                        "type": "boolean",
                        "description": "If the DB cluster should have deletion protection enabled.\nThe database can't be deleted when this value is set to `true`.\nThe default is `false`.\n"
                    },
                    "enableGlobalWriteForwarding": {
                        "type": "boolean",
                        "description": "Whether cluster should forward writes to an associated global cluster. Applied to secondary clusters to enable them to forward writes to an `aws.rds.GlobalCluster`'s primary cluster. See the [Aurora Userguide documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-write-forwarding.html) for more information.\n"
                    },
                    "enableHttpEndpoint": {
                        "type": "boolean",
                        "description": "Enable HTTP endpoint (data API). Only valid when `engine_mode` is set to `serverless`.\n"
                    },
                    "enabledCloudwatchLogsExports": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Set of log types to export to cloudwatch. If omitted, no logs will be exported. The following log types are supported: `audit`, `error`, `general`, `slowquery`, `postgresql` (PostgreSQL).\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "DNS address of the RDS instance\n"
                    },
                    "engine": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/aws:rds/EngineType:EngineType"
                            }
                        ],
                        "description": "Name of the database engine to be used for this DB cluster. Valid Values: `aurora-mysql`, `aurora-postgresql`, `mysql`, `postgres`. (Note that `mysql` and `postgres` are Multi-AZ RDS clusters).\n",
                        "willReplaceOnChanges": true
                    },
                    "engineMode": {
                        "type": "string",
                        "oneOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "string",
                                "$ref": "#/types/aws:rds/EngineMode:EngineMode"
                            }
                        ],
                        "description": "Database engine mode. Valid values: `global` (only valid for Aurora MySQL 1.21 and earlier), `parallelquery`, `provisioned`, `serverless`. Defaults to: `provisioned`. See the [RDS User Guide](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/aurora-serverless.html) for limitations when using `serverless`.\n",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "description": "Database engine version. Updating this argument results in an outage. See the [Aurora MySQL](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Updates.html) and [Aurora Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraPostgreSQL.Updates.html) documentation for your configured engine to determine this value, or by running `aws rds describe-db-engine-versions`. For example with Aurora MySQL 2, a potential value for this argument is `5.7.mysql_aurora.2.03.2`. The value can contain a partial version where supported by the API. The actual engine version used is returned in the attribute `engine_version_actual`, , see Attribute Reference below.\n"
                    },
                    "engineVersionActual": {
                        "type": "string",
                        "description": "Running version of the database.\n"
                    },
                    "finalSnapshotIdentifier": {
                        "type": "string",
                        "description": "Name of your final DB snapshot when this DB cluster is deleted. If omitted, no final snapshot will be made.\n"
                    },
                    "globalClusterIdentifier": {
                        "type": "string",
                        "description": "Global cluster identifier specified on `aws.rds.GlobalCluster`.\n"
                    },
                    "hostedZoneId": {
                        "type": "string",
                        "description": "Route53 Hosted Zone ID of the endpoint\n"
                    },
                    "iamDatabaseAuthenticationEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether or not mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled. Please see [AWS Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) for availability and limitations.\n"
                    },
                    "iamRoles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of ARNs for the IAM roles to associate to the RDS Cluster.\n"
                    },
                    "iops": {
                        "type": "integer",
                        "description": "Amount of Provisioned IOPS (input/output operations per second) to be initially allocated for each DB instance in the Multi-AZ DB cluster. For information about valid Iops values, see [Amazon RDS Provisioned IOPS storage to improve performance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Storage.html#USER_PIOPS) in the Amazon RDS User Guide. (This setting is required to create a Multi-AZ DB cluster). Must be a multiple between .5 and 50 of the storage amount for the DB cluster.\n"
                    },
                    "kmsKeyId": {
                        "type": "string",
                        "description": "ARN for the KMS encryption key. When specifying `kms_key_id`, `storage_encrypted` needs to be set to true.\n",
                        "willReplaceOnChanges": true
                    },
                    "manageMasterUserPassword": {
                        "type": "boolean",
                        "description": "Set to true to allow RDS to manage the master user password in Secrets Manager. Cannot be set if `master_password` is provided.\n"
                    },
                    "masterPassword": {
                        "type": "string",
                        "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). Cannot be set if `manage_master_user_password` is set to `true`.\n",
                        "secret": true
                    },
                    "masterUserSecretKmsKeyId": {
                        "type": "string",
                        "description": "Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the KMS key. To use a KMS key in a different Amazon Web Services account, specify the key ARN or alias ARN. If not specified, the default KMS key for your Amazon Web Services account is used.\n"
                    },
                    "masterUserSecrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/aws:rds/ClusterMasterUserSecret:ClusterMasterUserSecret"
                        },
                        "description": "Block that specifies the master user secret. Only available when `manage_master_user_password` is set to true. Documented below.\n"
                    },
                    "masterUsername": {
                        "type": "string",
                        "description": "Username for the master DB user. Please refer to the [RDS Naming Constraints](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.Constraints). This argument does not support in-place updates and cannot be changed during a restore from snapshot.\n",
                        "willReplaceOnChanges": true
                    },
                    "networkType": {
                        "type": "string",
                        "description": "Network type of the cluster. Valid values: `IPV4`, `DUAL`.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Port on which the DB accepts connections\n"
                    },
                    "preferredBackupWindow": {
                        "type": "string",
                        "description": "Daily time range during which automated backups are created if automated backups are enabled using the BackupRetentionPeriod parameter.Time in UTC. Default: A 30-minute window selected at random from an 8-hour block of time per regionE.g., 04:00-09:00\n"
                    },
                    "preferredMaintenanceWindow": {
                        "type": "string",
                        "description": "Weekly time range during which system maintenance can occur, in (UTC) e.g., wed:04:00-wed:04:30\n"
                    },
                    "readerEndpoint": {
                        "type": "string",
                        "description": "Read-only endpoint for the Aurora cluster, automatically\nload-balanced across replicas\n"
                    },
                    "replicationSourceIdentifier": {
                        "type": "string",
                        "description": "ARN of a source DB cluster or DB instance if this DB cluster is to be created as a Read Replica. If DB Cluster is part of a Global Cluster, use the `lifecycle` configuration block `ignore_changes` argument to prevent this provider from showing differences for this argument instead of configuring this value.\n"
                    },
                    "restoreToPointInTime": {
                        "$ref": "#/types/aws:rds/ClusterRestoreToPointInTime:ClusterRestoreToPointInTime",
                        "description": "Nested attribute for [point in time restore](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PIT.html). More details below.\n",
                        "willReplaceOnChanges": true
                    },
                    "s3Import": {
                        "$ref": "#/types/aws:rds/ClusterS3Import:ClusterS3Import"
                    },
                    "scalingConfiguration": {
                        "$ref": "#/types/aws:rds/ClusterScalingConfiguration:ClusterScalingConfiguration",
                        "description": "Nested attribute with scaling properties. Only valid when `engine_mode` is set to `serverless`. More details below.\n"
                    },
                    "serverlessv2ScalingConfiguration": {
                        "$ref": "#/types/aws:rds/ClusterServerlessv2ScalingConfiguration:ClusterServerlessv2ScalingConfiguration",
                        "description": "Nested attribute with scaling properties for ServerlessV2. Only valid when `engine_mode` is set to `provisioned`. More details below.\n"
                    },
                    "skipFinalSnapshot": {
                        "type": "boolean",
                        "description": "Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created. If false is specified, a DB snapshot is created before the DB cluster is deleted, using the value from `final_snapshot_identifier`. Default is `false`.\n"
                    },
                    "snapshotIdentifier": {
                        "type": "string",
                        "description": "Specifies whether or not to create this cluster from a snapshot. You can use either the name or ARN when specifying a DB cluster snapshot, or the ARN when specifying a DB snapshot. Conflicts with `global_cluster_identifier`. Clusters cannot be restored from snapshot **and** joined to an existing global cluster in a single operation. See the [AWS documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-getting-started.html#aurora-global-database.use-snapshot) or the Global Cluster Restored From Snapshot example for instructions on building a global cluster starting with a snapshot.\n",
                        "willReplaceOnChanges": true
                    },
                    "sourceRegion": {
                        "type": "string",
                        "description": "The source region for an encrypted replica DB cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "storageEncrypted": {
                        "type": "boolean",
                        "description": "Specifies whether the DB cluster is encrypted. The default is `false` for `provisioned` `engine_mode` and `true` for `serverless` `engine_mode`. When restoring an unencrypted `snapshot_identifier`, the `kms_key_id` argument must be provided to encrypt the restored cluster. The provider will only perform drift detection if a configuration value is provided.\n",
                        "willReplaceOnChanges": true
                    },
                    "storageType": {
                        "type": "string",
                        "description": "(Forces new for Multi-AZ DB clusters) Specifies the storage type to be associated with the DB cluster. For Aurora DB clusters, `storage_type` modifications can be done in-place. For Multi-AZ DB Clusters, the `iops` argument must also be set. Valid values are: `\"\"`, `aurora-iopt1` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters). Default: `\"\"` (Aurora DB Clusters); `io1` (Multi-AZ DB Clusters).\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags to assign to the DB cluster. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    },
                    "vpcSecurityGroupIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of VPC security groups to associate with the Cluster\n"
                    }
                },
                "type": "object"
            }
        }