{
    "properties": {
        "accessLogs": {
            "$ref": "#/types/aws:elb/LoadBalancerAccessLogs:LoadBalancerAccessLogs",
            "description": "An Access Logs block. Access Logs documented below.\n"
        },
        "arn": {
            "type": "string",
            "description": "The ARN of the ELB\n"
        },
        "availabilityZones": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "The AZ's to serve traffic in.\n"
        },
        "connectionDraining": {
            "type": "boolean",
            "description": "Boolean to enable connection draining. Default: `false`\n"
        },
        "connectionDrainingTimeout": {
            "type": "integer",
            "description": "The time in seconds to allow for connections to drain. Default: `300`\n"
        },
        "crossZoneLoadBalancing": {
            "type": "boolean",
            "description": "Enable cross-zone load balancing. Default: `true`\n"
        },
        "desyncMitigationMode": {
            "type": "string",
            "description": "Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are `monitor`, `defensive` (default), `strictest`.\n"
        },
        "dnsName": {
            "type": "string",
            "description": "The DNS name of the ELB\n"
        },
        "healthCheck": {
            "$ref": "#/types/aws:elb/LoadBalancerHealthCheck:LoadBalancerHealthCheck",
            "description": "A health_check block. Health Check documented below.\n"
        },
        "idleTimeout": {
            "type": "integer",
            "description": "The time in seconds that the connection is allowed to be idle. Default: `60`\n"
        },
        "instances": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of instance ids to place in the ELB pool.\n"
        },
        "internal": {
            "type": "boolean",
            "description": "If true, ELB will be an internal ELB.\n"
        },
        "listeners": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:elb/LoadBalancerListener:LoadBalancerListener"
            },
            "description": "A list of listener blocks. Listeners documented below.\n"
        },
        "name": {
            "type": "string",
            "description": "The name of the ELB. By default generated by this provider.\n"
        },
        "namePrefix": {
            "type": "string",
            "description": "Creates a unique name beginning with the specified\nprefix. Conflicts with `name`.\n"
        },
        "securityGroups": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of security group IDs to assign to the ELB.\nOnly valid if creating an ELB within a VPC\n"
        },
        "sourceSecurityGroup": {
            "type": "string",
            "description": "The name of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Use this for Classic or Default VPC only.\n"
        },
        "sourceSecurityGroupId": {
            "type": "string",
            "description": "The ID of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Only available on ELBs launched in a VPC.\n"
        },
        "subnets": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of subnet IDs to attach to the ELB. When an update to subnets will remove all current subnets, this will force a new resource.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n\nExactly one of `availability_zones` or `subnets` must be specified: this\ndetermines if the ELB exists in a VPC or in EC2-classic.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "zoneId": {
            "type": "string",
            "description": "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)\n"
        }
    },
    "required": [
        "arn",
        "availabilityZones",
        "dnsName",
        "healthCheck",
        "instances",
        "internal",
        "listeners",
        "name",
        "namePrefix",
        "securityGroups",
        "sourceSecurityGroup",
        "sourceSecurityGroupId",
        "subnets",
        "tagsAll",
        "zoneId"
    ],
    "inputProperties": {
        "accessLogs": {
            "$ref": "#/types/aws:elb/LoadBalancerAccessLogs:LoadBalancerAccessLogs",
            "description": "An Access Logs block. Access Logs documented below.\n"
        },
        "availabilityZones": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "The AZ's to serve traffic in.\n"
        },
        "connectionDraining": {
            "type": "boolean",
            "description": "Boolean to enable connection draining. Default: `false`\n"
        },
        "connectionDrainingTimeout": {
            "type": "integer",
            "description": "The time in seconds to allow for connections to drain. Default: `300`\n"
        },
        "crossZoneLoadBalancing": {
            "type": "boolean",
            "description": "Enable cross-zone load balancing. Default: `true`\n"
        },
        "desyncMitigationMode": {
            "type": "string",
            "description": "Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are `monitor`, `defensive` (default), `strictest`.\n"
        },
        "healthCheck": {
            "$ref": "#/types/aws:elb/LoadBalancerHealthCheck:LoadBalancerHealthCheck",
            "description": "A health_check block. Health Check documented below.\n"
        },
        "idleTimeout": {
            "type": "integer",
            "description": "The time in seconds that the connection is allowed to be idle. Default: `60`\n"
        },
        "instances": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of instance ids to place in the ELB pool.\n"
        },
        "internal": {
            "type": "boolean",
            "description": "If true, ELB will be an internal ELB.\n",
            "willReplaceOnChanges": true
        },
        "listeners": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:elb/LoadBalancerListener:LoadBalancerListener"
            },
            "description": "A list of listener blocks. Listeners documented below.\n"
        },
        "name": {
            "type": "string",
            "description": "The name of the ELB. By default generated by this provider.\n",
            "willReplaceOnChanges": true
        },
        "namePrefix": {
            "type": "string",
            "description": "Creates a unique name beginning with the specified\nprefix. Conflicts with `name`.\n",
            "willReplaceOnChanges": true
        },
        "securityGroups": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of security group IDs to assign to the ELB.\nOnly valid if creating an ELB within a VPC\n"
        },
        "sourceSecurityGroup": {
            "type": "string",
            "description": "The name of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Use this for Classic or Default VPC only.\n"
        },
        "subnets": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of subnet IDs to attach to the ELB. When an update to subnets will remove all current subnets, this will force a new resource.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n\nExactly one of `availability_zones` or `subnets` must be specified: this\ndetermines if the ELB exists in a VPC or in EC2-classic.\n"
        }
    },
    "requiredInputs": [
        "listeners"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering LoadBalancer resources.\n",
        "properties": {
            "accessLogs": {
                "$ref": "#/types/aws:elb/LoadBalancerAccessLogs:LoadBalancerAccessLogs",
                "description": "An Access Logs block. Access Logs documented below.\n"
            },
            "arn": {
                "type": "string",
                "description": "The ARN of the ELB\n"
            },
            "availabilityZones": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "The AZ's to serve traffic in.\n"
            },
            "connectionDraining": {
                "type": "boolean",
                "description": "Boolean to enable connection draining. Default: `false`\n"
            },
            "connectionDrainingTimeout": {
                "type": "integer",
                "description": "The time in seconds to allow for connections to drain. Default: `300`\n"
            },
            "crossZoneLoadBalancing": {
                "type": "boolean",
                "description": "Enable cross-zone load balancing. Default: `true`\n"
            },
            "desyncMitigationMode": {
                "type": "string",
                "description": "Determines how the load balancer handles requests that might pose a security risk to an application due to HTTP desync. Valid values are `monitor`, `defensive` (default), `strictest`.\n"
            },
            "dnsName": {
                "type": "string",
                "description": "The DNS name of the ELB\n"
            },
            "healthCheck": {
                "$ref": "#/types/aws:elb/LoadBalancerHealthCheck:LoadBalancerHealthCheck",
                "description": "A health_check block. Health Check documented below.\n"
            },
            "idleTimeout": {
                "type": "integer",
                "description": "The time in seconds that the connection is allowed to be idle. Default: `60`\n"
            },
            "instances": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of instance ids to place in the ELB pool.\n"
            },
            "internal": {
                "type": "boolean",
                "description": "If true, ELB will be an internal ELB.\n",
                "willReplaceOnChanges": true
            },
            "listeners": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:elb/LoadBalancerListener:LoadBalancerListener"
                },
                "description": "A list of listener blocks. Listeners documented below.\n"
            },
            "name": {
                "type": "string",
                "description": "The name of the ELB. By default generated by this provider.\n",
                "willReplaceOnChanges": true
            },
            "namePrefix": {
                "type": "string",
                "description": "Creates a unique name beginning with the specified\nprefix. Conflicts with `name`.\n",
                "willReplaceOnChanges": true
            },
            "securityGroups": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of security group IDs to assign to the ELB.\nOnly valid if creating an ELB within a VPC\n"
            },
            "sourceSecurityGroup": {
                "type": "string",
                "description": "The name of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Use this for Classic or Default VPC only.\n"
            },
            "sourceSecurityGroupId": {
                "type": "string",
                "description": "The ID of the security group that you can use as\npart of your inbound rules for your load balancer's back-end application\ninstances. Only available on ELBs launched in a VPC.\n"
            },
            "subnets": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of subnet IDs to attach to the ELB. When an update to subnets will remove all current subnets, this will force a new resource.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n\nExactly one of `availability_zones` or `subnets` must be specified: this\ndetermines if the ELB exists in a VPC or in EC2-classic.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "zoneId": {
                "type": "string",
                "description": "The canonical hosted zone ID of the ELB (to be used in a Route 53 Alias record)\n"
            }
        },
        "type": "object"
    },
    "aliases": [
        {
            "type": "aws:elasticloadbalancing/loadBalancer:LoadBalancer"
        }
    ]
}