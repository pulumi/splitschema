{
            "properties": {
                "associationArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the association.\n"
                },
                "associationId": {
                    "type": "string",
                    "description": "The ID of the association.\n"
                },
                "clusterName": {
                    "type": "string",
                    "description": "The name of the cluster to create the association in.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The name of the Kubernetes namespace inside the cluster to create the association in. The service account and the pods that use the service account must be in this namespace.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.\n\nThe following arguments are optional:\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                }
            },
            "required": [
                "associationArn",
                "associationId",
                "clusterName",
                "namespace",
                "roleArn",
                "serviceAccount",
                "tagsAll"
            ],
            "inputProperties": {
                "clusterName": {
                    "type": "string",
                    "description": "The name of the cluster to create the association in.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The name of the Kubernetes namespace inside the cluster to create the association in. The service account and the pods that use the service account must be in this namespace.\n"
                },
                "roleArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.\n"
                },
                "serviceAccount": {
                    "type": "string",
                    "description": "The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.\n\nThe following arguments are optional:\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                }
            },
            "requiredInputs": [
                "clusterName",
                "namespace",
                "roleArn",
                "serviceAccount"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PodIdentityAssociation resources.\n",
                "properties": {
                    "associationArn": {
                        "type": "string",
                        "description": "The Amazon Resource Name (ARN) of the association.\n"
                    },
                    "associationId": {
                        "type": "string",
                        "description": "The ID of the association.\n"
                    },
                    "clusterName": {
                        "type": "string",
                        "description": "The name of the cluster to create the association in.\n"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The name of the Kubernetes namespace inside the cluster to create the association in. The service account and the pods that use the service account must be in this namespace.\n"
                    },
                    "roleArn": {
                        "type": "string",
                        "description": "The Amazon Resource Name (ARN) of the IAM role to associate with the service account. The EKS Pod Identity agent manages credentials to assume this role for applications in the containers in the pods that use this service account.\n"
                    },
                    "serviceAccount": {
                        "type": "string",
                        "description": "The name of the Kubernetes service account inside the cluster to associate the IAM credentials with.\n\nThe following arguments are optional:\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Key-value map of resource tags. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    }
                },
                "type": "object"
            }
        }