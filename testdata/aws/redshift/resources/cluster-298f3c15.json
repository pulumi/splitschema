{
    "properties": {
        "allowVersionUpgrade": {
            "type": "boolean",
            "description": "If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is `true`.\n"
        },
        "applyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.\n"
        },
        "aquaConfigurationStatus": {
            "type": "string",
            "description": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.\nNo longer supported by the AWS API.\nAlways returns `auto`.\n",
            "deprecationMessage": "This parameter is no longer supported by the AWS API. It will be removed in the next major version of the provider."
        },
        "arn": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of cluster\n"
        },
        "automatedSnapshotRetentionPeriod": {
            "type": "integer",
            "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.\n"
        },
        "availabilityZone": {
            "type": "string",
            "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if `availability_zone_relocation_enabled` is `true`.\n"
        },
        "availabilityZoneRelocationEnabled": {
            "type": "boolean",
            "description": "If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is `false`. Available for use on clusters from the RA3 instance family.\n"
        },
        "clusterIdentifier": {
            "type": "string",
            "description": "The Cluster Identifier. Must be a lower case string.\n"
        },
        "clusterNamespaceArn": {
            "type": "string",
            "description": "The namespace Amazon Resource Name (ARN) of the cluster\n"
        },
        "clusterNodes": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:redshift/ClusterClusterNode:ClusterClusterNode"
            },
            "description": "The nodes in the cluster. Cluster node blocks are documented below\n"
        },
        "clusterParameterGroupName": {
            "type": "string",
            "description": "The name of the parameter group to be associated with this cluster.\n"
        },
        "clusterPublicKey": {
            "type": "string",
            "description": "The public key for the cluster\n"
        },
        "clusterRevisionNumber": {
            "type": "string",
            "description": "The specific revision number of the database in the cluster\n"
        },
        "clusterSubnetGroupName": {
            "type": "string",
            "description": "The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).\n"
        },
        "clusterType": {
            "type": "string",
            "description": "The cluster type to use. Either `single-node` or `multi-node`.\n"
        },
        "clusterVersion": {
            "type": "string",
            "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.\nThe version selected runs on all the nodes in the cluster.\n"
        },
        "databaseName": {
            "type": "string",
            "description": "The name of the first database to be created when the cluster is created.\nIf you do not provide a name, Amazon Redshift will create a default database called `dev`.\n"
        },
        "defaultIamRoleArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.\n"
        },
        "dnsName": {
            "type": "string",
            "description": "The DNS name of the cluster\n"
        },
        "elasticIp": {
            "type": "string",
            "description": "The Elastic IP (EIP) address for the cluster.\n"
        },
        "encrypted": {
            "type": "boolean",
            "description": "If true , the data in the cluster is encrypted at rest.\n"
        },
        "endpoint": {
            "type": "string",
            "description": "The connection endpoint\n"
        },
        "enhancedVpcRouting": {
            "type": "boolean",
            "description": "If true , enhanced VPC routing is enabled.\n"
        },
        "finalSnapshotIdentifier": {
            "type": "string",
            "description": "The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, `skip_final_snapshot` must be false.\n"
        },
        "iamRoles": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.\n"
        },
        "kmsKeyId": {
            "type": "string",
            "description": "The ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true.\n"
        },
        "logging": {
            "$ref": "#/types/aws:redshift/ClusterLogging:ClusterLogging",
            "description": "Logging, documented below.\n"
        },
        "maintenanceTrackName": {
            "type": "string",
            "description": "The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is `current`.\n"
        },
        "manageMasterPassword": {
            "type": "boolean",
            "description": "Whether to use AWS SecretsManager to manage the cluster admin credentials.\nConflicts with `master_password`.\nOne of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.\n"
        },
        "manualSnapshotRetentionPeriod": {
            "type": "integer",
            "description": "The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between `-1` and `3653`. Default value is `-1`.\n"
        },
        "masterPassword": {
            "type": "string",
            "description": "Password for the master DB user.\nConflicts with `manage_master_password`.\nOne of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.\nNote that this may show up in logs, and it will be stored in the state file.\nPassword must contain at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.\n",
            "secret": true
        },
        "masterPasswordSecretArn": {
            "type": "string",
            "description": "ARN of the cluster admin credentials secret\n"
        },
        "masterPasswordSecretKmsKeyId": {
            "type": "string",
            "description": "ID of the KMS key used to encrypt the cluster admin credentials secret.\n"
        },
        "masterUsername": {
            "type": "string",
            "description": "Username for the master DB user.\n"
        },
        "nodeType": {
            "type": "string",
            "description": "The node type to be provisioned for the cluster.\n"
        },
        "numberOfNodes": {
            "type": "integer",
            "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.\n"
        },
        "ownerAccount": {
            "type": "string",
            "description": "The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.\n"
        },
        "port": {
            "type": "integer",
            "description": "The port number on which the cluster accepts incoming connections. Valid values are between `1115` and `65535`.\nThe cluster is accessible only via the JDBC and ODBC connection strings.\nPart of the connection string requires the port on which the cluster will listen for incoming connections.\nDefault port is `5439`.\n"
        },
        "preferredMaintenanceWindow": {
            "type": "string",
            "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur.\nFormat: ddd:hh24:mi-ddd:hh24:mi\n"
        },
        "publiclyAccessible": {
            "type": "boolean",
            "description": "If true, the cluster can be accessed from a public network. Default is `true`.\n"
        },
        "skipFinalSnapshot": {
            "type": "boolean",
            "description": "Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.\n"
        },
        "snapshotArn": {
            "type": "string",
            "description": "The ARN of the snapshot from which to create the new cluster. Conflicts with `snapshot_identifier`.\n"
        },
        "snapshotClusterIdentifier": {
            "type": "string",
            "description": "The name of the cluster the source snapshot was created from.\n"
        },
        "snapshotCopy": {
            "$ref": "#/types/aws:redshift/ClusterSnapshotCopy:ClusterSnapshotCopy",
            "description": "Configuration of automatic copy of snapshots from one region to another. Documented below.\n"
        },
        "snapshotIdentifier": {
            "type": "string",
            "description": "The name of the snapshot from which to create the new cluster.  Conflicts with `snapshot_arn`.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "vpcSecurityGroupIds": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.\n"
        }
    },
    "required": [
        "aquaConfigurationStatus",
        "arn",
        "availabilityZone",
        "clusterIdentifier",
        "clusterNamespaceArn",
        "clusterNodes",
        "clusterParameterGroupName",
        "clusterPublicKey",
        "clusterRevisionNumber",
        "clusterSubnetGroupName",
        "clusterType",
        "databaseName",
        "defaultIamRoleArn",
        "dnsName",
        "endpoint",
        "enhancedVpcRouting",
        "iamRoles",
        "kmsKeyId",
        "masterPasswordSecretArn",
        "masterPasswordSecretKmsKeyId",
        "nodeType",
        "preferredMaintenanceWindow",
        "tagsAll",
        "vpcSecurityGroupIds"
    ],
    "inputProperties": {
        "allowVersionUpgrade": {
            "type": "boolean",
            "description": "If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is `true`.\n"
        },
        "applyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.\n"
        },
        "aquaConfigurationStatus": {
            "type": "string",
            "description": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.\nNo longer supported by the AWS API.\nAlways returns `auto`.\n",
            "deprecationMessage": "This parameter is no longer supported by the AWS API. It will be removed in the next major version of the provider."
        },
        "automatedSnapshotRetentionPeriod": {
            "type": "integer",
            "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.\n"
        },
        "availabilityZone": {
            "type": "string",
            "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if `availability_zone_relocation_enabled` is `true`.\n"
        },
        "availabilityZoneRelocationEnabled": {
            "type": "boolean",
            "description": "If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is `false`. Available for use on clusters from the RA3 instance family.\n"
        },
        "clusterIdentifier": {
            "type": "string",
            "description": "The Cluster Identifier. Must be a lower case string.\n",
            "willReplaceOnChanges": true
        },
        "clusterParameterGroupName": {
            "type": "string",
            "description": "The name of the parameter group to be associated with this cluster.\n"
        },
        "clusterPublicKey": {
            "type": "string",
            "description": "The public key for the cluster\n"
        },
        "clusterRevisionNumber": {
            "type": "string",
            "description": "The specific revision number of the database in the cluster\n"
        },
        "clusterSubnetGroupName": {
            "type": "string",
            "description": "The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).\n",
            "willReplaceOnChanges": true
        },
        "clusterType": {
            "type": "string",
            "description": "The cluster type to use. Either `single-node` or `multi-node`.\n"
        },
        "clusterVersion": {
            "type": "string",
            "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.\nThe version selected runs on all the nodes in the cluster.\n"
        },
        "databaseName": {
            "type": "string",
            "description": "The name of the first database to be created when the cluster is created.\nIf you do not provide a name, Amazon Redshift will create a default database called `dev`.\n"
        },
        "defaultIamRoleArn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.\n"
        },
        "elasticIp": {
            "type": "string",
            "description": "The Elastic IP (EIP) address for the cluster.\n"
        },
        "encrypted": {
            "type": "boolean",
            "description": "If true , the data in the cluster is encrypted at rest.\n"
        },
        "endpoint": {
            "type": "string",
            "description": "The connection endpoint\n"
        },
        "enhancedVpcRouting": {
            "type": "boolean",
            "description": "If true , enhanced VPC routing is enabled.\n"
        },
        "finalSnapshotIdentifier": {
            "type": "string",
            "description": "The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, `skip_final_snapshot` must be false.\n"
        },
        "iamRoles": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.\n"
        },
        "kmsKeyId": {
            "type": "string",
            "description": "The ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true.\n"
        },
        "logging": {
            "$ref": "#/types/aws:redshift/ClusterLogging:ClusterLogging",
            "description": "Logging, documented below.\n"
        },
        "maintenanceTrackName": {
            "type": "string",
            "description": "The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is `current`.\n"
        },
        "manageMasterPassword": {
            "type": "boolean",
            "description": "Whether to use AWS SecretsManager to manage the cluster admin credentials.\nConflicts with `master_password`.\nOne of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.\n"
        },
        "manualSnapshotRetentionPeriod": {
            "type": "integer",
            "description": "The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between `-1` and `3653`. Default value is `-1`.\n"
        },
        "masterPassword": {
            "type": "string",
            "description": "Password for the master DB user.\nConflicts with `manage_master_password`.\nOne of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.\nNote that this may show up in logs, and it will be stored in the state file.\nPassword must contain at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.\n",
            "secret": true
        },
        "masterPasswordSecretKmsKeyId": {
            "type": "string",
            "description": "ID of the KMS key used to encrypt the cluster admin credentials secret.\n"
        },
        "masterUsername": {
            "type": "string",
            "description": "Username for the master DB user.\n",
            "willReplaceOnChanges": true
        },
        "nodeType": {
            "type": "string",
            "description": "The node type to be provisioned for the cluster.\n"
        },
        "numberOfNodes": {
            "type": "integer",
            "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.\n"
        },
        "ownerAccount": {
            "type": "string",
            "description": "The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.\n"
        },
        "port": {
            "type": "integer",
            "description": "The port number on which the cluster accepts incoming connections. Valid values are between `1115` and `65535`.\nThe cluster is accessible only via the JDBC and ODBC connection strings.\nPart of the connection string requires the port on which the cluster will listen for incoming connections.\nDefault port is `5439`.\n"
        },
        "preferredMaintenanceWindow": {
            "type": "string",
            "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur.\nFormat: ddd:hh24:mi-ddd:hh24:mi\n"
        },
        "publiclyAccessible": {
            "type": "boolean",
            "description": "If true, the cluster can be accessed from a public network. Default is `true`.\n"
        },
        "skipFinalSnapshot": {
            "type": "boolean",
            "description": "Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.\n"
        },
        "snapshotArn": {
            "type": "string",
            "description": "The ARN of the snapshot from which to create the new cluster. Conflicts with `snapshot_identifier`.\n",
            "willReplaceOnChanges": true
        },
        "snapshotClusterIdentifier": {
            "type": "string",
            "description": "The name of the cluster the source snapshot was created from.\n",
            "willReplaceOnChanges": true
        },
        "snapshotCopy": {
            "$ref": "#/types/aws:redshift/ClusterSnapshotCopy:ClusterSnapshotCopy",
            "description": "Configuration of automatic copy of snapshots from one region to another. Documented below.\n"
        },
        "snapshotIdentifier": {
            "type": "string",
            "description": "The name of the snapshot from which to create the new cluster.  Conflicts with `snapshot_arn`.\n",
            "willReplaceOnChanges": true
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "vpcSecurityGroupIds": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.\n"
        }
    },
    "requiredInputs": [
        "clusterIdentifier",
        "nodeType"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Cluster resources.\n",
        "properties": {
            "allowVersionUpgrade": {
                "type": "boolean",
                "description": "If true , major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster. Default is `true`.\n"
            },
            "applyImmediately": {
                "type": "boolean",
                "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window. Default is `false`.\n"
            },
            "aquaConfigurationStatus": {
                "type": "string",
                "description": "The value represents how the cluster is configured to use AQUA (Advanced Query Accelerator) after the cluster is restored.\nNo longer supported by the AWS API.\nAlways returns `auto`.\n",
                "deprecationMessage": "This parameter is no longer supported by the AWS API. It will be removed in the next major version of the provider."
            },
            "arn": {
                "type": "string",
                "description": "Amazon Resource Name (ARN) of cluster\n"
            },
            "automatedSnapshotRetentionPeriod": {
                "type": "integer",
                "description": "The number of days that automated snapshots are retained. If the value is 0, automated snapshots are disabled. Even if automated snapshots are disabled, you can still create manual snapshots when you want with create-cluster-snapshot. Default is 1.\n"
            },
            "availabilityZone": {
                "type": "string",
                "description": "The EC2 Availability Zone (AZ) in which you want Amazon Redshift to provision the cluster. For example, if you have several EC2 instances running in a specific Availability Zone, then you might want the cluster to be provisioned in the same zone in order to decrease network latency. Can only be changed if `availability_zone_relocation_enabled` is `true`.\n"
            },
            "availabilityZoneRelocationEnabled": {
                "type": "boolean",
                "description": "If true, the cluster can be relocated to another availabity zone, either automatically by AWS or when requested. Default is `false`. Available for use on clusters from the RA3 instance family.\n"
            },
            "clusterIdentifier": {
                "type": "string",
                "description": "The Cluster Identifier. Must be a lower case string.\n",
                "willReplaceOnChanges": true
            },
            "clusterNamespaceArn": {
                "type": "string",
                "description": "The namespace Amazon Resource Name (ARN) of the cluster\n"
            },
            "clusterNodes": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:redshift/ClusterClusterNode:ClusterClusterNode"
                },
                "description": "The nodes in the cluster. Cluster node blocks are documented below\n"
            },
            "clusterParameterGroupName": {
                "type": "string",
                "description": "The name of the parameter group to be associated with this cluster.\n"
            },
            "clusterPublicKey": {
                "type": "string",
                "description": "The public key for the cluster\n"
            },
            "clusterRevisionNumber": {
                "type": "string",
                "description": "The specific revision number of the database in the cluster\n"
            },
            "clusterSubnetGroupName": {
                "type": "string",
                "description": "The name of a cluster subnet group to be associated with this cluster. If this parameter is not provided the resulting cluster will be deployed outside virtual private cloud (VPC).\n",
                "willReplaceOnChanges": true
            },
            "clusterType": {
                "type": "string",
                "description": "The cluster type to use. Either `single-node` or `multi-node`.\n"
            },
            "clusterVersion": {
                "type": "string",
                "description": "The version of the Amazon Redshift engine software that you want to deploy on the cluster.\nThe version selected runs on all the nodes in the cluster.\n"
            },
            "databaseName": {
                "type": "string",
                "description": "The name of the first database to be created when the cluster is created.\nIf you do not provide a name, Amazon Redshift will create a default database called `dev`.\n"
            },
            "defaultIamRoleArn": {
                "type": "string",
                "description": "The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was created.\n"
            },
            "dnsName": {
                "type": "string",
                "description": "The DNS name of the cluster\n"
            },
            "elasticIp": {
                "type": "string",
                "description": "The Elastic IP (EIP) address for the cluster.\n"
            },
            "encrypted": {
                "type": "boolean",
                "description": "If true , the data in the cluster is encrypted at rest.\n"
            },
            "endpoint": {
                "type": "string",
                "description": "The connection endpoint\n"
            },
            "enhancedVpcRouting": {
                "type": "boolean",
                "description": "If true , enhanced VPC routing is enabled.\n"
            },
            "finalSnapshotIdentifier": {
                "type": "string",
                "description": "The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, `skip_final_snapshot` must be false.\n"
            },
            "iamRoles": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.\n"
            },
            "kmsKeyId": {
                "type": "string",
                "description": "The ARN for the KMS encryption key. When specifying `kms_key_id`, `encrypted` needs to be set to true.\n"
            },
            "logging": {
                "$ref": "#/types/aws:redshift/ClusterLogging:ClusterLogging",
                "description": "Logging, documented below.\n"
            },
            "maintenanceTrackName": {
                "type": "string",
                "description": "The name of the maintenance track for the restored cluster. When you take a snapshot, the snapshot inherits the MaintenanceTrack value from the cluster. The snapshot might be on a different track than the cluster that was the source for the snapshot. For example, suppose that you take a snapshot of  a cluster that is on the current track and then change the cluster to be on the trailing track. In this case, the snapshot and the source cluster are on different tracks. Default value is `current`.\n"
            },
            "manageMasterPassword": {
                "type": "boolean",
                "description": "Whether to use AWS SecretsManager to manage the cluster admin credentials.\nConflicts with `master_password`.\nOne of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.\n"
            },
            "manualSnapshotRetentionPeriod": {
                "type": "integer",
                "description": "The default number of days to retain a manual snapshot. If the value is -1, the snapshot is retained indefinitely. This setting doesn't change the retention period of existing snapshots. Valid values are between `-1` and `3653`. Default value is `-1`.\n"
            },
            "masterPassword": {
                "type": "string",
                "description": "Password for the master DB user.\nConflicts with `manage_master_password`.\nOne of `master_password` or `manage_master_password` is required unless `snapshot_identifier` is provided.\nNote that this may show up in logs, and it will be stored in the state file.\nPassword must contain at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.\n",
                "secret": true
            },
            "masterPasswordSecretArn": {
                "type": "string",
                "description": "ARN of the cluster admin credentials secret\n"
            },
            "masterPasswordSecretKmsKeyId": {
                "type": "string",
                "description": "ID of the KMS key used to encrypt the cluster admin credentials secret.\n"
            },
            "masterUsername": {
                "type": "string",
                "description": "Username for the master DB user.\n",
                "willReplaceOnChanges": true
            },
            "nodeType": {
                "type": "string",
                "description": "The node type to be provisioned for the cluster.\n"
            },
            "numberOfNodes": {
                "type": "integer",
                "description": "The number of compute nodes in the cluster. This parameter is required when the ClusterType parameter is specified as multi-node. Default is 1.\n"
            },
            "ownerAccount": {
                "type": "string",
                "description": "The AWS customer account used to create or copy the snapshot. Required if you are restoring a snapshot you do not own, optional if you own the snapshot.\n"
            },
            "port": {
                "type": "integer",
                "description": "The port number on which the cluster accepts incoming connections. Valid values are between `1115` and `65535`.\nThe cluster is accessible only via the JDBC and ODBC connection strings.\nPart of the connection string requires the port on which the cluster will listen for incoming connections.\nDefault port is `5439`.\n"
            },
            "preferredMaintenanceWindow": {
                "type": "string",
                "description": "The weekly time range (in UTC) during which automated cluster maintenance can occur.\nFormat: ddd:hh24:mi-ddd:hh24:mi\n"
            },
            "publiclyAccessible": {
                "type": "boolean",
                "description": "If true, the cluster can be accessed from a public network. Default is `true`.\n"
            },
            "skipFinalSnapshot": {
                "type": "boolean",
                "description": "Determines whether a final snapshot of the cluster is created before Amazon Redshift deletes the cluster. If true , a final cluster snapshot is not created. If false , a final cluster snapshot is created before the cluster is deleted. Default is false.\n"
            },
            "snapshotArn": {
                "type": "string",
                "description": "The ARN of the snapshot from which to create the new cluster. Conflicts with `snapshot_identifier`.\n",
                "willReplaceOnChanges": true
            },
            "snapshotClusterIdentifier": {
                "type": "string",
                "description": "The name of the cluster the source snapshot was created from.\n",
                "willReplaceOnChanges": true
            },
            "snapshotCopy": {
                "$ref": "#/types/aws:redshift/ClusterSnapshotCopy:ClusterSnapshotCopy",
                "description": "Configuration of automatic copy of snapshots from one region to another. Documented below.\n"
            },
            "snapshotIdentifier": {
                "type": "string",
                "description": "The name of the snapshot from which to create the new cluster.  Conflicts with `snapshot_arn`.\n",
                "willReplaceOnChanges": true
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "vpcSecurityGroupIds": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.\n"
            }
        },
        "type": "object"
    }
}