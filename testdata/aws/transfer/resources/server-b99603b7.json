{
    "properties": {
        "arn": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of Transfer Server\n"
        },
        "certificate": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`\n"
        },
        "directoryId": {
            "type": "string",
            "description": "The directory service ID of the directory service you want to connect to with an `identity_provider_type` of `AWS_DIRECTORY_SERVICE`.\n"
        },
        "domain": {
            "type": "string",
            "description": "The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.\n"
        },
        "endpoint": {
            "type": "string",
            "description": "The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`)\n"
        },
        "endpointDetails": {
            "$ref": "#/types/aws:transfer/ServerEndpointDetails:ServerEndpointDetails",
            "description": "The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.\n"
        },
        "endpointType": {
            "type": "string",
            "description": "The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.\n"
        },
        "forceDestroy": {
            "type": "boolean",
            "description": "A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identity_provider_type`.\n"
        },
        "function": {
            "type": "string",
            "description": "The ARN for a lambda function to use for the Identity provider.\n"
        },
        "hostKey": {
            "type": "string",
            "description": "RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N \"\" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N \"\" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N \"\" -f my-new-server-key` commands).\n",
            "secret": true
        },
        "hostKeyFingerprint": {
            "type": "string",
            "description": "This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.\n"
        },
        "identityProviderType": {
            "type": "string",
            "description": "The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.\n"
        },
        "invocationRole": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identity_provider_type` of `API_GATEWAY`.\n"
        },
        "loggingRole": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n"
        },
        "postAuthenticationLoginBanner": {
            "type": "string",
            "description": "Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.\n",
            "secret": true
        },
        "preAuthenticationLoginBanner": {
            "type": "string",
            "description": "Specify a string to display when users connect to a server. This string is displayed before the user authenticates.\n",
            "secret": true
        },
        "protocolDetails": {
            "$ref": "#/types/aws:transfer/ServerProtocolDetails:ServerProtocolDetails",
            "description": "The protocol settings that are configured for your server.\n"
        },
        "protocols": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:\n"
        },
        "securityPolicyName": {
            "type": "string",
            "description": "Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-FIPS-2023-05`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.\n"
        },
        "structuredLogDestinations": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "url": {
            "type": "string",
            "description": "URL of the service endpoint used to authenticate users with an `identity_provider_type` of `API_GATEWAY`.\n"
        },
        "workflowDetails": {
            "$ref": "#/types/aws:transfer/ServerWorkflowDetails:ServerWorkflowDetails",
            "description": "Specifies the workflow details. See Workflow Details below.\n"
        }
    },
    "required": [
        "arn",
        "endpoint",
        "hostKeyFingerprint",
        "protocolDetails",
        "protocols",
        "tagsAll"
    ],
    "inputProperties": {
        "certificate": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`\n"
        },
        "directoryId": {
            "type": "string",
            "description": "The directory service ID of the directory service you want to connect to with an `identity_provider_type` of `AWS_DIRECTORY_SERVICE`.\n"
        },
        "domain": {
            "type": "string",
            "description": "The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.\n",
            "willReplaceOnChanges": true
        },
        "endpointDetails": {
            "$ref": "#/types/aws:transfer/ServerEndpointDetails:ServerEndpointDetails",
            "description": "The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.\n"
        },
        "endpointType": {
            "type": "string",
            "description": "The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.\n"
        },
        "forceDestroy": {
            "type": "boolean",
            "description": "A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identity_provider_type`.\n"
        },
        "function": {
            "type": "string",
            "description": "The ARN for a lambda function to use for the Identity provider.\n"
        },
        "hostKey": {
            "type": "string",
            "description": "RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N \"\" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N \"\" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N \"\" -f my-new-server-key` commands).\n",
            "secret": true
        },
        "identityProviderType": {
            "type": "string",
            "description": "The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.\n",
            "willReplaceOnChanges": true
        },
        "invocationRole": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identity_provider_type` of `API_GATEWAY`.\n"
        },
        "loggingRole": {
            "type": "string",
            "description": "Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n"
        },
        "postAuthenticationLoginBanner": {
            "type": "string",
            "description": "Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.\n",
            "secret": true
        },
        "preAuthenticationLoginBanner": {
            "type": "string",
            "description": "Specify a string to display when users connect to a server. This string is displayed before the user authenticates.\n",
            "secret": true
        },
        "protocolDetails": {
            "$ref": "#/types/aws:transfer/ServerProtocolDetails:ServerProtocolDetails",
            "description": "The protocol settings that are configured for your server.\n"
        },
        "protocols": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:\n"
        },
        "securityPolicyName": {
            "type": "string",
            "description": "Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-FIPS-2023-05`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.\n"
        },
        "structuredLogDestinations": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "url": {
            "type": "string",
            "description": "URL of the service endpoint used to authenticate users with an `identity_provider_type` of `API_GATEWAY`.\n"
        },
        "workflowDetails": {
            "$ref": "#/types/aws:transfer/ServerWorkflowDetails:ServerWorkflowDetails",
            "description": "Specifies the workflow details. See Workflow Details below.\n"
        }
    },
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Server resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "Amazon Resource Name (ARN) of Transfer Server\n"
            },
            "certificate": {
                "type": "string",
                "description": "The Amazon Resource Name (ARN) of the AWS Certificate Manager (ACM) certificate. This is required when `protocols` is set to `FTPS`\n"
            },
            "directoryId": {
                "type": "string",
                "description": "The directory service ID of the directory service you want to connect to with an `identity_provider_type` of `AWS_DIRECTORY_SERVICE`.\n"
            },
            "domain": {
                "type": "string",
                "description": "The domain of the storage system that is used for file transfers. Valid values are: `S3` and `EFS`. The default value is `S3`.\n",
                "willReplaceOnChanges": true
            },
            "endpoint": {
                "type": "string",
                "description": "The endpoint of the Transfer Server (e.g., `s-12345678.server.transfer.REGION.amazonaws.com`)\n"
            },
            "endpointDetails": {
                "$ref": "#/types/aws:transfer/ServerEndpointDetails:ServerEndpointDetails",
                "description": "The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.\n"
            },
            "endpointType": {
                "type": "string",
                "description": "The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.\n"
            },
            "forceDestroy": {
                "type": "boolean",
                "description": "A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`. This option only applies to servers configured with a `SERVICE_MANAGED` `identity_provider_type`.\n"
            },
            "function": {
                "type": "string",
                "description": "The ARN for a lambda function to use for the Identity provider.\n"
            },
            "hostKey": {
                "type": "string",
                "description": "RSA, ECDSA, or ED25519 private key (e.g., as generated by the `ssh-keygen -t rsa -b 2048 -N \"\" -m PEM -f my-new-server-key`, `ssh-keygen -t ecdsa -b 256 -N \"\" -m PEM -f my-new-server-key` or `ssh-keygen -t ed25519 -N \"\" -f my-new-server-key` commands).\n",
                "secret": true
            },
            "hostKeyFingerprint": {
                "type": "string",
                "description": "This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.\n"
            },
            "identityProviderType": {
                "type": "string",
                "description": "The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice. Using `AWS_DIRECTORY_SERVICE` will allow for authentication against AWS Managed Active Directory or Microsoft Active Directory in your on-premises environment, or in AWS using AD Connectors. Use the `AWS_LAMBDA` value to directly use a Lambda function as your identity provider. If you choose this value, you must specify the ARN for the lambda function in the `function` argument.\n",
                "willReplaceOnChanges": true
            },
            "invocationRole": {
                "type": "string",
                "description": "Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identity_provider_type` of `API_GATEWAY`.\n"
            },
            "loggingRole": {
                "type": "string",
                "description": "Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP usersâ€™ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.\n"
            },
            "postAuthenticationLoginBanner": {
                "type": "string",
                "description": "Specify a string to display when users connect to a server. This string is displayed after the user authenticates. The SFTP protocol does not support post-authentication display banners.\n",
                "secret": true
            },
            "preAuthenticationLoginBanner": {
                "type": "string",
                "description": "Specify a string to display when users connect to a server. This string is displayed before the user authenticates.\n",
                "secret": true
            },
            "protocolDetails": {
                "$ref": "#/types/aws:transfer/ServerProtocolDetails:ServerProtocolDetails",
                "description": "The protocol settings that are configured for your server.\n"
            },
            "protocols": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "Specifies the file transfer protocol or protocols over which your file transfer protocol client can connect to your server's endpoint. This defaults to `SFTP` . The available protocols are:\n"
            },
            "securityPolicyName": {
                "type": "string",
                "description": "Specifies the name of the security policy that is attached to the server. Possible values are `TransferSecurityPolicy-2018-11`, `TransferSecurityPolicy-2020-06`, `TransferSecurityPolicy-FIPS-2020-06`, `TransferSecurityPolicy-FIPS-2023-05`, `TransferSecurityPolicy-2022-03` and `TransferSecurityPolicy-2023-05`. Default value is: `TransferSecurityPolicy-2018-11`.\n"
            },
            "structuredLogDestinations": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A set of ARNs of destinations that will receive structured logs from the transfer server such as CloudWatch Log Group ARNs. If provided this enables the transfer server to emit structured logs to the specified locations.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "url": {
                "type": "string",
                "description": "URL of the service endpoint used to authenticate users with an `identity_provider_type` of `API_GATEWAY`.\n"
            },
            "workflowDetails": {
                "$ref": "#/types/aws:transfer/ServerWorkflowDetails:ServerWorkflowDetails",
                "description": "Specifies the workflow details. See Workflow Details below.\n"
            }
        },
        "type": "object"
    }
}