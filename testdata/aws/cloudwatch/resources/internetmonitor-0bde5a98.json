{
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "ARN of the Monitor.\n"
                },
                "healthEventsConfig": {
                    "$ref": "#/types/aws:cloudwatch/InternetMonitorHealthEventsConfig:InternetMonitorHealthEventsConfig",
                    "description": "Health event thresholds. A health event threshold percentage, for performance and availability, determines when Internet Monitor creates a health event when there's an internet issue that affects your application end users. See Health Events Config below.\n"
                },
                "internetMeasurementsLogDelivery": {
                    "$ref": "#/types/aws:cloudwatch/InternetMonitorInternetMeasurementsLogDelivery:InternetMonitorInternetMeasurementsLogDelivery",
                    "description": "Publish internet measurements for Internet Monitor to an Amazon S3 bucket in addition to CloudWatch Logs.\n"
                },
                "maxCityNetworksToMonitor": {
                    "type": "integer",
                    "description": "The maximum number of city-networks to monitor for your resources. A city-network is the location (city) where clients access your application resources from and the network or ASN, such as an internet service provider (ISP), that clients access the resources through. This limit helps control billing costs.\n"
                },
                "monitorName": {
                    "type": "string",
                    "description": "The name of the monitor.\n\nThe following arguments are optional:\n"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The resources to include in a monitor, which you provide as a set of Amazon Resource Names (ARNs).\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status for a monitor. The accepted values for Status with the UpdateMonitor API call are the following: `ACTIVE` and `INACTIVE`.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                },
                "trafficPercentageToMonitor": {
                    "type": "integer",
                    "description": "The percentage of the internet-facing traffic for your application that you want to monitor with this monitor.\n"
                }
            },
            "required": [
                "arn",
                "monitorName",
                "tagsAll"
            ],
            "inputProperties": {
                "healthEventsConfig": {
                    "$ref": "#/types/aws:cloudwatch/InternetMonitorHealthEventsConfig:InternetMonitorHealthEventsConfig",
                    "description": "Health event thresholds. A health event threshold percentage, for performance and availability, determines when Internet Monitor creates a health event when there's an internet issue that affects your application end users. See Health Events Config below.\n"
                },
                "internetMeasurementsLogDelivery": {
                    "$ref": "#/types/aws:cloudwatch/InternetMonitorInternetMeasurementsLogDelivery:InternetMonitorInternetMeasurementsLogDelivery",
                    "description": "Publish internet measurements for Internet Monitor to an Amazon S3 bucket in addition to CloudWatch Logs.\n"
                },
                "maxCityNetworksToMonitor": {
                    "type": "integer",
                    "description": "The maximum number of city-networks to monitor for your resources. A city-network is the location (city) where clients access your application resources from and the network or ASN, such as an internet service provider (ISP), that clients access the resources through. This limit helps control billing costs.\n"
                },
                "monitorName": {
                    "type": "string",
                    "description": "The name of the monitor.\n\nThe following arguments are optional:\n",
                    "willReplaceOnChanges": true
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The resources to include in a monitor, which you provide as a set of Amazon Resource Names (ARNs).\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status for a monitor. The accepted values for Status with the UpdateMonitor API call are the following: `ACTIVE` and `INACTIVE`.\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "trafficPercentageToMonitor": {
                    "type": "integer",
                    "description": "The percentage of the internet-facing traffic for your application that you want to monitor with this monitor.\n"
                }
            },
            "requiredInputs": [
                "monitorName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering InternetMonitor resources.\n",
                "properties": {
                    "arn": {
                        "type": "string",
                        "description": "ARN of the Monitor.\n"
                    },
                    "healthEventsConfig": {
                        "$ref": "#/types/aws:cloudwatch/InternetMonitorHealthEventsConfig:InternetMonitorHealthEventsConfig",
                        "description": "Health event thresholds. A health event threshold percentage, for performance and availability, determines when Internet Monitor creates a health event when there's an internet issue that affects your application end users. See Health Events Config below.\n"
                    },
                    "internetMeasurementsLogDelivery": {
                        "$ref": "#/types/aws:cloudwatch/InternetMonitorInternetMeasurementsLogDelivery:InternetMonitorInternetMeasurementsLogDelivery",
                        "description": "Publish internet measurements for Internet Monitor to an Amazon S3 bucket in addition to CloudWatch Logs.\n"
                    },
                    "maxCityNetworksToMonitor": {
                        "type": "integer",
                        "description": "The maximum number of city-networks to monitor for your resources. A city-network is the location (city) where clients access your application resources from and the network or ASN, such as an internet service provider (ISP), that clients access the resources through. This limit helps control billing costs.\n"
                    },
                    "monitorName": {
                        "type": "string",
                        "description": "The name of the monitor.\n\nThe following arguments are optional:\n",
                        "willReplaceOnChanges": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The resources to include in a monitor, which you provide as a set of Amazon Resource Names (ARNs).\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status for a monitor. The accepted values for Status with the UpdateMonitor API call are the following: `ACTIVE` and `INACTIVE`.\n"
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    },
                    "trafficPercentageToMonitor": {
                        "type": "integer",
                        "description": "The percentage of the internet-facing traffic for your application that you want to monitor with this monitor.\n"
                    }
                },
                "type": "object"
            }
        }