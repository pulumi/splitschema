{
    "properties": {
        "apiCachingBehavior": {
            "type": "string",
            "description": "Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.\n"
        },
        "apiId": {
            "type": "string",
            "description": "GraphQL API ID.\n"
        },
        "atRestEncryptionEnabled": {
            "type": "boolean",
            "description": "At-rest encryption flag for cache. You cannot update this setting after creation.\n"
        },
        "transitEncryptionEnabled": {
            "type": "boolean",
            "description": "Transit encryption flag when connecting to cache. You cannot update this setting after creation.\n"
        },
        "ttl": {
            "type": "integer",
            "description": "TTL in seconds for cache entries.\n"
        },
        "type": {
            "type": "string",
            "description": "Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.\n"
        }
    },
    "required": [
        "apiCachingBehavior",
        "apiId",
        "ttl",
        "type"
    ],
    "inputProperties": {
        "apiCachingBehavior": {
            "type": "string",
            "description": "Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.\n"
        },
        "apiId": {
            "type": "string",
            "description": "GraphQL API ID.\n"
        },
        "atRestEncryptionEnabled": {
            "type": "boolean",
            "description": "At-rest encryption flag for cache. You cannot update this setting after creation.\n",
            "willReplaceOnChanges": true
        },
        "transitEncryptionEnabled": {
            "type": "boolean",
            "description": "Transit encryption flag when connecting to cache. You cannot update this setting after creation.\n",
            "willReplaceOnChanges": true
        },
        "ttl": {
            "type": "integer",
            "description": "TTL in seconds for cache entries.\n"
        },
        "type": {
            "type": "string",
            "description": "Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.\n"
        }
    },
    "requiredInputs": [
        "apiCachingBehavior",
        "apiId",
        "ttl",
        "type"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering ApiCache resources.\n",
        "properties": {
            "apiCachingBehavior": {
                "type": "string",
                "description": "Caching behavior. Valid values are `FULL_REQUEST_CACHING` and `PER_RESOLVER_CACHING`.\n"
            },
            "apiId": {
                "type": "string",
                "description": "GraphQL API ID.\n"
            },
            "atRestEncryptionEnabled": {
                "type": "boolean",
                "description": "At-rest encryption flag for cache. You cannot update this setting after creation.\n",
                "willReplaceOnChanges": true
            },
            "transitEncryptionEnabled": {
                "type": "boolean",
                "description": "Transit encryption flag when connecting to cache. You cannot update this setting after creation.\n",
                "willReplaceOnChanges": true
            },
            "ttl": {
                "type": "integer",
                "description": "TTL in seconds for cache entries.\n"
            },
            "type": {
                "type": "string",
                "description": "Cache instance type. Valid values are `SMALL`, `MEDIUM`, `LARGE`, `XLARGE`, `LARGE_2X`, `LARGE_4X`, `LARGE_8X`, `LARGE_12X`, `T2_SMALL`, `T2_MEDIUM`, `R4_LARGE`, `R4_XLARGE`, `R4_2XLARGE`, `R4_4XLARGE`, `R4_8XLARGE`.\n"
            }
        },
        "type": "object"
    }
}