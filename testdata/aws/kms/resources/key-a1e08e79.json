{
    "properties": {
        "arn": {
            "type": "string",
            "description": "The Amazon Resource Name (ARN) of the key.\n"
        },
        "bypassPolicyLockoutSafetyCheck": {
            "type": "boolean",
            "description": "A flag to indicate whether to bypass the key policy lockout safety check.\nSetting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.\nFor more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.\nThe default value is `false`.\n"
        },
        "customKeyStoreId": {
            "type": "string",
            "description": "ID of the KMS [Custom Key Store](https://docs.aws.amazon.com/kms/latest/developerguide/create-cmk-keystore.html) where the key will be stored instead of KMS (eg CloudHSM).\n"
        },
        "customerMasterKeySpec": {
            "type": "string",
            "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.\nValid values: `SYMMETRIC_DEFAULT`,  `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`. For help with choosing a key spec, see the [AWS KMS Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html).\n"
        },
        "deletionWindowInDays": {
            "type": "integer",
            "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.\nIf you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.\nIf the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.\n"
        },
        "description": {
            "type": "string",
            "description": "The description of the key as viewed in AWS console.\n"
        },
        "enableKeyRotation": {
            "type": "boolean",
            "description": "Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) is enabled. Defaults to `false`.\n"
        },
        "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether the key is enabled. Defaults to `true`.\n"
        },
        "keyId": {
            "type": "string",
            "description": "The globally unique identifier for the key.\n"
        },
        "keyUsage": {
            "type": "string",
            "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT`, `SIGN_VERIFY`, or `GENERATE_VERIFY_MAC`.\nDefaults to `ENCRYPT_DECRYPT`.\n"
        },
        "multiRegion": {
            "type": "boolean",
            "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`.\n"
        },
        "policy": {
            "type": "string",
            "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws.iam.getPolicyDocument`, in the form that designates a principal, can be used.\n\n\u003e **NOTE:** Note: All KMS keys must have a key policy. If a key policy is not specified, AWS gives the KMS key a [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) that gives all principals in the owning account unlimited access to all KMS operations for the key. This default key policy effectively delegates all access control to IAM policies and KMS grants.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        }
    },
    "required": [
        "arn",
        "description",
        "keyId",
        "multiRegion",
        "policy",
        "tagsAll"
    ],
    "inputProperties": {
        "bypassPolicyLockoutSafetyCheck": {
            "type": "boolean",
            "description": "A flag to indicate whether to bypass the key policy lockout safety check.\nSetting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.\nFor more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.\nThe default value is `false`.\n"
        },
        "customKeyStoreId": {
            "type": "string",
            "description": "ID of the KMS [Custom Key Store](https://docs.aws.amazon.com/kms/latest/developerguide/create-cmk-keystore.html) where the key will be stored instead of KMS (eg CloudHSM).\n",
            "willReplaceOnChanges": true
        },
        "customerMasterKeySpec": {
            "type": "string",
            "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.\nValid values: `SYMMETRIC_DEFAULT`,  `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`. For help with choosing a key spec, see the [AWS KMS Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html).\n",
            "willReplaceOnChanges": true
        },
        "deletionWindowInDays": {
            "type": "integer",
            "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.\nIf you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.\nIf the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.\n"
        },
        "description": {
            "type": "string",
            "description": "The description of the key as viewed in AWS console.\n"
        },
        "enableKeyRotation": {
            "type": "boolean",
            "description": "Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) is enabled. Defaults to `false`.\n"
        },
        "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether the key is enabled. Defaults to `true`.\n"
        },
        "keyUsage": {
            "type": "string",
            "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT`, `SIGN_VERIFY`, or `GENERATE_VERIFY_MAC`.\nDefaults to `ENCRYPT_DECRYPT`.\n",
            "willReplaceOnChanges": true
        },
        "multiRegion": {
            "type": "boolean",
            "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`.\n",
            "willReplaceOnChanges": true
        },
        "policy": {
            "type": "string",
            "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws.iam.getPolicyDocument`, in the form that designates a principal, can be used.\n\n\u003e **NOTE:** Note: All KMS keys must have a key policy. If a key policy is not specified, AWS gives the KMS key a [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) that gives all principals in the owning account unlimited access to all KMS operations for the key. This default key policy effectively delegates all access control to IAM policies and KMS grants.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        }
    },
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Key resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "The Amazon Resource Name (ARN) of the key.\n"
            },
            "bypassPolicyLockoutSafetyCheck": {
                "type": "boolean",
                "description": "A flag to indicate whether to bypass the key policy lockout safety check.\nSetting this value to true increases the risk that the KMS key becomes unmanageable. Do not set this value to true indiscriminately.\nFor more information, refer to the scenario in the [Default Key Policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default-allow-root-enable-iam) section in the _AWS Key Management Service Developer Guide_.\nThe default value is `false`.\n"
            },
            "customKeyStoreId": {
                "type": "string",
                "description": "ID of the KMS [Custom Key Store](https://docs.aws.amazon.com/kms/latest/developerguide/create-cmk-keystore.html) where the key will be stored instead of KMS (eg CloudHSM).\n",
                "willReplaceOnChanges": true
            },
            "customerMasterKeySpec": {
                "type": "string",
                "description": "Specifies whether the key contains a symmetric key or an asymmetric key pair and the encryption algorithms or signing algorithms that the key supports.\nValid values: `SYMMETRIC_DEFAULT`,  `RSA_2048`, `RSA_3072`, `RSA_4096`, `HMAC_256`, `ECC_NIST_P256`, `ECC_NIST_P384`, `ECC_NIST_P521`, or `ECC_SECG_P256K1`. Defaults to `SYMMETRIC_DEFAULT`. For help with choosing a key spec, see the [AWS KMS Developer Guide](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-choose.html).\n",
                "willReplaceOnChanges": true
            },
            "deletionWindowInDays": {
                "type": "integer",
                "description": "The waiting period, specified in number of days. After the waiting period ends, AWS KMS deletes the KMS key.\nIf you specify a value, it must be between `7` and `30`, inclusive. If you do not specify a value, it defaults to `30`.\nIf the KMS key is a multi-Region primary key with replicas, the waiting period begins when the last of its replica keys is deleted. Otherwise, the waiting period begins immediately.\n"
            },
            "description": {
                "type": "string",
                "description": "The description of the key as viewed in AWS console.\n"
            },
            "enableKeyRotation": {
                "type": "boolean",
                "description": "Specifies whether [key rotation](http://docs.aws.amazon.com/kms/latest/developerguide/rotate-keys.html) is enabled. Defaults to `false`.\n"
            },
            "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether the key is enabled. Defaults to `true`.\n"
            },
            "keyId": {
                "type": "string",
                "description": "The globally unique identifier for the key.\n"
            },
            "keyUsage": {
                "type": "string",
                "description": "Specifies the intended use of the key. Valid values: `ENCRYPT_DECRYPT`, `SIGN_VERIFY`, or `GENERATE_VERIFY_MAC`.\nDefaults to `ENCRYPT_DECRYPT`.\n",
                "willReplaceOnChanges": true
            },
            "multiRegion": {
                "type": "boolean",
                "description": "Indicates whether the KMS key is a multi-Region (`true`) or regional (`false`) key. Defaults to `false`.\n",
                "willReplaceOnChanges": true
            },
            "policy": {
                "type": "string",
                "description": "A valid policy JSON document. Although this is a key policy, not an IAM policy, an `aws.iam.getPolicyDocument`, in the form that designates a principal, can be used.\n\n\u003e **NOTE:** Note: All KMS keys must have a key policy. If a key policy is not specified, AWS gives the KMS key a [default key policy](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html#key-policy-default) that gives all principals in the owning account unlimited access to all KMS operations for the key. This default key policy effectively delegates all access control to IAM policies and KMS grants.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags to assign to the object. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            }
        },
        "type": "object"
    }
}