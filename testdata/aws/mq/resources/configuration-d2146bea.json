{
            "properties": {
                "arn": {
                    "type": "string",
                    "description": "ARN of the configuration.\n"
                },
                "authenticationStrategy": {
                    "type": "string",
                    "description": "Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n"
                },
                "data": {
                    "type": "string",
                    "description": "Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the configuration.\n"
                },
                "engineType": {
                    "type": "string",
                    "description": "Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n"
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Version of the broker engine.\n"
                },
                "latestRevision": {
                    "type": "integer",
                    "description": "Latest revision of the configuration.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the configuration.\n\nThe following arguments are optional:\n"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                },
                "tagsAll": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                    "deprecationMessage": "Please use `tags` instead.",
                    "secret": true
                }
            },
            "required": [
                "arn",
                "authenticationStrategy",
                "data",
                "engineType",
                "engineVersion",
                "latestRevision",
                "name",
                "tagsAll"
            ],
            "inputProperties": {
                "authenticationStrategy": {
                    "type": "string",
                    "description": "Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n"
                },
                "data": {
                    "type": "string",
                    "description": "Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the configuration.\n"
                },
                "engineType": {
                    "type": "string",
                    "description": "Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n",
                    "willReplaceOnChanges": true
                },
                "engineVersion": {
                    "type": "string",
                    "description": "Version of the broker engine.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "Name of the configuration.\n\nThe following arguments are optional:\n",
                    "willReplaceOnChanges": true
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                }
            },
            "requiredInputs": [
                "data",
                "engineType",
                "engineVersion"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Configuration resources.\n",
                "properties": {
                    "arn": {
                        "type": "string",
                        "description": "ARN of the configuration.\n"
                    },
                    "authenticationStrategy": {
                        "type": "string",
                        "description": "Authentication strategy associated with the configuration. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n"
                    },
                    "data": {
                        "type": "string",
                        "description": "Broker configuration in XML format for `ActiveMQ` or [Cuttlefish](https://github.com/Kyorai/cuttlefish) format for `RabbitMQ`. See [official docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/amazon-mq-broker-configuration-parameters.html) for supported parameters and format of the XML.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the configuration.\n"
                    },
                    "engineType": {
                        "type": "string",
                        "description": "Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n",
                        "willReplaceOnChanges": true
                    },
                    "engineVersion": {
                        "type": "string",
                        "description": "Version of the broker engine.\n",
                        "willReplaceOnChanges": true
                    },
                    "latestRevision": {
                        "type": "integer",
                        "description": "Latest revision of the configuration.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the configuration.\n\nThe following arguments are optional:\n",
                        "willReplaceOnChanges": true
                    },
                    "tags": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
                    },
                    "tagsAll": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                        "deprecationMessage": "Please use `tags` instead.",
                        "secret": true
                    }
                },
                "type": "object"
            }
        }