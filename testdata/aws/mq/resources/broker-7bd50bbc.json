{
    "properties": {
        "applyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any broker modifications are applied immediately, or during the next maintenance window. Default is `false`.\n"
        },
        "arn": {
            "type": "string",
            "description": "ARN of the broker.\n"
        },
        "authenticationStrategy": {
            "type": "string",
            "description": "Authentication strategy used to secure the broker. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n"
        },
        "autoMinorVersionUpgrade": {
            "type": "boolean",
            "description": "Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.\n"
        },
        "brokerName": {
            "type": "string",
            "description": "Name of the broker.\n"
        },
        "configuration": {
            "$ref": "#/types/aws:mq/BrokerConfiguration:BrokerConfiguration",
            "description": "Configuration block for broker configuration. Applies to `engine_type` of `ActiveMQ` and `RabbitMQ` only. Detailed below.\n"
        },
        "deploymentMode": {
            "type": "string",
            "description": "Deployment mode of the broker. Valid values are `SINGLE_INSTANCE`, `ACTIVE_STANDBY_MULTI_AZ`, and `CLUSTER_MULTI_AZ`. Default is `SINGLE_INSTANCE`.\n"
        },
        "encryptionOptions": {
            "$ref": "#/types/aws:mq/BrokerEncryptionOptions:BrokerEncryptionOptions",
            "description": "Configuration block containing encryption options. Detailed below.\n"
        },
        "engineType": {
            "type": "string",
            "description": "Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n"
        },
        "engineVersion": {
            "type": "string",
            "description": "Version of the broker engine. See the [AmazonMQ Broker Engine docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html) for supported versions. For example, `5.17.6`.\n"
        },
        "hostInstanceType": {
            "type": "string",
            "description": "Broker's instance type. For example, `mq.t3.micro`, `mq.m5.large`.\n"
        },
        "instances": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:mq/BrokerInstance:BrokerInstance"
            },
            "description": "List of information about allocated brokers (both active \u0026 standby).\n* `instances.0.console_url` - The URL of the [ActiveMQ Web Console](http://activemq.apache.org/web-console.html) or the [RabbitMQ Management UI](https://www.rabbitmq.com/management.html#external-monitoring) depending on `engine_type`.\n* `instances.0.ip_address` - IP Address of the broker.\n* `instances.0.endpoints` - Broker's wire-level protocol endpoints in the following order \u0026 format referenceable e.g., as `instances.0.endpoints.0` (SSL):\n* For `ActiveMQ`:\n* `ssl://broker-id.mq.us-west-2.amazonaws.com:61617`\n* `amqp+ssl://broker-id.mq.us-west-2.amazonaws.com:5671`\n* `stomp+ssl://broker-id.mq.us-west-2.amazonaws.com:61614`\n* `mqtt+ssl://broker-id.mq.us-west-2.amazonaws.com:8883`\n* `wss://broker-id.mq.us-west-2.amazonaws.com:61619`\n* For `RabbitMQ`:\n* `amqps://broker-id.mq.us-west-2.amazonaws.com:5671`\n"
        },
        "ldapServerMetadata": {
            "$ref": "#/types/aws:mq/BrokerLdapServerMetadata:BrokerLdapServerMetadata",
            "description": "Configuration block for the LDAP server used to authenticate and authorize connections to the broker. Not supported for `engine_type` `RabbitMQ`. Detailed below. (Currently, AWS may not process changes to LDAP server metadata.)\n"
        },
        "logs": {
            "$ref": "#/types/aws:mq/BrokerLogs:BrokerLogs",
            "description": "Configuration block for the logging configuration of the broker. Detailed below.\n"
        },
        "maintenanceWindowStartTime": {
            "$ref": "#/types/aws:mq/BrokerMaintenanceWindowStartTime:BrokerMaintenanceWindowStartTime",
            "description": "Configuration block for the maintenance window start time. Detailed below.\n"
        },
        "publiclyAccessible": {
            "type": "boolean",
            "description": "Whether to enable connections from applications outside of the VPC that hosts the broker's subnets.\n"
        },
        "securityGroups": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of security group IDs assigned to the broker.\n"
        },
        "storageType": {
            "type": "string",
            "description": "Storage type of the broker. For `engine_type` `ActiveMQ`, the valid values are `efs` and `ebs`, and the AWS-default is `efs`. For `engine_type` `RabbitMQ`, only `ebs` is supported. When using `ebs`, only the `mq.m5` broker instance type family is supported.\n"
        },
        "subnetIds": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of subnet IDs in which to launch the broker. A `SINGLE_INSTANCE` deployment requires one subnet. An `ACTIVE_STANDBY_MULTI_AZ` deployment requires multiple subnets.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Map of tags to assign to the broker. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        },
        "users": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:mq/BrokerUser:BrokerUser"
            },
            "description": "Configuration block for broker users. For `engine_type` of `RabbitMQ`, Amazon MQ does not return broker users preventing this resource from making user updates and drift detection. Detailed below.\n\nThe following arguments are optional:\n"
        }
    },
    "required": [
        "arn",
        "authenticationStrategy",
        "brokerName",
        "configuration",
        "engineType",
        "engineVersion",
        "hostInstanceType",
        "instances",
        "maintenanceWindowStartTime",
        "storageType",
        "subnetIds",
        "tagsAll",
        "users"
    ],
    "inputProperties": {
        "applyImmediately": {
            "type": "boolean",
            "description": "Specifies whether any broker modifications are applied immediately, or during the next maintenance window. Default is `false`.\n"
        },
        "authenticationStrategy": {
            "type": "string",
            "description": "Authentication strategy used to secure the broker. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n"
        },
        "autoMinorVersionUpgrade": {
            "type": "boolean",
            "description": "Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.\n"
        },
        "brokerName": {
            "type": "string",
            "description": "Name of the broker.\n",
            "willReplaceOnChanges": true
        },
        "configuration": {
            "$ref": "#/types/aws:mq/BrokerConfiguration:BrokerConfiguration",
            "description": "Configuration block for broker configuration. Applies to `engine_type` of `ActiveMQ` and `RabbitMQ` only. Detailed below.\n"
        },
        "deploymentMode": {
            "type": "string",
            "description": "Deployment mode of the broker. Valid values are `SINGLE_INSTANCE`, `ACTIVE_STANDBY_MULTI_AZ`, and `CLUSTER_MULTI_AZ`. Default is `SINGLE_INSTANCE`.\n",
            "willReplaceOnChanges": true
        },
        "encryptionOptions": {
            "$ref": "#/types/aws:mq/BrokerEncryptionOptions:BrokerEncryptionOptions",
            "description": "Configuration block containing encryption options. Detailed below.\n",
            "willReplaceOnChanges": true
        },
        "engineType": {
            "type": "string",
            "description": "Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n",
            "willReplaceOnChanges": true
        },
        "engineVersion": {
            "type": "string",
            "description": "Version of the broker engine. See the [AmazonMQ Broker Engine docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html) for supported versions. For example, `5.17.6`.\n"
        },
        "hostInstanceType": {
            "type": "string",
            "description": "Broker's instance type. For example, `mq.t3.micro`, `mq.m5.large`.\n"
        },
        "ldapServerMetadata": {
            "$ref": "#/types/aws:mq/BrokerLdapServerMetadata:BrokerLdapServerMetadata",
            "description": "Configuration block for the LDAP server used to authenticate and authorize connections to the broker. Not supported for `engine_type` `RabbitMQ`. Detailed below. (Currently, AWS may not process changes to LDAP server metadata.)\n",
            "willReplaceOnChanges": true
        },
        "logs": {
            "$ref": "#/types/aws:mq/BrokerLogs:BrokerLogs",
            "description": "Configuration block for the logging configuration of the broker. Detailed below.\n"
        },
        "maintenanceWindowStartTime": {
            "$ref": "#/types/aws:mq/BrokerMaintenanceWindowStartTime:BrokerMaintenanceWindowStartTime",
            "description": "Configuration block for the maintenance window start time. Detailed below.\n"
        },
        "publiclyAccessible": {
            "type": "boolean",
            "description": "Whether to enable connections from applications outside of the VPC that hosts the broker's subnets.\n",
            "willReplaceOnChanges": true
        },
        "securityGroups": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of security group IDs assigned to the broker.\n"
        },
        "storageType": {
            "type": "string",
            "description": "Storage type of the broker. For `engine_type` `ActiveMQ`, the valid values are `efs` and `ebs`, and the AWS-default is `efs`. For `engine_type` `RabbitMQ`, only `ebs` is supported. When using `ebs`, only the `mq.m5` broker instance type family is supported.\n"
        },
        "subnetIds": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "List of subnet IDs in which to launch the broker. A `SINGLE_INSTANCE` deployment requires one subnet. An `ACTIVE_STANDBY_MULTI_AZ` deployment requires multiple subnets.\n",
            "willReplaceOnChanges": true
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Map of tags to assign to the broker. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "users": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:mq/BrokerUser:BrokerUser"
            },
            "description": "Configuration block for broker users. For `engine_type` of `RabbitMQ`, Amazon MQ does not return broker users preventing this resource from making user updates and drift detection. Detailed below.\n\nThe following arguments are optional:\n"
        }
    },
    "requiredInputs": [
        "engineType",
        "engineVersion",
        "hostInstanceType",
        "users"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering Broker resources.\n",
        "properties": {
            "applyImmediately": {
                "type": "boolean",
                "description": "Specifies whether any broker modifications are applied immediately, or during the next maintenance window. Default is `false`.\n"
            },
            "arn": {
                "type": "string",
                "description": "ARN of the broker.\n"
            },
            "authenticationStrategy": {
                "type": "string",
                "description": "Authentication strategy used to secure the broker. Valid values are `simple` and `ldap`. `ldap` is not supported for `engine_type` `RabbitMQ`.\n"
            },
            "autoMinorVersionUpgrade": {
                "type": "boolean",
                "description": "Whether to automatically upgrade to new minor versions of brokers as Amazon MQ makes releases available.\n"
            },
            "brokerName": {
                "type": "string",
                "description": "Name of the broker.\n",
                "willReplaceOnChanges": true
            },
            "configuration": {
                "$ref": "#/types/aws:mq/BrokerConfiguration:BrokerConfiguration",
                "description": "Configuration block for broker configuration. Applies to `engine_type` of `ActiveMQ` and `RabbitMQ` only. Detailed below.\n"
            },
            "deploymentMode": {
                "type": "string",
                "description": "Deployment mode of the broker. Valid values are `SINGLE_INSTANCE`, `ACTIVE_STANDBY_MULTI_AZ`, and `CLUSTER_MULTI_AZ`. Default is `SINGLE_INSTANCE`.\n",
                "willReplaceOnChanges": true
            },
            "encryptionOptions": {
                "$ref": "#/types/aws:mq/BrokerEncryptionOptions:BrokerEncryptionOptions",
                "description": "Configuration block containing encryption options. Detailed below.\n",
                "willReplaceOnChanges": true
            },
            "engineType": {
                "type": "string",
                "description": "Type of broker engine. Valid values are `ActiveMQ` and `RabbitMQ`.\n",
                "willReplaceOnChanges": true
            },
            "engineVersion": {
                "type": "string",
                "description": "Version of the broker engine. See the [AmazonMQ Broker Engine docs](https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/broker-engine.html) for supported versions. For example, `5.17.6`.\n"
            },
            "hostInstanceType": {
                "type": "string",
                "description": "Broker's instance type. For example, `mq.t3.micro`, `mq.m5.large`.\n"
            },
            "instances": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:mq/BrokerInstance:BrokerInstance"
                },
                "description": "List of information about allocated brokers (both active \u0026 standby).\n* `instances.0.console_url` - The URL of the [ActiveMQ Web Console](http://activemq.apache.org/web-console.html) or the [RabbitMQ Management UI](https://www.rabbitmq.com/management.html#external-monitoring) depending on `engine_type`.\n* `instances.0.ip_address` - IP Address of the broker.\n* `instances.0.endpoints` - Broker's wire-level protocol endpoints in the following order \u0026 format referenceable e.g., as `instances.0.endpoints.0` (SSL):\n* For `ActiveMQ`:\n* `ssl://broker-id.mq.us-west-2.amazonaws.com:61617`\n* `amqp+ssl://broker-id.mq.us-west-2.amazonaws.com:5671`\n* `stomp+ssl://broker-id.mq.us-west-2.amazonaws.com:61614`\n* `mqtt+ssl://broker-id.mq.us-west-2.amazonaws.com:8883`\n* `wss://broker-id.mq.us-west-2.amazonaws.com:61619`\n* For `RabbitMQ`:\n* `amqps://broker-id.mq.us-west-2.amazonaws.com:5671`\n"
            },
            "ldapServerMetadata": {
                "$ref": "#/types/aws:mq/BrokerLdapServerMetadata:BrokerLdapServerMetadata",
                "description": "Configuration block for the LDAP server used to authenticate and authorize connections to the broker. Not supported for `engine_type` `RabbitMQ`. Detailed below. (Currently, AWS may not process changes to LDAP server metadata.)\n",
                "willReplaceOnChanges": true
            },
            "logs": {
                "$ref": "#/types/aws:mq/BrokerLogs:BrokerLogs",
                "description": "Configuration block for the logging configuration of the broker. Detailed below.\n"
            },
            "maintenanceWindowStartTime": {
                "$ref": "#/types/aws:mq/BrokerMaintenanceWindowStartTime:BrokerMaintenanceWindowStartTime",
                "description": "Configuration block for the maintenance window start time. Detailed below.\n"
            },
            "publiclyAccessible": {
                "type": "boolean",
                "description": "Whether to enable connections from applications outside of the VPC that hosts the broker's subnets.\n",
                "willReplaceOnChanges": true
            },
            "securityGroups": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "List of security group IDs assigned to the broker.\n"
            },
            "storageType": {
                "type": "string",
                "description": "Storage type of the broker. For `engine_type` `ActiveMQ`, the valid values are `efs` and `ebs`, and the AWS-default is `efs`. For `engine_type` `RabbitMQ`, only `ebs` is supported. When using `ebs`, only the `mq.m5` broker instance type family is supported.\n"
            },
            "subnetIds": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "List of subnet IDs in which to launch the broker. A `SINGLE_INSTANCE` deployment requires one subnet. An `ACTIVE_STANDBY_MULTI_AZ` deployment requires multiple subnets.\n",
                "willReplaceOnChanges": true
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Map of tags to assign to the broker. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            },
            "users": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:mq/BrokerUser:BrokerUser"
                },
                "description": "Configuration block for broker users. For `engine_type` of `RabbitMQ`, Amazon MQ does not return broker users preventing this resource from making user updates and drift detection. Detailed below.\n\nThe following arguments are optional:\n"
            }
        },
        "type": "object"
    }
}