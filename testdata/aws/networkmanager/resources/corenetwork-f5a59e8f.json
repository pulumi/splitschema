{
    "properties": {
        "arn": {
            "type": "string",
            "description": "Core Network Amazon Resource Name (ARN).\n"
        },
        "basePolicyDocument": {
            "type": "string",
            "description": "Sets the base policy document for the core network. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information.\n"
        },
        "basePolicyRegion": {
            "type": "string",
            "description": "The base policy created by setting the `create_base_policy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `base_policy_region` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.\n",
            "deprecationMessage": "Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider."
        },
        "basePolicyRegions": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of regions to add to the base policy. The base policy created by setting the `create_base_policy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `base_policy_regions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.\n"
        },
        "createBasePolicy": {
            "type": "boolean",
            "description": "Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `aws.networkmanager.CoreNetworkPolicyAttachment` resource.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
        },
        "createdAt": {
            "type": "string",
            "description": "Timestamp when a core network was created.\n"
        },
        "description": {
            "type": "string",
            "description": "Description of the Core Network.\n"
        },
        "edges": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:networkmanager/CoreNetworkEdge:CoreNetworkEdge"
            },
            "description": "One or more blocks detailing the edges within a core network. Detailed below.\n"
        },
        "globalNetworkId": {
            "type": "string",
            "description": "The ID of the global network that a core network will be a part of.\n"
        },
        "segments": {
            "type": "array",
            "items": {
                "$ref": "#/types/aws:networkmanager/CoreNetworkSegment:CoreNetworkSegment"
            },
            "description": "One or more blocks detailing the segments within a core network. Detailed below.\n"
        },
        "state": {
            "type": "string",
            "description": "Current state of a core network.\n"
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Key-value tags for the Core Network. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        },
        "tagsAll": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
            "deprecationMessage": "Please use `tags` instead.",
            "secret": true
        }
    },
    "required": [
        "arn",
        "createdAt",
        "edges",
        "globalNetworkId",
        "segments",
        "state",
        "tagsAll"
    ],
    "inputProperties": {
        "basePolicyDocument": {
            "type": "string",
            "description": "Sets the base policy document for the core network. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information.\n"
        },
        "basePolicyRegion": {
            "type": "string",
            "description": "The base policy created by setting the `create_base_policy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `base_policy_region` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.\n",
            "deprecationMessage": "Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider."
        },
        "basePolicyRegions": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "description": "A list of regions to add to the base policy. The base policy created by setting the `create_base_policy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `base_policy_regions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.\n"
        },
        "createBasePolicy": {
            "type": "boolean",
            "description": "Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `aws.networkmanager.CoreNetworkPolicyAttachment` resource.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
        },
        "description": {
            "type": "string",
            "description": "Description of the Core Network.\n"
        },
        "globalNetworkId": {
            "type": "string",
            "description": "The ID of the global network that a core network will be a part of.\n",
            "willReplaceOnChanges": true
        },
        "tags": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            },
            "description": "Key-value tags for the Core Network. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
        }
    },
    "requiredInputs": [
        "globalNetworkId"
    ],
    "stateInputs": {
        "description": "Input properties used for looking up and filtering CoreNetwork resources.\n",
        "properties": {
            "arn": {
                "type": "string",
                "description": "Core Network Amazon Resource Name (ARN).\n"
            },
            "basePolicyDocument": {
                "type": "string",
                "description": "Sets the base policy document for the core network. Refer to the [Core network policies documentation](https://docs.aws.amazon.com/network-manager/latest/cloudwan/cloudwan-policy-change-sets.html) for more information.\n"
            },
            "basePolicyRegion": {
                "type": "string",
                "description": "The base policy created by setting the `create_base_policy` argument to `true` requires a region to be set in the `edge-locations`, `location` key. If `base_policy_region` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.\n",
                "deprecationMessage": "Use the base_policy_regions argument instead. This argument will be removed in the next major version of the provider."
            },
            "basePolicyRegions": {
                "type": "array",
                "items": {
                    "type": "string"
                },
                "description": "A list of regions to add to the base policy. The base policy created by setting the `create_base_policy` argument to `true` requires one or more regions to be set in the `edge-locations`, `location` key. If `base_policy_regions` is not specified, the region used in the base policy defaults to the region specified in the `provider` block.\n"
            },
            "createBasePolicy": {
                "type": "boolean",
                "description": "Specifies whether to create a base policy when a core network is created or updated. A base policy is created and set to `LIVE` to allow attachments to the core network (e.g. VPC Attachments) before applying a policy document provided using the `aws.networkmanager.CoreNetworkPolicyAttachment` resource. This base policy is needed if your core network does not have any `LIVE` policies and your policy document has static routes pointing to VPC attachments and you want to attach your VPCs to the core network before applying the desired policy document. Valid values are `true` or `false`. An example of this Pulumi snippet can be found above for VPC Attachment in a single region and for VPC Attachment multi-region. An example base policy is shown below. This base policy is overridden with the policy that you specify in the `aws.networkmanager.CoreNetworkPolicyAttachment` resource.\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n    }\n}\n```\n```yaml\n{}\n```\n"
            },
            "createdAt": {
                "type": "string",
                "description": "Timestamp when a core network was created.\n"
            },
            "description": {
                "type": "string",
                "description": "Description of the Core Network.\n"
            },
            "edges": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:networkmanager/CoreNetworkEdge:CoreNetworkEdge"
                },
                "description": "One or more blocks detailing the edges within a core network. Detailed below.\n"
            },
            "globalNetworkId": {
                "type": "string",
                "description": "The ID of the global network that a core network will be a part of.\n",
                "willReplaceOnChanges": true
            },
            "segments": {
                "type": "array",
                "items": {
                    "$ref": "#/types/aws:networkmanager/CoreNetworkSegment:CoreNetworkSegment"
                },
                "description": "One or more blocks detailing the segments within a core network. Detailed below.\n"
            },
            "state": {
                "type": "string",
                "description": "Current state of a core network.\n"
            },
            "tags": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "Key-value tags for the Core Network. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"
            },
            "tagsAll": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "description": "A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.\n",
                "deprecationMessage": "Please use `tags` instead.",
                "secret": true
            }
        },
        "type": "object"
    }
}